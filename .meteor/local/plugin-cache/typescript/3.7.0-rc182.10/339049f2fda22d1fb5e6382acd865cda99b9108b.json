{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/michal-pc/Dokumenty/CubeMaster/client/imports/components/algSettings.tsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx",["flow",{}],"nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}]],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"client/imports/components/algSettings.tsx","filename":"/home/michal-pc/Dokumenty/CubeMaster/client/imports/components/algSettings.tsx","inputSourceMap":{"version":3,"file":"client/imports/components/algSettings.tsx","sourceRoot":"","sources":["client/imports/components/algSettings.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { FunctionComponent, useState } from 'react';\nimport { Button, List, Segment } from 'semantic-ui-react';\nimport groupBy from 'lodash/groupBy';\nimport Slider, { createSliderWithTooltip } from 'rc-slider';\nimport { getAverage } from '../../utils';\nimport { algorithm } from '../../../server/imports/const';\n\nconst SliderTooltip = createSliderWithTooltip(Slider);\n\ntype Props = {\n  algorithms: any; // TODO\n  currentCategory: any; // TODO\n  onActivateAll: () => void;\n  onToggleActive: (algorithm: algorithm) => void;\n  onDeactivateAll: () => void;\n};\n\nconst AlgSettings: FunctionComponent<Props> = ({\n  algorithms,\n  currentCategory: { settingsDisabled },\n  onActivateAll,\n  onToggleActive,\n  onDeactivateAll\n}) => {\n  const [detailsLevel, setDetailsLevel] = useState(1);\n\n  const algorithmsGrouped =\n    detailsLevel === 0\n      ? groupBy(algorithms, 'category')\n      : detailsLevel === 1\n      ? groupBy(algorithms, 'type')\n      : detailsLevel === 2\n      ? groupBy(algorithms, 'subtype')\n      : [];\n\n  return (\n    <section\n      className={`algorithm-settings${settingsDisabled ? ' disabled' : ''}`}\n    >\n      <List divided verticalAlign=\"middle\">\n        <List.Item>\n          <List.Content floated=\"right\">\n            <div className=\"grouping-level\">\n              <div className=\"title\">Grouping level</div>\n              <SliderTooltip\n                min={0}\n                max={2}\n                onChange={setDetailsLevel}\n                tipFormatter={(value: number) =>\n                  ['None', 'General', 'Precise'][value]\n                }\n                tipProps={{\n                  placement: 'bottom',\n                  visible: true\n                }}\n                value={detailsLevel}\n              />\n            </div>\n          </List.Content>\n          <List.Content>\n            {!settingsDisabled && (\n              <div className=\"controls\">\n                <Button\n                  secondary\n                  onClick={settingsDisabled ? undefined : onActivateAll}\n                >\n                  Select all\n                </Button>\n                <Button\n                  secondary\n                  onClick={settingsDisabled ? undefined : onDeactivateAll}\n                >\n                  Unselect all\n                </Button>\n              </div>\n            )}\n          </List.Content>\n        </List.Item>\n      </List>\n\n      {Object.entries(algorithmsGrouped).map(([name, values], index) => (\n        <Segment key={index}>\n          <h5>{name}</h5>\n          {values.map(algorithm => (\n            <div\n              key={algorithm._id}\n              className={`algorithm${\n                settingsDisabled || algorithm.active ? ' active' : ''\n              }`}\n              onClick={() =>\n                settingsDisabled ? null : onToggleActive(algorithm)\n              }\n            >\n              <img src={`/images/${algorithm.image}`} />\n              <div className=\"results-average\">\n                {getAverage(algorithm && algorithm.results)}\n              </div>\n            </div>\n          ))}\n        </Segment>\n      ))}\n    </section>\n  );\n};\n\nexport default AlgSettings;\n"]},"passPerPreset":false,"envName":"development","cwd":"/home/michal-pc/Dokumenty/CubeMaster","root":"/home/michal-pc/Dokumenty/CubeMaster","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.7.1","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"TSModuleBlock":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/home/michal-pc/Dokumenty/CubeMaster/client/imports/components/algSettings.tsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/imports/components/algSettings.tsx"}},"code":"var _slicedToArray;\n\nmodule.link(\"@babel/runtime/helpers/slicedToArray\", {\n  default: function (v) {\n    _slicedToArray = v;\n  }\n}, 0);\nvar React, useState;\nmodule.link(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  },\n  useState: function (v) {\n    useState = v;\n  }\n}, 0);\nvar Button, List, Segment;\nmodule.link(\"semantic-ui-react\", {\n  Button: function (v) {\n    Button = v;\n  },\n  List: function (v) {\n    List = v;\n  },\n  Segment: function (v) {\n    Segment = v;\n  }\n}, 1);\nvar groupBy;\nmodule.link(\"lodash/groupBy\", {\n  \"default\": function (v) {\n    groupBy = v;\n  }\n}, 2);\nvar Slider, createSliderWithTooltip;\nmodule.link(\"rc-slider\", {\n  \"default\": function (v) {\n    Slider = v;\n  },\n  createSliderWithTooltip: function (v) {\n    createSliderWithTooltip = v;\n  }\n}, 3);\nvar getAverage;\nmodule.link(\"../../utils\", {\n  getAverage: function (v) {\n    getAverage = v;\n  }\n}, 4);\nvar SliderTooltip = createSliderWithTooltip(Slider);\n\nvar AlgSettings = function (_ref) {\n  var algorithms = _ref.algorithms,\n      settingsDisabled = _ref.currentCategory.settingsDisabled,\n      onActivateAll = _ref.onActivateAll,\n      onToggleActive = _ref.onToggleActive,\n      onDeactivateAll = _ref.onDeactivateAll;\n\n  var _useState = useState(1),\n      _useState2 = _slicedToArray(_useState, 2),\n      detailsLevel = _useState2[0],\n      setDetailsLevel = _useState2[1];\n\n  var algorithmsGrouped = detailsLevel === 0 ? groupBy(algorithms, 'category') : detailsLevel === 1 ? groupBy(algorithms, 'type') : detailsLevel === 2 ? groupBy(algorithms, 'subtype') : [];\n  return React.createElement(\"section\", {\n    className: \"algorithm-settings\" + (settingsDisabled ? ' disabled' : '')\n  }, React.createElement(List, {\n    divided: true,\n    verticalAlign: \"middle\"\n  }, React.createElement(List.Item, null, React.createElement(List.Content, {\n    floated: \"right\"\n  }, React.createElement(\"div\", {\n    className: \"grouping-level\"\n  }, React.createElement(\"div\", {\n    className: \"title\"\n  }, \"Grouping level\"), React.createElement(SliderTooltip, {\n    min: 0,\n    max: 2,\n    onChange: setDetailsLevel,\n    tipFormatter: function (value) {\n      return ['None', 'General', 'Precise'][value];\n    },\n    tipProps: {\n      placement: 'bottom',\n      visible: true\n    },\n    value: detailsLevel\n  }))), React.createElement(List.Content, null, !settingsDisabled && React.createElement(\"div\", {\n    className: \"controls\"\n  }, React.createElement(Button, {\n    secondary: true,\n    onClick: settingsDisabled ? undefined : onActivateAll\n  }, \"Select all\"), React.createElement(Button, {\n    secondary: true,\n    onClick: settingsDisabled ? undefined : onDeactivateAll\n  }, \"Unselect all\"))))), Object.entries(algorithmsGrouped).map(function (_ref2, index) {\n    var _ref3 = _slicedToArray(_ref2, 2),\n        name = _ref3[0],\n        values = _ref3[1];\n\n    return React.createElement(Segment, {\n      key: index\n    }, React.createElement(\"h5\", null, name), values.map(function (algorithm) {\n      return React.createElement(\"div\", {\n        key: algorithm._id,\n        className: \"algorithm\" + (settingsDisabled || algorithm.active ? ' active' : ''),\n        onClick: function () {\n          return settingsDisabled ? null : onToggleActive(algorithm);\n        }\n      }, React.createElement(\"img\", {\n        src: \"/images/\" + algorithm.image\n      }), React.createElement(\"div\", {\n        className: \"results-average\"\n      }, getAverage(algorithm && algorithm.results)));\n    }));\n  }));\n};\n\nmodule.exportDefault(AlgSettings);","map":{"version":3,"sources":["client/imports/components/algSettings.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { FunctionComponent, useState } from 'react';\nimport { Button, List, Segment } from 'semantic-ui-react';\nimport groupBy from 'lodash/groupBy';\nimport Slider, { createSliderWithTooltip } from 'rc-slider';\nimport { getAverage } from '../../utils';\nimport { algorithm } from '../../../server/imports/const';\n\nconst SliderTooltip = createSliderWithTooltip(Slider);\n\ntype Props = {\n  algorithms: any; // TODO\n  currentCategory: any; // TODO\n  onActivateAll: () => void;\n  onToggleActive: (algorithm: algorithm) => void;\n  onDeactivateAll: () => void;\n};\n\nconst AlgSettings: FunctionComponent<Props> = ({\n  algorithms,\n  currentCategory: { settingsDisabled },\n  onActivateAll,\n  onToggleActive,\n  onDeactivateAll\n}) => {\n  const [detailsLevel, setDetailsLevel] = useState(1);\n\n  const algorithmsGrouped =\n    detailsLevel === 0\n      ? groupBy(algorithms, 'category')\n      : detailsLevel === 1\n      ? groupBy(algorithms, 'type')\n      : detailsLevel === 2\n      ? groupBy(algorithms, 'subtype')\n      : [];\n\n  return (\n    <section\n      className={`algorithm-settings${settingsDisabled ? ' disabled' : ''}`}\n    >\n      <List divided verticalAlign=\"middle\">\n        <List.Item>\n          <List.Content floated=\"right\">\n            <div className=\"grouping-level\">\n              <div className=\"title\">Grouping level</div>\n              <SliderTooltip\n                min={0}\n                max={2}\n                onChange={setDetailsLevel}\n                tipFormatter={(value: number) =>\n                  ['None', 'General', 'Precise'][value]\n                }\n                tipProps={{\n                  placement: 'bottom',\n                  visible: true\n                }}\n                value={detailsLevel}\n              />\n            </div>\n          </List.Content>\n          <List.Content>\n            {!settingsDisabled && (\n              <div className=\"controls\">\n                <Button\n                  secondary\n                  onClick={settingsDisabled ? undefined : onActivateAll}\n                >\n                  Select all\n                </Button>\n                <Button\n                  secondary\n                  onClick={settingsDisabled ? undefined : onDeactivateAll}\n                >\n                  Unselect all\n                </Button>\n              </div>\n            )}\n          </List.Content>\n        </List.Item>\n      </List>\n\n      {Object.entries(algorithmsGrouped).map(([name, values], index) => (\n        <Segment key={index}>\n          <h5>{name}</h5>\n          {values.map(algorithm => (\n            <div\n              key={algorithm._id}\n              className={`algorithm${\n                settingsDisabled || algorithm.active ? ' active' : ''\n              }`}\n              onClick={() =>\n                settingsDisabled ? null : onToggleActive(algorithm)\n              }\n            >\n              <img src={`/images/${algorithm.image}`} />\n              <div className=\"results-average\">\n                {getAverage(algorithm && algorithm.results)}\n              </div>\n            </div>\n          ))}\n        </Segment>\n      ))}\n    </section>\n  );\n};\n\nexport default AlgSettings;\n"],"sourceRoot":""},"sourceType":"module","hash":"339049f2fda22d1fb5e6382acd865cda99b9108b"}
