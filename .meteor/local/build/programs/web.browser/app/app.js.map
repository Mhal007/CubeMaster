{"version":3,"sources":["meteor://ðŸ’»app/client/imports/lib/composer.tsx","meteor://ðŸ’»app/client/imports/lib/toasts.ts","meteor://ðŸ’»app/client/imports/components/results/index.ts","meteor://ðŸ’»app/client/imports/components/results/results.tsx","meteor://ðŸ’»app/client/imports/components/training/index.ts","meteor://ðŸ’»app/client/imports/components/training/training.tsx","meteor://ðŸ’»app/client/imports/components/about.tsx","meteor://ðŸ’»app/client/imports/components/algSettings.tsx","meteor://ðŸ’»app/client/imports/components/averages.tsx","meteor://ðŸ’»app/client/imports/components/home.tsx","meteor://ðŸ’»app/client/imports/components/loader.tsx","meteor://ðŸ’»app/client/imports/components/menuTop.tsx","meteor://ðŸ’»app/client/imports/components/router.tsx","meteor://ðŸ’»app/client/imports/components/timer.tsx","meteor://ðŸ’»app/client/imports/components/tipsAndTricks.tsx","meteor://ðŸ’»app/client/imports/components/trainingMain.tsx","meteor://ðŸ’»app/client/main.tsx","meteor://ðŸ’»app/lib/const.ts","meteor://ðŸ’»app/lib/utils.ts","meteor://ðŸ’»app/collections/algorithms.ts","meteor://ðŸ’»app/collections/results.ts"],"names":[],"mappings":"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","file":"/app.js","sourcesContent":["import React from 'react';\nimport { setDefaults } from 'react-komposer';\nimport { Tracker } from 'meteor/tracker';\n\nimport Loader from '../components/loader';\n\nconst errorHandler = (error: any) =>\n  Meteor.isProduction ? (\n    <span>An error occurred.</span>\n  ) : (\n    <code>{JSON.stringify(error, null, 2)}</code>\n  );\n\nconst compose = setDefaults({\n  errorHandler,\n  loadingHandler: Loader,\n  pure: true\n});\n\nconst getTrackerLoader = (reactiveMapper: any) => {\n  return (props: any, onData: any, env: any) => {\n    let trackerCleanup: any = null;\n    const handler = Tracker.nonreactive(() => {\n      return Tracker.autorun(() => {\n        // assign the custom clean-up function.\n        trackerCleanup = reactiveMapper(props, onData, env);\n      });\n    });\n\n    return () => {\n      if (typeof trackerCleanup === 'function') {\n        trackerCleanup();\n      }\n      // @ts-ignore\n      return handler.stop();\n    };\n  };\n};\n\nexport const composer = (reactiveMapper: any, options: any) => {\n  return compose(getTrackerLoader(reactiveMapper), options);\n};\n","import { toast } from 'react-semantic-toasts';\n\nexport const toastNoActiveAlgorithms = () =>\n  toast({\n    title: 'No active algorithms',\n    type: 'warning',\n    description:\n      'Randomizing algorithms pauzed until you select at least one algorithm',\n    time: 5000\n  });\n","import { Meteor } from 'meteor/meteor';\n\nimport { Results } from '../../../../collections/results';\nimport { composer } from '../../lib/composer';\nimport ResultsComponent from './results';\nimport { result } from '../../../../lib/types';\n\nconst compose = (props: any, onData: any): void => {\n  const subscriptions = [Meteor.subscribe('results')];\n\n  if (subscriptions.every(subscription => subscription.ready())) {\n    // @ts-ignore\n    const results: result[] = Results.find({}).fetch();\n    onData(null, { results });\n  }\n};\n\nexport default composer(compose)(ResultsComponent);\n","import React, { FunctionComponent, ReactNode } from 'react';\nimport { Table } from 'semantic-ui-react';\nimport moment from 'moment';\nimport get from 'lodash/get';\n\nimport { result } from '../../../../lib/types';\n\nconst columns = [\n  {\n    label: 'Date',\n    value: 'createdAt',\n    format: (value: number): string => moment(value).format('DD-MM-YYYY HH:ss')\n  },\n  {\n    label: 'Category',\n    value: 'category'\n  },\n  {\n    label: 'Scramble',\n    value: 'scramble'\n  },\n  {\n    label: 'Time',\n    value: 'time',\n    format: (value: number): string =>\n      (value / 1000).toLocaleString('en-US', {\n        minimumFractionDigits: 3,\n        maximumFractionDigits: 3\n      }) + 's'\n  }\n];\n\nconst Header = (): ReactNode => (\n  <Table.Row>\n    {columns.map(({ label }, index) => (\n      <Table.HeaderCell key={index}>{label}</Table.HeaderCell>\n    ))}\n  </Table.Row>\n);\n\nconst Row = (row: result): ReactNode => (\n  <Table.Row>\n    {columns.map(({ value, format = value => value }, index) => (\n      <Table.Cell key={index}>{format(get(row, value))}</Table.Cell>\n    ))}\n  </Table.Row>\n);\n\ntype Props = {\n  results: result[];\n};\n\nconst ResultsTab: FunctionComponent<Props> = ({ results }) => (\n  <Table inverted headerRow={Header} tableData={results} renderBodyRow={Row} />\n);\n\nexport default ResultsTab;\n","import { Meteor } from 'meteor/meteor';\n\nimport { Algorithms } from '../../../../collections/algorithms';\nimport { Results } from '../../../../collections/results';\nimport { composer } from '../../lib/composer';\nimport {\n  algorithm,\n  algorithmWithResults,\n  categoryWithResults,\n  result\n} from '../../../../lib/types';\nimport { categories } from '../../../../lib/const';\n\nimport Training from './training';\n\nconst compose = (props: any, onData: any): void => {\n  const subscriptions = [\n    Meteor.subscribe('algorithms'),\n    Meteor.subscribe('results')\n  ];\n\n  if (subscriptions.every(subscription => subscription.ready())) {\n    // @ts-ignore\n    const algorithms: algorithm[] = Algorithms.find({}).fetch();\n    // @ts-ignore\n    const results: result[] = Results.find({}).fetch();\n\n    const algorithmsWithResults: algorithmWithResults[] = algorithms.map(\n      algorithm => ({\n        ...algorithm,\n        results: results\n          .filter(result => result.algorithmId === algorithm._id)\n          .map(result => result.time)\n      })\n    );\n\n    const categoriesWithResults: categoryWithResults[] = categories.map(\n      category => ({\n        ...category,\n        results: results\n          .filter(result => result.category === category.value)\n          .map(result => result.time)\n      })\n    );\n\n    onData(null, {\n      algorithms: algorithmsWithResults,\n      categories: categoriesWithResults\n    });\n  }\n};\n\nexport default composer(compose)(Training);\n","import React, { Component } from 'react';\nimport moment from 'moment';\nimport { Grid, Menu } from 'semantic-ui-react';\nimport { SemanticToastContainer } from 'react-semantic-toasts';\n\nimport AlgSettings from '../algSettings';\nimport Averages from '../averages';\nimport TipsAndTricks from '../tipsAndTricks';\nimport TrainingMain from '../trainingMain';\n\nimport { getRandomEntry, getRandomScramble } from '../../../../lib/utils';\nimport { toastNoActiveAlgorithms } from '../../lib/toasts';\nimport {\n  algorithmWithResults,\n  categoryWithResults\n} from '../../../../lib/types';\n\ntype Props = {\n  algorithms: algorithmWithResults[];\n  categories: categoryWithResults[];\n};\n\ntype State = {\n  blocked: {\n    control: boolean;\n    delete: boolean;\n    shift: boolean;\n    space: boolean;\n  };\n  currentAlgorithm?: algorithmWithResults;\n  currentCategory: categoryWithResults;\n  isVisibleSolution: boolean;\n  settingsOpened: boolean;\n  timerCurrentValue: number;\n  timerStartValue: number;\n  timerStatus: 'timer-off' | 'timer-on' | 'resetted' | 'pre-inspection';\n};\n\nclass Training extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      blocked: {\n        control: false,\n        delete: false,\n        shift: false,\n        space: false\n      },\n      currentAlgorithm: undefined,\n      currentCategory: this.props.categories[0],\n      isVisibleSolution: false,\n      settingsOpened: true,\n      timerCurrentValue: 0,\n      timerStartValue: 0,\n      timerStatus: 'resetted'\n    };\n  }\n\n  componentDidMount(): void {\n    this.onChangeAlgorithm();\n\n    document.body.addEventListener('keydown', this.onKeyDown);\n    document.body.addEventListener('keypress', this.onKeyPress);\n    document.body.addEventListener('keyup', this.onKeyUp);\n  }\n\n  componentWillUnmount(): void {\n    document.body.removeEventListener('keydown', this.onKeyDown);\n    document.body.removeEventListener('keypress', this.onKeyPress);\n    document.body.removeEventListener('keyup', this.onKeyUp);\n  }\n\n  onChangeAlgorithm = (): void => {\n    const { algorithms } = this.props;\n    const { currentAlgorithm, currentCategory } = this.state;\n\n    this.onReset();\n\n    let newAlgorithm;\n    if (currentCategory.randomizableAlgorithm) {\n      const activeAlgorithms = algorithms.filter(\n        algorithm =>\n          algorithm.active && algorithm.category === currentCategory.value\n      );\n\n      if (!activeAlgorithms.length) {\n        toastNoActiveAlgorithms();\n      }\n\n      newAlgorithm = getRandomEntry(\n        activeAlgorithms,\n        currentAlgorithm && currentAlgorithm._id\n      );\n    } else if (currentCategory.randomizableScramble) {\n      const scramble = getRandomScramble(25);\n      newAlgorithm = { category: currentCategory.value, scramble };\n    }\n\n    this.setState({ currentAlgorithm: newAlgorithm });\n  };\n\n  onChangeCategory = (category: categoryWithResults): void => {\n    this.setState({ currentCategory: category }, (): void => {\n      this.onChangeAlgorithm();\n    });\n  };\n\n  onToggleActive = (algorithm: algorithmWithResults): void => {\n    Meteor.call('algorithms.toggleActive', algorithm._id, !algorithm.active);\n  };\n\n  onActivateAll = (): void => {\n    const { currentCategory } = this.state;\n    Meteor.call('algorithms.activateAll', currentCategory.value);\n  };\n\n  onDeactivateAll = (): void => {\n    Meteor.call('algorithms.deactivateAll');\n    toastNoActiveAlgorithms();\n  };\n\n  onKeyDown = (event: KeyboardEvent) => {\n    const blocked = this.state.blocked;\n\n    if ((event.key === 'Enter' || event.key === ' ') && !blocked.space) {\n      event.preventDefault();\n      this.onGoToNextStatus('down');\n      this.setState({ blocked: { ...blocked, space: true } });\n    } else if (event.key === 'r') {\n      event.preventDefault();\n      this.onChangeAlgorithm();\n    } else if (event.key === 'Shift' && !blocked.shift) {\n      event.preventDefault();\n      this.setState({\n        blocked: { ...blocked, shift: true },\n        isVisibleSolution: true\n      });\n    } else if (event.key === 'Control' && !blocked.control) {\n      event.preventDefault();\n      this.setState({ blocked: { ...blocked, control: true } });\n    } else if (\n      (event.key === 'Backspace' ||\n        event.key === 'Delete' ||\n        event.key === 'Escape') &&\n      !blocked.delete\n    ) {\n      event.preventDefault();\n      this.setState({ blocked: { ...blocked, delete: true } });\n    }\n  };\n\n  onKeyPress = (event: KeyboardEvent) => {\n    if (event.key === ' ') {\n      event.preventDefault();\n    }\n  };\n\n  onKeyUp = (event: KeyboardEvent) => {\n    const { blocked, isVisibleSolution } = this.state;\n\n    if (event.key === 'Enter' || event.key === ' ') {\n      this.onGoToNextStatus('up');\n      this.setState({ blocked: { ...blocked, space: false } });\n    } else if (event.key === 'Shift') {\n      this.setState({\n        blocked: { ...blocked, shift: false },\n        isVisibleSolution: false\n      });\n    } else if (event.key === 'Control') {\n      this.setState({\n        blocked: { ...blocked, control: false },\n        isVisibleSolution: !isVisibleSolution\n      });\n    } else if (\n      event.key === 'Backspace' ||\n      event.key === 'Delete' ||\n      event.key === 'Escape'\n    ) {\n      this.onChangeAlgorithm();\n      this.setState({ blocked: { ...blocked, delete: false } });\n    }\n  };\n\n  onGoToNextStatus = (upOrDown: 'down' | 'up') => {\n    const {\n      blocked,\n      currentAlgorithm,\n      currentCategory,\n      timerCurrentValue,\n      timerStatus\n    } = this.state;\n\n    if (!currentAlgorithm) {\n      return;\n    }\n\n    if (timerStatus === 'resetted' && upOrDown === 'down' && !blocked.space) {\n      this.setState({ timerStatus: 'pre-inspection' });\n    } else if (timerStatus === 'pre-inspection' && upOrDown === 'up') {\n      this.setState({\n        timerStatus: 'timer-on',\n        timerStartValue: moment().valueOf()\n      });\n      this.timer = setInterval(this.updateTimerTime, 1);\n    } else if (\n      timerStatus === 'timer-on' &&\n      upOrDown === 'down' &&\n      !blocked.space\n    ) {\n      clearInterval(this.timer);\n      this.setState({ timerStatus: 'timer-off' });\n    } else if (\n      timerStatus === 'timer-off' &&\n      upOrDown === 'down' &&\n      !blocked.space\n    ) {\n      /* Save the time */\n      const result = {\n        ...(currentAlgorithm && {\n          algorithmId: currentAlgorithm._id,\n          scramble: currentAlgorithm.scramble\n        }),\n        category: currentCategory.value,\n        time: timerCurrentValue\n      };\n\n      Meteor.call('results.insert', result, () => this.onChangeAlgorithm());\n    }\n  };\n\n  onReset = (): void => {\n    clearInterval(this.timer);\n    this.setState({ timerStatus: 'resetted', timerCurrentValue: 0 });\n  };\n\n  updateTimerTime = (): void => {\n    this.setState(state => ({\n      timerCurrentValue: moment().valueOf() - state.timerStartValue\n    }));\n  };\n\n  render() {\n    const {\n      state: {\n        currentAlgorithm,\n        currentCategory,\n        isVisibleSolution,\n        timerCurrentValue\n      },\n      props: { algorithms, categories },\n      onActivateAll,\n      onToggleActive,\n      onChangeAlgorithm,\n      onChangeCategory,\n      onDeactivateAll\n    } = this;\n\n    const currentAlgorithms = algorithms.filter(\n      algorithm => algorithm.category === currentCategory.value\n    );\n\n    return (\n      <>\n        <SemanticToastContainer />\n        <Grid>\n          <Grid.Column width={4}>\n            <Menu className=\"left-menu\" inverted tabular vertical>\n              {categories.map(category => (\n                <Menu.Item\n                  key={category.value}\n                  name={category.label}\n                  active={currentCategory.value === category.value}\n                  onClick={() => onChangeCategory(category)}\n                />\n              ))}\n            </Menu>\n          </Grid.Column>\n          <Grid.Column width={8} textAlign=\"center\">\n            <TrainingMain\n              currentAlgorithm={currentAlgorithm}\n              isVisibleSolution={isVisibleSolution}\n              onChangeAlgorithm={onChangeAlgorithm}\n              timerCurrentValue={timerCurrentValue}\n            />\n          </Grid.Column>\n          <Grid.Column width={4}>\n            <Averages\n              currentAlgorithm={currentAlgorithm}\n              currentCategory={currentCategory}\n            />\n            <TipsAndTricks />\n          </Grid.Column>\n        </Grid>\n        {this.state.settingsOpened && (\n          <AlgSettings\n            algorithms={currentAlgorithms}\n            currentCategory={currentCategory}\n            onActivateAll={onActivateAll}\n            onToggleActive={onToggleActive}\n            onDeactivateAll={onDeactivateAll}\n          />\n        )}\n      </>\n    );\n  }\n}\n\nexport default Training;\n","import React, { FunctionComponent } from 'react';\nimport { RouteComponentProps } from '@reach/router';\n\nconst About: FunctionComponent<RouteComponentProps> = () => <div>About</div>;\n\nexport default About;\n","import React, { FunctionComponent, useState } from 'react';\nimport { Button, List, Segment } from 'semantic-ui-react';\nimport groupBy from 'lodash/groupBy';\nimport Slider, { createSliderWithTooltip } from 'rc-slider';\nimport { getAverage } from '../../../lib/utils';\nimport { algorithmWithResults, categoryWithResults } from '../../../lib/types';\n\nconst SliderTooltip = createSliderWithTooltip(Slider);\n\ntype Props = {\n  algorithms: algorithmWithResults[];\n  currentCategory: categoryWithResults;\n  onActivateAll: () => void;\n  onToggleActive: (algorithm: algorithmWithResults) => void;\n  onDeactivateAll: () => void;\n};\n\nconst AlgSettings: FunctionComponent<Props> = ({\n  algorithms,\n  currentCategory: { settingsDisabled },\n  onActivateAll,\n  onToggleActive,\n  onDeactivateAll\n}) => {\n  const [detailsLevel, setDetailsLevel] = useState(1);\n\n  const algorithmsGrouped =\n    detailsLevel === 0\n      ? groupBy(algorithms, 'category')\n      : detailsLevel === 1\n      ? groupBy(algorithms, 'type')\n      : detailsLevel === 2\n      ? groupBy(algorithms, 'subtype')\n      : [];\n\n  return (\n    <section\n      className={`algorithm-settings${settingsDisabled ? ' disabled' : ''}`}\n    >\n      <List divided verticalAlign=\"middle\">\n        <List.Item>\n          <List.Content floated=\"right\">\n            <div className=\"grouping-level\">\n              <div className=\"title\">Grouping level</div>\n              <SliderTooltip\n                min={0}\n                max={2}\n                onChange={setDetailsLevel}\n                tipFormatter={(value: number): string =>\n                  ['None', 'General', 'Precise'][value]\n                }\n                tipProps={{\n                  placement: 'bottom',\n                  visible: true\n                }}\n                value={detailsLevel}\n              />\n            </div>\n          </List.Content>\n          <List.Content>\n            {!settingsDisabled && (\n              <div className=\"controls\">\n                <Button\n                  secondary\n                  onClick={settingsDisabled ? undefined : onActivateAll}\n                >\n                  Select all\n                </Button>\n                <Button\n                  secondary\n                  onClick={settingsDisabled ? undefined : onDeactivateAll}\n                >\n                  Unselect all\n                </Button>\n              </div>\n            )}\n          </List.Content>\n        </List.Item>\n      </List>\n\n      {Object.entries(algorithmsGrouped).map(([name, values], index) => (\n        <Segment key={index}>\n          <h5>{name}</h5>\n          {values.map(algorithm => (\n            <div\n              key={algorithm._id}\n              className={`algorithm${\n                settingsDisabled || algorithm.active ? ' active' : ''\n              }`}\n              onClick={(): void =>\n                settingsDisabled ? undefined : onToggleActive(algorithm)\n              }\n            >\n              <img alt={algorithm.name} src={`/images/${algorithm.image}`} />\n              <div className=\"results-average\">\n                {getAverage(algorithm && algorithm.results)}\n              </div>\n            </div>\n          ))}\n        </Segment>\n      ))}\n    </section>\n  );\n};\n\nexport default AlgSettings;\n","import React, { FunctionComponent } from 'react';\nimport { List, Segment } from 'semantic-ui-react';\nimport moment from 'moment';\n\nimport { getAverage } from '../../../lib/utils';\nimport { algorithmWithResults, categoryWithResults } from '../../../lib/types';\n\ntype Props = {\n  currentAlgorithmAvg: number;\n  currentAlgorithm?: algorithmWithResults;\n  currentCategory: categoryWithResults;\n  currentCategoryAvg: number;\n};\n\nconst Averages: FunctionComponent<Props> = ({\n  currentAlgorithm,\n  currentCategory\n}) => {\n  const currentAlgorithmAvg = getAverage(\n    currentAlgorithm && currentAlgorithm.results\n  );\n  const currentCategoryAvg = getAverage(\n    currentCategory && currentCategory.results\n  );\n\n  const averages = ['OLL', 'PLL'].includes(currentCategory.value)\n    ? [\n        {\n          header: 'Average for this algorithm',\n          description: currentAlgorithmAvg\n            ? moment(currentAlgorithmAvg).format('ss:SSS')\n            : 'No records'\n        },\n        {\n          header: `Average for all ${currentCategory.value} algorithms`,\n          description: currentCategoryAvg\n            ? moment(currentCategoryAvg).format('ss:SSS')\n            : 'No records'\n        }\n      ]\n    : [\n        {\n          header: `Average for all in ${currentCategory.value}`,\n          description: currentCategoryAvg\n            ? moment(currentCategoryAvg).format('mm:ss:SSS')\n            : 'No records'\n        }\n      ];\n\n  return (\n    <Segment className=\"averages\">\n      <List inverted items={averages} />\n    </Segment>\n  );\n};\n\nexport default Averages;\n","import React, { FunctionComponent } from 'react';\nimport { RouteComponentProps } from '@reach/router';\n\nconst Home: FunctionComponent<RouteComponentProps> = () => <div>Home</div>;\n\nexport default Home;\n","import React, { FunctionComponent } from 'react';\nimport { Dimmer, Loader as LoaderSemantic } from 'semantic-ui-react';\n\nconst Loader: FunctionComponent = () => (\n  <Dimmer active page style={{ backgroundColor: 'rgba(0, 0, 0, 0.55)' }}>\n    <LoaderSemantic size=\"large\">Loading</LoaderSemantic>\n  </Dimmer>\n);\n\nexport default Loader;\n","import React, { FunctionComponent } from 'react';\nimport { Icon, Menu, SemanticCOLORS, SemanticICONS } from 'semantic-ui-react';\nimport { Link, RouteComponentProps } from '@reach/router';\nimport capitalize from 'lodash/capitalize';\n\ntype tab = {\n  name: string;\n  color: SemanticCOLORS;\n  icon: SemanticICONS;\n};\n\nconst tabs: tab[] = [\n  {\n    name: 'home',\n    color: 'green',\n    icon: 'home'\n  },\n  {\n    name: 'training',\n    color: 'blue',\n    icon: 'book'\n  },\n  {\n    name: 'results',\n    color: 'orange',\n    icon: 'lightning'\n  },\n  {\n    name: 'about',\n    color: 'teal',\n    icon: 'idea'\n  }\n];\n\nconst MenuTop: FunctionComponent<RouteComponentProps> = ({ uri }) => (\n  <Menu inverted icon=\"labeled\">\n    {tabs.map(({ color, icon, name }) => (\n      <Link key={name} to={`/${name}`}>\n        <Menu.Item active={`/${name}` === uri} color={color} name={name}>\n          <Icon name={icon} />\n          {capitalize(name)}\n        </Menu.Item>\n      </Link>\n    ))}\n  </Menu>\n);\n\nexport default MenuTop;\n","import React, { FunctionComponent } from 'react';\nimport { Segment } from 'semantic-ui-react';\nimport { Router } from '@reach/router';\n\nimport About from './about';\nimport Home from './home';\nimport MenuTop from './menuTop';\nimport Results from './results';\nimport Training from './training';\n\nconst RouterComponent: FunctionComponent = () => (\n  <div>\n    <header>\n      <Router>\n        <MenuTop default />\n      </Router>\n    </header>\n\n    <nav>\n      <Segment>\n        <Router>\n          <Home path=\"/home\" />\n          <Training path=\"/training\" default />\n          <Results path=\"/results\" />\n          <About path=\"/about\" />\n        </Router>\n      </Segment>\n    </nav>\n  </div>\n);\n\nexport default RouterComponent;\n","import moment from 'moment';\nimport React, { FunctionComponent } from 'react';\n\ntype Props = {\n  isVisibleSolution: boolean;\n  solution?: string;\n  timerCurrentValue: number;\n};\n\nconst Timer: FunctionComponent<Props> = ({\n  isVisibleSolution,\n  solution,\n  timerCurrentValue\n}) => (\n  <div className=\"timer\">\n    <p>{moment(timerCurrentValue).format('mm:ss:SSS')}</p>\n    {isVisibleSolution && solution && <p>{solution}</p>}\n  </div>\n);\n\nexport default Timer;\n","import React from 'react';\nimport { List, Segment } from 'semantic-ui-react';\n\ntype tip = {\n  description: string;\n  header: string;\n  icon: string;\n};\n\nconst tipsList: tip[] = [\n  {\n    header: 'Enter / Space',\n    description: '... -> start timer -> stop timer -> save result -> ...'\n  },\n  {\n    header: 'r',\n    description: 'Randomize new algorithm'\n  },\n  {\n    header: 'Shift (hold)',\n    description: 'Take a peek at the solution'\n  },\n  {\n    header: 'Control',\n    description: 'Show / hide the solution'\n  },\n  {\n    header: 'Backspace / Delete / Escape',\n    description: \"Reset timer - don't save the solution\"\n  }\n].map(tip => ({ ...tip, icon: 'lightbulb outline' }));\n\nconst TipsAndTricks = () => (\n  <Segment>\n    Shortcuts list:\n    <List celled inverted items={tipsList} />\n  </Segment>\n);\n\nexport default TipsAndTricks;\n","import React, { FunctionComponent } from 'react';\nimport { Button, Segment } from 'semantic-ui-react';\n\nimport Timer from './timer';\nimport { algorithm } from '../../../lib/types';\n\ntype Props = {\n  onChangeAlgorithm: () => void;\n  currentAlgorithm?: algorithm;\n  isVisibleSolution: boolean;\n  timerCurrentValue: number;\n};\n\nconst TrainingMain: FunctionComponent<Props> = ({\n  onChangeAlgorithm,\n  currentAlgorithm: { image, scramble, solution } = {\n    image: undefined,\n    scramble: undefined,\n    solution: undefined\n  },\n  isVisibleSolution,\n  timerCurrentValue\n}) => (\n  <section className=\"training-main\">\n    {scramble && <Segment className=\"scramble-segment\">{scramble}</Segment>}\n    {image && (\n      <Segment className=\"image-segment\">\n        <img src={`/images/${image}`} />\n      </Segment>\n    )}\n    <Segment className=\"timer-segment\">\n      <Timer\n        isVisibleSolution={isVisibleSolution}\n        solution={solution}\n        timerCurrentValue={timerCurrentValue}\n      />\n    </Segment>\n    {(image || solution) && (\n      <Segment>\n        <Button primary onClick={(): void => onChangeAlgorithm()}>\n          Randomize new\n        </Button>\n      </Segment>\n    )}\n  </section>\n);\n\nexport default TrainingMain;\n","import React from 'react';\nimport { Meteor } from 'meteor/meteor';\nimport { render } from 'react-dom';\n\nimport Router from './imports/components/router';\n\nimport 'rc-slider/assets/index.css';\nimport 'react-semantic-toasts/styles/react-semantic-alert.css';\n\nMeteor.startup(() => {\n  render(<Router />, document.getElementById('render-target'));\n});\n","import { category } from './types';\n\nexport const categories: category[] = [\n  {\n    label: 'OLL',\n    value: 'OLL',\n    randomizableAlgorithm: true\n  },\n  {\n    label: 'PLL',\n    value: 'PLL',\n    randomizableAlgorithm: true\n  },\n  {\n    label: '3x3x3',\n    value: '3x3x3',\n    randomizableScramble: true\n  },\n  {\n    label: 'OLL Attack',\n    value: 'OLL-attack',\n    algorithmsCategory: 'OLL',\n    settingsDisabled: true\n  },\n  {\n    label: 'PLL Attack',\n    value: 'PLL-attack',\n    algorithmsCategory: 'PLL',\n    settingsDisabled: true\n  }\n];\n","import random from 'lodash/random';\n\ntype allowedMove =\n  | 'F'\n  | \"F'\"\n  | 'F2'\n  | 'B'\n  | \"B'\"\n  | 'B2'\n  | 'R'\n  | \"R'\"\n  | 'R2'\n  | 'L'\n  | \"L'\"\n  | 'L2'\n  | 'U'\n  | \"U'\"\n  | 'U2'\n  | 'D'\n  | \"D'\"\n  | 'D2';\n\nconst allowedMoves: allowedMove[] = [\n  'F',\n  \"F'\",\n  'F2',\n  'B',\n  \"B'\",\n  'B2',\n  'R',\n  \"R'\",\n  'R2',\n  'L',\n  \"L'\",\n  'L2',\n  'U',\n  \"U'\",\n  'U2',\n  'D',\n  \"D'\",\n  'D2'\n];\n\nconst getRandomMove = (): allowedMove =>\n  allowedMoves[Math.floor(Math.random() * allowedMoves.length)];\n\nconst movesConflict = (moveA?: string, moveB?: string): boolean =>\n  moveA && moveB\n    ? moveA.split('').some(character => moveB.includes(character))\n    : false;\n\nexport const getRandomScramble = (movesNr: number): string => {\n  const moves = [];\n\n  let move = '';\n  let previousMove = '';\n  for (let i = 0; i < movesNr; i++) {\n    move = getRandomMove();\n    while (movesConflict(move, previousMove)) {\n      move = getRandomMove();\n    }\n\n    previousMove = move;\n    moves.push(move);\n  }\n\n  return moves.join(' ');\n};\n\nexport const getRandomEntry = (array: any[], excludeId?: string): any => {\n  const index = random(0, array.length - 1);\n  const entry = array[index];\n\n  if (array.length > 1 && excludeId && entry._id === excludeId) {\n    return getRandomEntry(array, excludeId);\n  }\n\n  return entry;\n};\n\nexport const getAverage = (results?: number[]): number => {\n  if (!results || results.length === 0) {\n    return 0;\n  }\n\n  return Math.round(\n    results.reduce((sum, result) => sum + result, 0) / results.length\n  );\n};\n","import { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\nimport { check } from 'meteor/check';\n\nimport { expect } from 'chai';\n\nexport const Algorithms = new Mongo.Collection('algorithms');\n\nMeteor.methods({\n  'algorithms.toggleActive': (algId, active) => {\n    check(active, Boolean);\n    check(algId, String);\n\n    Algorithms.update(algId, { $set: { active } });\n  },\n  'algorithms.activateAll': category => {\n    Algorithms.update(\n      { category },\n      { $set: { active: true } },\n      { multi: true }\n    );\n  },\n  'algorithms.deactivateAll': category => {\n    Algorithms.update(\n      { category },\n      { $set: { active: false } },\n      { multi: true }\n    );\n  },\n  'algorithms.insert': ({\n    category,\n    image,\n    scramble,\n    solution,\n    subtype,\n    type\n  }) => {\n    expect(category).to.be.a('string');\n    expect(image).to.be.a('string');\n    expect(scramble).to.be.a('string');\n    expect(solution).to.be.a('string');\n    expect(subtype).to.be.a('string');\n    expect(type).to.be.a('string');\n\n    // Make sure the user is logged in before inserting a algorithm\n    /* if (! Meteor.userId()) {\n         throw new Meteor.Error('not-authorized');\n     }*/\n\n    const doc = {\n      createdAt: new Date(),\n      category,\n      image,\n      scramble,\n      solution,\n      subtype,\n      type\n    };\n\n    Algorithms.insert(doc);\n  },\n  'algorithms.search'(text) {\n    check(text, String);\n\n    return Algorithms.find();\n  },\n  'algorithms.remove'(algorithmId) {\n    check(algorithmId, String);\n\n    /*const algorithm = Algorithms.findOne(algorithmId);\n    if (algorithm.private && algorithm.owner !== Meteor.userId()) {\n      // If the algorithm is private, make sure only the owner can delete it\n          throw new Meteor.Error('not-authorized');\n    }*/\n\n    Algorithms.remove(algorithmId);\n  } /*,\n    'algorithms.setChecked'(algorithmId, setChecked) {\n        check(algorithmId, String);\n        check(setChecked, Boolean);\n\n        const algorithm = Algorithms.findOne(algorithmId);\n        if (algorithm.private && algorithm.owner !== Meteor.userId()) {\n              // If the algorithm is private, make sure only the owner can check it off\n                  throw new Meteor.Error('not-authorized');\n            }\n\n        Algorithms.update(algorithmId, { $set: { checked: setChecked } });\n    },\n    'algorithms.setPrivate'(algorithmId, setToPrivate) {\n        check(algorithmId, String);\n        check(setToPrivate, Boolean);\n\n        const algorithm = Algorithms.findOne(algorithmId);\n\n        // Make sure only the algorithm owner can make a algorithm private\n        if (algorithm.owner !== Meteor.userId()) {\n            throw new Meteor.Error('not-authorized');\n        }\n\n        Algorithms.update(algorithmId, { $set: { private: setToPrivate } });\n    },*/\n});\n","import { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\nimport { check } from 'meteor/check';\n\nexport const Results = new Mongo.Collection('results');\n\nMeteor.methods({\n  'results.insert': ({ algorithmId, category, scramble, time }) => {\n    check(category, String);\n    check(time, Number);\n\n    if (category === 'OLL' || category === 'PLL' || category === '3x3x3') {\n      check(scramble, String);\n    }\n\n    if (category === 'OLL' || category === 'PLL') {\n      check(algorithmId, String);\n    }\n\n    // Make sure the user is logged in before inserting a result\n    /* if (! Meteor.userId()) {\n     throw new Meteor.Error('not-authorized');\n     }*/\n\n    const doc = {\n      algorithmId,\n      category,\n      createdAt: new Date(),\n      scramble,\n      time\n    };\n\n    Results.insert(doc);\n  },\n  'results.search': text => {\n    check(text, String);\n\n    return Results.find();\n  },\n  'results.remove': resultId => {\n    check(resultId, String);\n\n    /*const result = Results.findOne(resultId);\n     if (result.private && result.owner !== Meteor.userId()) {\n     // If the result is private, make sure only the owner can delete it\n     throw new Meteor.Error('not-authorized');\n     }*/\n\n    Results.remove(resultId);\n  }\n});\n"]}