{"version":3,"sources":["meteor://ðŸ’»app/client/imports/components/results/index.ts","meteor://ðŸ’»app/client/imports/components/results/results.tsx","meteor://ðŸ’»app/client/imports/components/router/index.ts","meteor://ðŸ’»app/client/imports/components/router/router.tsx","meteor://ðŸ’»app/client/imports/components/training/index.ts","meteor://ðŸ’»app/client/imports/components/training/training.tsx","meteor://ðŸ’»app/client/imports/components/about.tsx","meteor://ðŸ’»app/client/imports/components/algSettings.tsx","meteor://ðŸ’»app/client/imports/components/averages.tsx","meteor://ðŸ’»app/client/imports/components/home.tsx","meteor://ðŸ’»app/client/imports/components/loader.tsx","meteor://ðŸ’»app/client/imports/components/loginArea.tsx","meteor://ðŸ’»app/client/imports/components/menuTop.tsx","meteor://ðŸ’»app/client/imports/components/timer.tsx","meteor://ðŸ’»app/client/imports/components/tipsAndTricks.tsx","meteor://ðŸ’»app/client/imports/components/trainingMain.tsx","meteor://ðŸ’»app/client/imports/lib/composer.tsx","meteor://ðŸ’»app/client/imports/lib/store.ts","meteor://ðŸ’»app/client/imports/lib/toasts.ts","meteor://ðŸ’»app/client/main.tsx","meteor://ðŸ’»app/lib/const.ts","meteor://ðŸ’»app/lib/utils.ts","meteor://ðŸ’»app/collections/algorithms.ts","meteor://ðŸ’»app/collections/results.ts"],"names":[],"mappings":"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","file":"/app.js","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { RouteComponentProps } from '@reach/router';\n\nimport { Results } from '../../../../collections/results';\nimport { composer } from '../../lib/composer';\nimport ResultsComponent from './results';\nimport { Result } from '../../../../lib/types';\n\ntype Props = RouteComponentProps & {\n  demo?: boolean;\n};\n\nconst compose = (props: Props, onData: Function): void => {\n  const subscriptions = [Meteor.subscribe('results')];\n\n  if (subscriptions.every(subscription => subscription.ready())) {\n    const { demo } = props;\n\n    // @ts-ignore\n    const results: Result[] = Results.find({\n      userId: demo ? 'demo' : Meteor.userId()\n    }).fetch();\n\n    onData(null, { results });\n  }\n};\n\nexport default composer(compose)(ResultsComponent);\n","import React, { FunctionComponent, ReactNode } from 'react';\nimport { Table } from 'semantic-ui-react';\nimport moment from 'moment';\nimport get from 'lodash/get';\n\nimport { Result } from '../../../../lib/types';\n\ntype column = {\n  label: string;\n  value: string;\n  format?: Function;\n};\n\nconst columns: column[] = [\n  {\n    label: 'Date',\n    value: 'createdAt',\n    format: (value: number): string => moment(value).format('DD-MM-YYYY HH:ss')\n  },\n  {\n    label: 'Category',\n    value: 'category'\n  },\n  {\n    label: 'Scramble',\n    value: 'scramble'\n  },\n  {\n    label: 'Time',\n    value: 'time',\n    format: (value: number): string =>\n      (value / 1000).toLocaleString('en-US', {\n        minimumFractionDigits: 3,\n        maximumFractionDigits: 3\n      }) + 's'\n  }\n];\n\nconst Header = (): ReactNode => (\n  <Table.Row>\n    {columns.map(({ label }, index) => (\n      <Table.HeaderCell key={index}>{label}</Table.HeaderCell>\n    ))}\n  </Table.Row>\n);\n\nconst Row = (row: Result): ReactNode => (\n  <Table.Row>\n    {columns.map(({ value, format }, index) => (\n      <Table.Cell key={index}>\n        {format ? format(get(row, value)) : get(row, value)}\n      </Table.Cell>\n    ))}\n  </Table.Row>\n);\n\ntype Props = {\n  results: Result[];\n};\n\nconst Results: FunctionComponent<Props> = ({ results }) => (\n  <Table inverted headerRow={Header} tableData={results} renderBodyRow={Row} />\n);\n\nexport default Results;\n","import { Meteor } from 'meteor/meteor';\n\nimport { composer } from '../../lib/composer';\nimport RouterComponent from './router';\n\ntype Props = {\n  userId: string;\n};\n\nconst compose = (props: Props, onData: Function): void => {\n  onData(null, { userId: Meteor.userId() });\n};\n\nexport default composer(compose)(RouterComponent);\n","import React, { FunctionComponent } from 'react';\nimport { Segment } from 'semantic-ui-react';\nimport { Router } from '@reach/router';\n\nimport About from '../about';\nimport Home from '../home';\nimport MenuTop from '../menuTop';\nimport Results from '../results';\nimport Training from '../training';\n\ntype Props = {\n  userId: string;\n};\n\nconst RouterComponent: FunctionComponent<Props> = ({ userId }) => (\n  <div>\n    <header>\n      <Router>\n        <MenuTop default />\n      </Router>\n    </header>\n\n    <div className={`demo-mode-bar${userId ? ' hidden' : ''}`}>\n      You are currently in a demo mode. Please sign in to enable personalised\n      results and features.\n    </div>\n\n    <main>\n      <Segment>\n        <Router>\n          <Home path=\"/home\" default />\n          <Training key=\"training\" demo={!userId} path=\"/training\" />\n          <Results key=\"results\" demo={!userId} path=\"/results\" />\n          <About path=\"/about\" />\n        </Router>\n      </Segment>\n    </main>\n  </div>\n);\n\nexport default RouterComponent;\n","import { Meteor } from 'meteor/meteor';\nimport { RouteComponentProps } from '@reach/router';\n\nimport { Algorithms } from '../../../../collections/algorithms';\nimport { Results } from '../../../../collections/results';\nimport { composer } from '../../lib/composer';\nimport { Algorithm, Category, Result } from '../../../../lib/types';\nimport { categories } from '../../../../lib/const';\nimport Training from './training';\n\ntype Props = RouteComponentProps & {\n  demo?: boolean;\n};\n\nexport type AlgorithmWithResults = Algorithm & {\n  results: number[];\n};\n\nexport type CategoryWithResults = Category & {\n  results: number[];\n};\n\nconst compose = (props: Props, onData: Function): void => {\n  const subscriptions = [\n    Meteor.subscribe('algorithms'),\n    Meteor.subscribe('results')\n  ];\n\n  if (subscriptions.every(subscription => subscription.ready())) {\n    // @ts-ignore\n    const algorithms: Algorithm[] = Algorithms.find({}).fetch();\n    // @ts-ignore\n    const results: Result[] = Results.find({}).fetch();\n\n    const algorithmsWithResults: AlgorithmWithResults[] = algorithms.map(\n      algorithm => ({\n        ...algorithm,\n        results: results\n          .filter(result => result.algorithmId === algorithm._id)\n          .map(result => result.time)\n      })\n    );\n\n    const categoriesWithResults: CategoryWithResults[] = categories.map(\n      category => ({\n        ...category,\n        results: results\n          .filter(result => result.category === category.value)\n          .map(result => result.time)\n      })\n    );\n\n    onData(null, {\n      algorithms: algorithmsWithResults,\n      categories: categoriesWithResults\n    });\n  }\n};\n\nexport default composer(compose)(Training);\n","import React, { Component } from 'react';\nimport moment from 'moment';\nimport { Grid, Menu } from 'semantic-ui-react';\nimport { SemanticToastContainer } from 'react-semantic-toasts';\nimport random from 'lodash/random';\nimport uniq from 'lodash/uniq';\n\nimport AlgSettings from '../algSettings';\nimport Averages from '../averages';\nimport TipsAndTricks from '../tipsAndTricks';\nimport TrainingMain from '../trainingMain';\n\nimport { getRandomScramble } from '../../../../lib/utils';\nimport { toastNoActiveAlgorithms } from '../../lib/toasts';\nimport { store } from '../../lib/store';\nimport {\n  AlgorithmWithResults,\n  CategoryName,\n  CategoryWithResults\n} from '../../../../lib/types';\n\nexport type randomizedAlgorithm = {\n  category: CategoryName;\n  scramble: string;\n};\n\ntype Props = {\n  algorithms: AlgorithmWithResults[];\n  categories: CategoryWithResults[];\n  demo?: boolean;\n};\n\ntype State = {\n  activeAlgorithmIds: string[];\n  blocked: {\n    control: boolean;\n    delete: boolean;\n    shift: boolean;\n    space: boolean;\n  };\n  currentAlgorithm?: AlgorithmWithResults | randomizedAlgorithm;\n  currentCategory: CategoryWithResults;\n  isVisibleSolution: boolean;\n  settingsOpened: boolean;\n  timerCurrentValue: number;\n  timerStartValue: number;\n  timerStatus: 'timer-off' | 'timer-on' | 'resetted' | 'pre-inspection';\n};\n\nclass Training extends Component<Readonly<Props>, State> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      blocked: {\n        control: false,\n        delete: false,\n        shift: false,\n        space: false\n      },\n      activeAlgorithmIds: store.get(store.vars.activeAlgorithmIds) || [],\n      currentAlgorithm: undefined,\n      currentCategory: this.props.categories[0],\n      isVisibleSolution: store.get(store.vars.isVisibleSolution),\n      settingsOpened: true,\n      timerCurrentValue: 0,\n      timerStartValue: 0,\n      timerStatus: 'resetted'\n    };\n  }\n\n  componentDidMount(): void {\n    this.onChangeAlgorithm();\n\n    window.addEventListener('beforeunload', this.onExit);\n    document.body.addEventListener('keydown', this.onKeyDown);\n    document.body.addEventListener('keypress', this.onKeyPress);\n    document.body.addEventListener('keyup', this.onKeyUp);\n  }\n\n  componentDidUpdate(prevProps: Readonly<Props>, prevState: State): void {\n    if (prevProps.algorithms !== this.props.algorithms) {\n      this.onChangeAlgorithm();\n    }\n\n    if (prevProps.categories !== this.props.categories) {\n      const refreshedCategory = this.props.categories.find(\n        category => category.value === this.state.currentCategory.value\n      );\n\n      if (refreshedCategory) {\n        this.onChangeCategory(refreshedCategory);\n      }\n    }\n\n    if (prevState.isVisibleSolution !== this.state.isVisibleSolution) {\n      store.set(store.vars.isVisibleSolution, this.state.isVisibleSolution);\n    }\n  }\n\n  componentWillUnmount(): void {\n    window.removeEventListener('beforeunload', this.onExit);\n    document.body.removeEventListener('keydown', this.onKeyDown);\n    document.body.removeEventListener('keypress', this.onKeyPress);\n    document.body.removeEventListener('keyup', this.onKeyUp);\n  }\n\n  timer: any;\n\n  onChangeAlgorithm = (): void => {\n    const { algorithms } = this.props;\n    const {\n      activeAlgorithmIds,\n      currentAlgorithm,\n      currentCategory\n    } = this.state;\n\n    this.onReset();\n\n    let newAlgorithm;\n    if (currentCategory.randomizableAlgorithm) {\n      const searchSpace = algorithms.filter(\n        algorithm =>\n          algorithm.category === currentCategory.value &&\n          activeAlgorithmIds.includes(algorithm._id)\n      );\n\n      if (!searchSpace.length) {\n        toastNoActiveAlgorithms();\n      }\n\n      const currentIndex = searchSpace.findIndex(\n        algorithm =>\n          // @ts-ignore\n          algorithm._id === (currentAlgorithm && currentAlgorithm._id)\n      );\n      let newIndex = currentIndex;\n      while (\n        newIndex === -1 ||\n        (newIndex === currentIndex && searchSpace.length > 1)\n      ) {\n        newIndex = random(0, searchSpace.length - 1);\n      }\n\n      newAlgorithm = searchSpace[newIndex];\n    } else if (currentCategory.randomizableScramble) {\n      const scramble = getRandomScramble(25);\n      newAlgorithm = { category: currentCategory.value, scramble };\n    }\n\n    this.setState({ currentAlgorithm: newAlgorithm });\n  };\n\n  onChangeCategory = (category: CategoryWithResults): void => {\n    this.setState({ currentCategory: category }, (): void => {\n      this.onChangeAlgorithm();\n    });\n  };\n\n  onToggleActive = (toggleAlgorithmId: string): void => {\n    const { activeAlgorithmIds, currentCategory } = this.state;\n\n    if (currentCategory && currentCategory.value) {\n      this.setState({\n        activeAlgorithmIds: activeAlgorithmIds.includes(toggleAlgorithmId)\n          ? activeAlgorithmIds.filter(\n              algorithmId => algorithmId !== toggleAlgorithmId\n            )\n          : activeAlgorithmIds.concat(toggleAlgorithmId)\n      });\n    }\n  };\n\n  onActivateAll = (): void => {\n    const { algorithms } = this.props;\n    const { activeAlgorithmIds, currentCategory } = this.state;\n\n    const currentAlgorithmIds = algorithms\n      .filter(algorithm => algorithm.category === currentCategory.value)\n      .map(algorithm => algorithm._id);\n\n    this.setState({\n      activeAlgorithmIds: uniq(activeAlgorithmIds.concat(currentAlgorithmIds))\n    });\n  };\n\n  onDeactivateAll = (): void => {\n    const { algorithms } = this.props;\n    const { activeAlgorithmIds, currentCategory } = this.state;\n\n    const currentAlgorithmIds = algorithms\n      .filter(algorithm => algorithm.category === currentCategory.value)\n      .map(algorithm => algorithm._id);\n\n    this.setState(\n      {\n        activeAlgorithmIds: activeAlgorithmIds.filter(\n          algorithmId => !currentAlgorithmIds.includes(algorithmId)\n        )\n      },\n      toastNoActiveAlgorithms\n    );\n  };\n\n  onExit = (): void => {\n    const { activeAlgorithmIds } = this.state;\n    store.set(store.vars.activeAlgorithmIds, activeAlgorithmIds);\n  };\n\n  onKeyDown = (event: KeyboardEvent): void => {\n    const blocked = this.state.blocked;\n\n    if ((event.key === 'Enter' || event.key === ' ') && !blocked.space) {\n      event.preventDefault();\n      this.onGoToNextStatus('down');\n      this.setState({ blocked: { ...blocked, space: true } });\n    } else if (event.key === 'r') {\n      event.preventDefault();\n      this.onChangeAlgorithm();\n    } else if (event.key === 'Shift' && !blocked.shift) {\n      event.preventDefault();\n      this.setState({\n        blocked: { ...blocked, shift: true },\n        isVisibleSolution: true\n      });\n    } else if (event.key === 'Control' && !blocked.control) {\n      event.preventDefault();\n      this.setState({ blocked: { ...blocked, control: true } });\n    } else if (\n      (event.key === 'Backspace' ||\n        event.key === 'Delete' ||\n        event.key === 'Escape') &&\n      !blocked.delete\n    ) {\n      event.preventDefault();\n      this.setState({ blocked: { ...blocked, delete: true } });\n    }\n  };\n\n  onKeyPress = (event: KeyboardEvent) => {\n    if (event.key === ' ') {\n      event.preventDefault();\n    }\n  };\n\n  onKeyUp = (event: KeyboardEvent) => {\n    const { blocked, isVisibleSolution } = this.state;\n\n    if (event.key === 'Enter' || event.key === ' ') {\n      this.onGoToNextStatus('up');\n      this.setState({ blocked: { ...blocked, space: false } });\n    } else if (event.key === 'Shift') {\n      this.setState({\n        blocked: { ...blocked, shift: false },\n        isVisibleSolution: false\n      });\n    } else if (event.key === 'Control') {\n      this.setState({\n        blocked: { ...blocked, control: false },\n        isVisibleSolution: !isVisibleSolution\n      });\n    } else if (\n      event.key === 'Backspace' ||\n      event.key === 'Delete' ||\n      event.key === 'Escape'\n    ) {\n      this.onChangeAlgorithm();\n      this.setState({ blocked: { ...blocked, delete: false } });\n    }\n  };\n\n  onGoToNextStatus = (upOrDown: 'down' | 'up') => {\n    const {\n      blocked,\n      currentAlgorithm,\n      currentCategory,\n      timerCurrentValue,\n      timerStatus\n    } = this.state;\n\n    if (!currentAlgorithm) {\n      return;\n    }\n\n    if (timerStatus === 'resetted' && upOrDown === 'down' && !blocked.space) {\n      this.setState({ timerStatus: 'pre-inspection' });\n    } else if (timerStatus === 'pre-inspection' && upOrDown === 'up') {\n      this.setState({\n        timerStatus: 'timer-on',\n        timerStartValue: moment().valueOf()\n      });\n      this.timer = setInterval(this.updateTimerTime, 1);\n    } else if (\n      timerStatus === 'timer-on' &&\n      upOrDown === 'down' &&\n      !blocked.space\n    ) {\n      clearInterval(this.timer);\n      this.setState({ timerStatus: 'timer-off' });\n    } else if (\n      timerStatus === 'timer-off' &&\n      upOrDown === 'down' &&\n      !blocked.space\n    ) {\n      /* Save the time */\n      const result = {\n        ...(currentAlgorithm && {\n          // @ts-ignore\n          ...(currentAlgorithm._id && { algorithmId: currentAlgorithm._id }),\n          scramble: currentAlgorithm.scramble\n        }),\n        category: currentCategory.value,\n        time: timerCurrentValue\n      };\n\n      Meteor.call('results.insert', result, () => this.onChangeAlgorithm());\n    }\n  };\n\n  onReset = (): void => {\n    clearInterval(this.timer);\n    this.setState({ timerStatus: 'resetted', timerCurrentValue: 0 });\n  };\n\n  updateTimerTime = (): void => {\n    this.setState(state => ({\n      timerCurrentValue: moment().valueOf() - state.timerStartValue\n    }));\n  };\n\n  render() {\n    const {\n      state: {\n        activeAlgorithmIds,\n        currentAlgorithm,\n        currentCategory,\n        isVisibleSolution,\n        timerCurrentValue\n      },\n      props: { algorithms, categories },\n      onActivateAll,\n      onToggleActive,\n      onChangeAlgorithm,\n      onChangeCategory,\n      onDeactivateAll\n    } = this;\n\n    const currentAlgorithms = algorithms.filter(\n      algorithm => algorithm.category === currentCategory.type\n    );\n\n    return (\n      <>\n        <SemanticToastContainer />\n        <Grid>\n          <Grid.Column width={4}>\n            <Menu className=\"left-menu\" inverted tabular vertical>\n              {categories.map(category => (\n                <Menu.Item\n                  key={category.value}\n                  name={category.label}\n                  active={currentCategory.value === category.value}\n                  onClick={() => onChangeCategory(category)}\n                />\n              ))}\n            </Menu>\n          </Grid.Column>\n          <Grid.Column width={8} textAlign=\"center\">\n            <TrainingMain\n              currentAlgorithm={currentAlgorithm}\n              isVisibleSolution={isVisibleSolution}\n              onChangeAlgorithm={onChangeAlgorithm}\n              timerCurrentValue={timerCurrentValue}\n            />\n          </Grid.Column>\n          <Grid.Column width={4}>\n            <Averages\n              currentAlgorithm={currentAlgorithm}\n              currentCategory={currentCategory}\n            />\n            <TipsAndTricks />\n          </Grid.Column>\n        </Grid>\n        {this.state.settingsOpened && (\n          <AlgSettings\n            activeAlgorithmIds={activeAlgorithmIds}\n            algorithms={currentAlgorithms}\n            currentCategory={currentCategory}\n            onActivateAll={onActivateAll}\n            onToggleActive={onToggleActive}\n            onDeactivateAll={onDeactivateAll}\n          />\n        )}\n      </>\n    );\n  }\n}\n\nexport default Training;\n","import React, { FunctionComponent } from 'react';\nimport { RouteComponentProps } from '@reach/router';\n\nconst About: FunctionComponent<RouteComponentProps> = () => <div>About</div>;\n\nexport default About;\n","import React, { FunctionComponent, useEffect, useState } from 'react';\nimport { Button, List, Segment } from 'semantic-ui-react';\nimport groupBy from 'lodash/groupBy';\nimport Slider, { createSliderWithTooltip } from 'rc-slider';\nimport { getAverage } from '../../../lib/utils';\nimport { AlgorithmWithResults, CategoryWithResults } from '../../../lib/types';\nimport { store } from '../lib/store';\n\nconst SliderTooltip = createSliderWithTooltip(Slider);\n\ntype Props = {\n  activeAlgorithmIds: string[];\n  algorithms: AlgorithmWithResults[];\n  currentCategory: CategoryWithResults;\n  onActivateAll: () => void;\n  onToggleActive: (algorithmId: string) => void;\n  onDeactivateAll: () => void;\n};\n\nconst details = [\n  {\n    value: 'category',\n    label: 'None'\n  },\n  {\n    value: 'type',\n    label: 'General'\n  },\n  {\n    value: 'subtype',\n    label: 'Precise'\n  }\n];\n\nconst AlgSettings: FunctionComponent<Props> = ({\n  activeAlgorithmIds,\n  algorithms,\n  currentCategory: { settingsDisabled },\n  onActivateAll,\n  onToggleActive,\n  onDeactivateAll\n}) => {\n  const [detailsLevel, setDetailsLevel] = useState(\n    store.get(store.vars.groupingLevel) || 1\n  );\n\n  useEffect(() => {\n    store.set(store.vars.groupingLevel, detailsLevel);\n  }, [detailsLevel]);\n\n  const algorithmsGrouped = groupBy(algorithms, details[detailsLevel].value);\n\n  return (\n    <section\n      className={`algorithm-settings${settingsDisabled ? ' disabled' : ''}`}\n    >\n      <List divided verticalAlign=\"middle\">\n        <List.Item>\n          <List.Content floated=\"right\">\n            <div className=\"grouping-level\">\n              <div className=\"title\">Grouping level</div>\n              <SliderTooltip\n                min={0}\n                max={2}\n                onChange={setDetailsLevel}\n                tipFormatter={(value: number): string => details[value].label}\n                tipProps={{\n                  placement: 'bottom',\n                  visible: true\n                }}\n                value={detailsLevel}\n              />\n            </div>\n          </List.Content>\n          <List.Content>\n            {!settingsDisabled && (\n              <div className=\"controls\">\n                <Button\n                  secondary\n                  onClick={settingsDisabled ? undefined : onActivateAll}\n                >\n                  Select all\n                </Button>\n                <Button\n                  secondary\n                  onClick={settingsDisabled ? undefined : onDeactivateAll}\n                >\n                  Unselect all\n                </Button>\n              </div>\n            )}\n          </List.Content>\n        </List.Item>\n      </List>\n\n      {Object.entries(algorithmsGrouped).map(([name, values], index) => (\n        <Segment key={index}>\n          <h5>{name}</h5>\n          {values.map(algorithm => (\n            <div\n              key={algorithm._id}\n              className={`algorithm${\n                settingsDisabled || activeAlgorithmIds.includes(algorithm._id)\n                  ? ' active'\n                  : ''\n              }`}\n              onClick={(): void =>\n                settingsDisabled ? undefined : onToggleActive(algorithm._id)\n              }\n            >\n              <img alt={algorithm.name} src={`/images/${algorithm.image}`} />\n              <div className=\"results-average\">\n                {getAverage(algorithm && algorithm.results)}\n              </div>\n            </div>\n          ))}\n        </Segment>\n      ))}\n    </section>\n  );\n};\n\nexport default AlgSettings;\n","import React, { FunctionComponent } from 'react';\nimport { List, Segment } from 'semantic-ui-react';\nimport moment from 'moment';\n\nimport { getAverage } from '../../../lib/utils';\nimport { AlgorithmWithResults, CategoryWithResults } from '../../../lib/types';\nimport { randomizedAlgorithm } from './training/training';\n\ntype Props = {\n  currentAlgorithm?: AlgorithmWithResults | randomizedAlgorithm;\n  currentCategory: CategoryWithResults;\n};\n\nconst Averages: FunctionComponent<Props> = ({\n  currentAlgorithm,\n  currentCategory\n}) => {\n  const currentAlgorithmAvg = getAverage(\n    // @ts-ignore\n    currentAlgorithm && currentAlgorithm.results\n  );\n  const currentCategoryAvg = getAverage(\n    currentCategory && currentCategory.results\n  );\n\n  const averages = ['OLL', 'PLL'].includes(currentCategory.value)\n    ? [\n        {\n          header: 'Average for this algorithm',\n          key: '0',\n          description: currentAlgorithmAvg\n            ? moment(currentAlgorithmAvg).format('ss:SSS')\n            : 'No records'\n        },\n        {\n          header: `Average for all ${currentCategory.value} algorithms`,\n          key: '1',\n          description: currentCategoryAvg\n            ? moment(currentCategoryAvg).format('ss:SSS')\n            : 'No records'\n        }\n      ]\n    : [\n        {\n          header: `Average for all in ${currentCategory.value}`,\n          key: '0',\n          description: currentCategoryAvg\n            ? moment(currentCategoryAvg).format('mm:ss:SSS')\n            : 'No records'\n        }\n      ];\n\n  return (\n    <Segment className=\"averages\">\n      <List inverted items={averages} />\n    </Segment>\n  );\n};\n\nexport default Averages;\n","import React, { FunctionComponent } from 'react';\nimport { RouteComponentProps } from '@reach/router';\n\nconst Home: FunctionComponent<RouteComponentProps> = () => (\n  <div>\n    {Meteor.userId() ? <>Welcome </> : <p>Please log in to continue.</p>}\n  </div>\n);\n\nexport default Home;\n","import React, { FunctionComponent } from 'react';\nimport { Dimmer, Loader as LoaderSemantic } from 'semantic-ui-react';\n\nconst Loader: FunctionComponent = () => (\n  <Dimmer active page style={{ backgroundColor: 'rgba(0, 0, 0, 0.55)' }}>\n    <LoaderSemantic size=\"large\">Loading</LoaderSemantic>\n  </Dimmer>\n);\n\nexport default Loader;\n","// @ts-ignore\nimport Blaze from 'meteor/gadicc:blaze-react-component';\nimport './loginButtons.html';\nimport React, { FunctionComponent } from 'react';\n\ntype Props = {};\n\nconst LoginArea: FunctionComponent<Props> = () => {\n  return (\n    <div className=\"login-area\">\n      <Blaze template=\"Accounts\" />\n    </div>\n  );\n};\n\nexport default LoginArea;\n","import React, { FunctionComponent } from 'react';\nimport { Icon, Menu, SemanticCOLORS, SemanticICONS } from 'semantic-ui-react';\nimport { Link, RouteComponentProps } from '@reach/router';\nimport capitalize from 'lodash/capitalize';\n// @ts-ignore\nimport Blaze from 'meteor/gadicc:blaze-react-component';\n\nimport './loginButtons.html';\nimport LoginArea from './loginArea';\n\ntype tab = {\n  name: string;\n  color: SemanticCOLORS;\n  icon: SemanticICONS;\n};\n\nconst tabs: tab[] = [\n  {\n    name: 'home',\n    color: 'green',\n    icon: 'home'\n  },\n  {\n    name: 'training',\n    color: 'blue',\n    icon: 'stopwatch'\n  },\n  {\n    name: 'results',\n    color: 'orange',\n    icon: 'list ol'\n  },\n  {\n    name: 'about',\n    color: 'teal',\n    icon: 'idea'\n  }\n];\n\nconst MenuTop: FunctionComponent<RouteComponentProps> = ({ uri }) => (\n  <Menu inverted icon=\"labeled\">\n    {tabs.map(({ color, icon, name }) => (\n      <Link key={name} to={`/${name}`}>\n        <Menu.Item active={`/${name}` === uri} color={color} name={name}>\n          <Icon name={icon} />\n          {capitalize(name)}\n        </Menu.Item>\n      </Link>\n    ))}\n    <LoginArea />\n  </Menu>\n);\n\nexport default MenuTop;\n","import moment from 'moment';\nimport React, { FunctionComponent } from 'react';\n\ntype Props = {\n  isVisibleSolution: boolean;\n  solution?: string;\n  timerCurrentValue: number;\n};\n\nconst Timer: FunctionComponent<Props> = ({\n  isVisibleSolution,\n  solution,\n  timerCurrentValue\n}) => (\n  <div className=\"timer\">\n    <p>{moment(timerCurrentValue).format('mm:ss:SSS')}</p>\n    {isVisibleSolution && solution && <p>{solution}</p>}\n  </div>\n);\n\nexport default Timer;\n","import React, { FunctionComponent } from 'react';\nimport { List, Segment } from 'semantic-ui-react';\n\ntype tip = {\n  description: string;\n  header: string;\n  icon: string;\n};\n\nconst tipsList: tip[] = [\n  {\n    header: 'Enter / Space',\n    description: '... -> start timer -> stop timer -> save result -> ...'\n  },\n  {\n    header: 'r',\n    description: 'Randomize new algorithm'\n  },\n  {\n    header: 'Shift (hold)',\n    description: 'Take a peek at the solution'\n  },\n  {\n    header: 'Control',\n    description: 'Show / hide the solution'\n  },\n  {\n    header: 'Backspace / Delete / Escape',\n    description: \"Reset timer - don't save the solution\"\n  }\n].map((tip, index) => ({ ...tip, key: index, icon: 'lightbulb outline' }));\n\nconst TipsAndTricks: FunctionComponent = () => (\n  <Segment>\n    Shortcuts list:\n    <List celled inverted items={tipsList} />\n  </Segment>\n);\n\nexport default TipsAndTricks;\n","import React, { FunctionComponent } from 'react';\nimport { Button, Segment } from 'semantic-ui-react';\n\nimport Timer from './timer';\nimport { AlgorithmWithResults } from '../../../lib/types';\nimport { randomizedAlgorithm } from './training/training';\n\ntype Props = {\n  onChangeAlgorithm: () => void;\n  currentAlgorithm?: AlgorithmWithResults | randomizedAlgorithm;\n  isVisibleSolution: boolean;\n  timerCurrentValue: number;\n};\n\nconst TrainingMain: FunctionComponent<Props> = ({\n  onChangeAlgorithm,\n  // @ts-ignore\n  currentAlgorithm: { image, scramble, solution } = {\n    image: undefined,\n    scramble: undefined,\n    solution: undefined\n  },\n  isVisibleSolution,\n  timerCurrentValue\n}) => (\n  <section className=\"training-main\">\n    {scramble && <Segment className=\"scramble-segment\">{scramble}</Segment>}\n    {image && (\n      <Segment className=\"image-segment\">\n        <img src={`/images/${image}`} />\n      </Segment>\n    )}\n    <Segment className=\"timer-segment\">\n      <Timer\n        isVisibleSolution={isVisibleSolution}\n        solution={solution}\n        timerCurrentValue={timerCurrentValue}\n      />\n    </Segment>\n    {(image || solution) && (\n      <Segment>\n        <Button primary onClick={(): void => onChangeAlgorithm()}>\n          Randomize new\n        </Button>\n      </Segment>\n    )}\n  </section>\n);\n\nexport default TrainingMain;\n","import React from 'react';\nimport { setDefaults } from 'react-komposer';\nimport { Tracker } from 'meteor/tracker';\n\nimport Loader from '../components/loader';\n\nconst errorHandler = (error: any) =>\n  Meteor.isProduction ? (\n    <span>An error occurred.</span>\n  ) : (\n    <code>{JSON.stringify(error, null, 2)}</code>\n  );\n\nconst compose = setDefaults({\n  errorHandler,\n  loadingHandler: Loader,\n  pure: true\n});\n\nconst getTrackerLoader = (reactiveMapper: any) => {\n  return (props: any, onData: any, env: any) => {\n    let trackerCleanup: any = null;\n    const handler = Tracker.nonreactive(() => {\n      return Tracker.autorun(() => {\n        // assign the custom clean-up function.\n        trackerCleanup = reactiveMapper(props, onData, env);\n      });\n    });\n\n    return () => {\n      if (typeof trackerCleanup === 'function') {\n        trackerCleanup();\n      }\n      // @ts-ignore\n      return handler.stop();\n    };\n  };\n};\n\nexport const composer = (reactiveMapper: any, options?: any) => {\n  return compose(getTrackerLoader(reactiveMapper), options);\n};\n","export const store = {\n  get: (property: string): any => {\n    try {\n      return JSON.parse(localStorage.getItem(property) || '');\n    } catch {\n      return undefined;\n    }\n  },\n  set: (property: string, value: any): void => {\n    localStorage.setItem(property, JSON.stringify(value));\n  },\n  vars: {\n    activeAlgorithmIds: 'activeAlgorithmIds',\n    isVisibleSolution: 'isVisibleSolution',\n    groupingLevel: 'groupingLevel'\n  }\n};\n","import { toast } from 'react-semantic-toasts';\n\nexport const toastNoActiveAlgorithms = () =>\n  toast({\n    title: 'No active algorithms',\n    type: 'warning',\n    description:\n      'Randomizing algorithms pauzed until you select at least one algorithm',\n    time: 5000\n  });\n","import React from 'react';\nimport { Meteor } from 'meteor/meteor';\nimport { render } from 'react-dom';\n\nimport Router from './imports/components/router';\n\nimport 'rc-slider/assets/index.css';\nimport 'react-semantic-toasts/styles/react-semantic-alert.css';\n\nMeteor.startup(() => {\n  render(<Router />, document.getElementById('render-target'));\n});\n","import { Category } from './types';\n\nexport const categories: Category[] = [\n  {\n    label: 'OLL',\n    value: 'OLL',\n    type: 'OLL',\n    randomizableAlgorithm: true\n  },\n  {\n    label: 'PLL',\n    value: 'PLL',\n    type: 'PLL',\n    randomizableAlgorithm: true\n  },\n  {\n    label: '3x3x3',\n    value: '3x3x3',\n    randomizableScramble: true\n  },\n  {\n    label: 'OLL Attack',\n    value: 'OLL-attack',\n    type: 'OLL',\n    settingsDisabled: true\n  },\n  {\n    label: 'PLL Attack',\n    value: 'PLL-attack',\n    type: 'PLL',\n    settingsDisabled: true\n  }\n];\n","type allowedMove =\n  | 'F'\n  | \"F'\"\n  | 'F2'\n  | 'B'\n  | \"B'\"\n  | 'B2'\n  | 'R'\n  | \"R'\"\n  | 'R2'\n  | 'L'\n  | \"L'\"\n  | 'L2'\n  | 'U'\n  | \"U'\"\n  | 'U2'\n  | 'D'\n  | \"D'\"\n  | 'D2';\n\nconst allowedMoves: allowedMove[] = [\n  'F',\n  \"F'\",\n  'F2',\n  'B',\n  \"B'\",\n  'B2',\n  'R',\n  \"R'\",\n  'R2',\n  'L',\n  \"L'\",\n  'L2',\n  'U',\n  \"U'\",\n  'U2',\n  'D',\n  \"D'\",\n  'D2'\n];\n\nconst getRandomMove = (): allowedMove =>\n  allowedMoves[Math.floor(Math.random() * allowedMoves.length)];\n\nconst movesConflict = (moveA?: string, moveB?: string): boolean =>\n  moveA && moveB\n    ? moveA.split('').some(character => moveB.includes(character))\n    : false;\n\nexport const getRandomScramble = (movesNr: number): string => {\n  const moves = [];\n\n  let move = '';\n  let previousMove = '';\n  for (let i = 0; i < movesNr; i++) {\n    move = getRandomMove();\n    while (movesConflict(move, previousMove)) {\n      move = getRandomMove();\n    }\n\n    previousMove = move;\n    moves.push(move);\n  }\n\n  return moves.join(' ');\n};\n\nexport const getAverage = (results?: number[]): number => {\n  if (!results || results.length === 0) {\n    return 0;\n  }\n\n  return Math.round(\n    results.reduce((sum, result) => sum + result, 0) / results.length\n  );\n};\n","import { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\nimport { check } from 'meteor/check';\n\nexport const Algorithms = new Mongo.Collection('algorithms');\n\nMeteor.methods({\n  // 'algorithms.insert'({ category, image, scramble, solution, subtype, type }) {\n  //   check(this.userId, String);\n  //   check(category, String);\n  //   check(image, String);\n  //   check(scramble, String);\n  //   check(solution, String);\n  //   check(subtype, String);\n  //   check(type, String);\n  //\n  //   const doc = {\n  //     createdAt: new Date(),\n  //     category,\n  //     image,\n  //     scramble,\n  //     solution,\n  //     subtype,\n  //     type\n  //   };\n  //\n  //   Algorithms.insert(doc);\n  // },\n  'algorithms.search'(text) {\n    check(text, String);\n\n    return Algorithms.find();\n  }\n  // 'algorithms.remove'(algorithmId) {\n  //   check(this.userId, String);\n  //   check(algorithmId, String);\n  //\n  //   Algorithms.remove(algorithmId);\n  // }\n});\n","import { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\nimport { check } from 'meteor/check';\n\nexport const Results = new Mongo.Collection('results');\n\nMeteor.methods({\n  'results.insert'({ algorithmId, category, scramble, time }) {\n    check(category, String);\n    check(time, Number);\n\n    if (category === 'OLL' || category === 'PLL' || category === '3x3x3') {\n      check(scramble, String);\n    }\n\n    if (category === 'OLL' || category === 'PLL') {\n      check(algorithmId, String);\n    }\n\n    const doc = {\n      algorithmId,\n      category,\n      createdAt: new Date(),\n      scramble,\n      time,\n      userId: this.userId || 'demo'\n    };\n\n    Results.insert(doc);\n  },\n  'results.remove'(resultId) {\n    check(this.userId, String);\n    check(resultId, String);\n\n    Results.remove({ userId: this.userId, resultId });\n  }\n});\n"]}