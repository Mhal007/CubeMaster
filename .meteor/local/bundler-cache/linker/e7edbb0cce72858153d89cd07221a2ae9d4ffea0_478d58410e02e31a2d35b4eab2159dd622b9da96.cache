[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nTemplate = Package['templating-runtime'].Template;\nmeteorInstall = Package.modules.meteorInstall;\nPromise = Package.promise.Promise;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"client\":{\"template.main.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                  //\n// client/template.main.js                                                                          //\n//                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                    //\n\nTemplate.body.addContent((function() {\n  var view = this;\n  return HTML.Raw('<div id=\"render-target\"></div>');\n}));\nMeteor.startup(Template.body.renderToDocument);\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"lib\":{\"composer.js\":function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                  //\n// client/lib/composer.js                                                                           //\n//                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                    //\nmodule.export({\n  composer: () => composer\n});\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet setDefaults;\nmodule.link(\"react-komposer\", {\n  setDefaults(v) {\n    setDefaults = v;\n  }\n\n}, 1);\nlet Tracker;\nmodule.link(\"meteor/tracker\", {\n  Tracker(v) {\n    Tracker = v;\n  }\n\n}, 2);\nlet Loader;\nmodule.link(\"../components/loader\", {\n  default(v) {\n    Loader = v;\n  }\n\n}, 3);\n\nconst errorHandler = error => Meteor.isProduction ? React.createElement(\"span\", null, \"An error occurred.\") : React.createElement(\"code\", null, JSON.stringify(error, null, 2));\n\nconst compose = setDefaults({\n  errorHandler,\n  loadingHandler: Loader,\n  pure: true\n});\n\nconst getTrackerLoader = reactiveMapper => {\n  return (props, onData, env) => {\n    let trackerCleanup = null;\n    const handler = Tracker.nonreactive(() => {\n      return Tracker.autorun(() => {\n        // assign the custom clean-up function.\n        trackerCleanup = reactiveMapper(props, onData, env);\n      });\n    });\n    return () => {\n      if (typeof trackerCleanup === 'function') trackerCleanup();\n      return handler.stop();\n    };\n  };\n};\n\nconst composer = (reactiveMapper, options) => {\n  return compose(getTrackerLoader(reactiveMapper), options);\n};\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"utils.js\":function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                  //\n// client/utils.js                                                                                  //\n//                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                    //\nmodule.export({\n  getAverage: () => getAverage\n});\n\nconst getAverage = results => {\n  if (!results || results.length === 0) {\n    return 0;\n  }\n\n  return Math.round(results.reduce((sum, result) => sum + result, 0) / results.length);\n};\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"main.js\":function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                  //\n// client/main.js                                                                                   //\n//                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                    //\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 1);\nlet render;\nmodule.link(\"react-dom\", {\n  render(v) {\n    render = v;\n  }\n\n}, 2);\nlet Container;\nmodule.link(\"./components/container\", {\n  default(v) {\n    Container = v;\n  }\n\n}, 3);\nmodule.link(\"rc-slider/assets/index.css\");\nmodule.link(\"react-semantic-toasts/styles/react-semantic-alert.css\");\nMeteor.startup(() => {\n  render(React.createElement(Container, null), document.getElementById('render-target'));\n});\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"lib\":{\"global-helpers.js\":function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                  //\n// lib/global-helpers.js                                                                            //\n//                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                    //\nmodule.export({\n  getRandomScramble: () => getRandomScramble\n});\nconst allowedMoves = ['F', \"F'\", 'F2', 'B', \"B'\", 'B2', 'R', \"R'\", 'R2', 'L', \"L'\", 'L2', 'U', \"U'\", 'U2', 'D', \"D'\", 'D2'];\n\nconst getRandomMove = () => allowedMoves[Math.floor(Math.random() * allowedMoves.length)];\n\nconst movesConflict = (moveA, moveB) => moveA && moveB && moveA.split('').some(character => moveB.includes(character));\n\nconst getRandomScramble = movesNr => {\n  const moves = [];\n  let move;\n  let previousMove;\n\n  for (let i = 0; i < movesNr; i++) {\n    move = getRandomMove();\n\n    while (movesConflict(move, previousMove)) {\n      move = getRandomMove();\n    }\n\n    previousMove = move;\n    moves.push(move);\n  }\n\n  return moves.join(' ');\n};\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"collections\":{\"algorithms.js\":function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                  //\n// collections/algorithms.js                                                                        //\n//                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                    //\nmodule.export({\n  Algorithms: () => Algorithms\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 1);\nlet check;\nmodule.link(\"meteor/check\", {\n  check(v) {\n    check = v;\n  }\n\n}, 2);\nlet expect;\nmodule.link(\"chai\", {\n  expect(v) {\n    expect = v;\n  }\n\n}, 3);\nconst Algorithms = new Mongo.Collection('algorithms');\nMeteor.methods({\n  'algorithms.toggleActive': (algId, active) => {\n    check(active, Boolean);\n    check(algId, String);\n    Algorithms.update(algId, {\n      $set: {\n        active\n      }\n    });\n  },\n  'algorithms.activateAll': category => {\n    Algorithms.update({\n      category\n    }, {\n      $set: {\n        active: true\n      }\n    }, {\n      multi: true\n    });\n  },\n  'algorithms.deactivateAll': category => {\n    Algorithms.update({\n      category\n    }, {\n      $set: {\n        active: false\n      }\n    }, {\n      multi: true\n    });\n  },\n  'algorithms.insert': (_ref) => {\n    let {\n      category,\n      image,\n      scramble,\n      solution,\n      subtype,\n      type\n    } = _ref;\n    expect(category).to.be.a('string');\n    expect(image).to.be.a('string');\n    expect(scramble).to.be.a('string');\n    expect(solution).to.be.a('string');\n    expect(subtype).to.be.a('string');\n    expect(type).to.be.a('string'); // Make sure the user is logged in before inserting a algorithm\n\n    /* if (! Meteor.userId()) {\n         throw new Meteor.Error('not-authorized');\n     }*/\n\n    const doc = {\n      createdAt: new Date(),\n      category,\n      image,\n      scramble,\n      solution,\n      subtype,\n      type\n    };\n    Algorithms.insert(doc);\n  },\n\n  'algorithms.search'(text) {\n    check(text, String);\n    return Algorithms.find();\n  },\n\n  'algorithms.remove'(algorithmId) {\n    check(algorithmId, String);\n    /*const algorithm = Algorithms.findOne(algorithmId);\n    if (algorithm.private && algorithm.owner !== Meteor.userId()) {\n      // If the algorithm is private, make sure only the owner can delete it\n          throw new Meteor.Error('not-authorized');\n    }*/\n\n    Algorithms.remove(algorithmId);\n  }\n  /*,\n  'algorithms.setChecked'(algorithmId, setChecked) {\n      check(algorithmId, String);\n      check(setChecked, Boolean);\n       const algorithm = Algorithms.findOne(algorithmId);\n      if (algorithm.private && algorithm.owner !== Meteor.userId()) {\n            // If the algorithm is private, make sure only the owner can check it off\n                throw new Meteor.Error('not-authorized');\n          }\n       Algorithms.update(algorithmId, { $set: { checked: setChecked } });\n  },\n  'algorithms.setPrivate'(algorithmId, setToPrivate) {\n      check(algorithmId, String);\n      check(setToPrivate, Boolean);\n       const algorithm = Algorithms.findOne(algorithmId);\n       // Make sure only the algorithm owner can make a algorithm private\n      if (algorithm.owner !== Meteor.userId()) {\n          throw new Meteor.Error('not-authorized');\n      }\n       Algorithms.update(algorithmId, { $set: { private: setToPrivate } });\n  },*/\n\n\n});\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"results.js\":function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                  //\n// collections/results.js                                                                           //\n//                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                    //\nmodule.export({\n  Results: () => Results\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 1);\nlet check;\nmodule.link(\"meteor/check\", {\n  check(v) {\n    check = v;\n  }\n\n}, 2);\nconst Results = new Mongo.Collection('results');\nMeteor.methods({\n  'results.insert': (_ref) => {\n    let {\n      algorithmId,\n      category,\n      real,\n      scramble,\n      time\n    } = _ref;\n    check(category, String);\n    check(real, Boolean);\n    check(time, Number);\n\n    if (category === 'OLL' || category === 'PLL' || category === '3x3x3') {\n      check(scramble, String);\n    }\n\n    if (category === 'OLL' || category === 'PLL') {\n      check(algorithmId, String);\n    } // Make sure the user is logged in before inserting a result\n\n    /* if (! Meteor.userId()) {\n     throw new Meteor.Error('not-authorized');\n     }*/\n\n\n    const doc = {\n      algorithmId,\n      category,\n      createdAt: new Date(),\n      real,\n      scramble,\n      time\n    };\n    Results.insert(doc);\n  },\n  'results.search': text => {\n    check(text, String);\n    return Results.find();\n  },\n  'results.remove': resultId => {\n    check(resultId, String);\n    /*const result = Results.findOne(resultId);\n     if (result.private && result.owner !== Meteor.userId()) {\n     // If the result is private, make sure only the owner can delete it\n     throw new Meteor.Error('not-authorized');\n     }*/\n\n    Results.remove(resultId);\n  }\n});\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\",\n    \".html\",\n    \".ts\",\n    \".jsx\",\n    \".mjs\",\n    \".tsx\",\n    \".css\",\n    \".less\"\n  ]\n});\n\nrequire(\"/client/template.main.js\");\nrequire(\"/client/lib/composer.js\");\nrequire(\"/lib/global-helpers.js\");\nrequire(\"/client/utils.js\");\nrequire(\"/collections/algorithms.js\");\nrequire(\"/collections/results.js\");\nrequire(\"/client/main.js\");","hash":"19229f41b5d81bd901e12d9cc769a79c4075bab4","servePath":"/app.js","sourceMap":{"version":3,"sources":["client/lib/composer.js","client/utils.js","client/main.js","lib/global-helpers.js","collections/algorithms.js","collections/results.js"],"names":["module","export","composer","React","link","default","v","setDefaults","Tracker","Loader","errorHandler","error","Meteor","isProduction","JSON","stringify","compose","loadingHandler","pure","getTrackerLoader","reactiveMapper","props","onData","env","trackerCleanup","handler","nonreactive","autorun","stop","options","getAverage","results","length","Math","round","reduce","sum","result","render","Container","startup","document","getElementById","getRandomScramble","allowedMoves","getRandomMove","floor","random","movesConflict","moveA","moveB","split","some","character","includes","movesNr","moves","move","previousMove","i","push","join","Algorithms","Mongo","check","expect","Collection","methods","algId","active","Boolean","String","update","$set","category","multi","image","scramble","solution","subtype","type","to","be","a","doc","createdAt","Date","insert","text","find","algorithmId","remove","Results","real","time","Number","resultId"],"mappings":"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","file":"/app.js","sourcesContent":["import React from 'react';\nimport { setDefaults } from 'react-komposer';\nimport { Tracker } from 'meteor/tracker';\n\nimport Loader from '../components/loader';\n\nconst errorHandler = error =>\n  Meteor.isProduction ? (\n    <span>An error occurred.</span>\n  ) : (\n    <code>{JSON.stringify(error, null, 2)}</code>\n  );\n\nconst compose = setDefaults({\n  errorHandler,\n  loadingHandler: Loader,\n  pure: true\n});\n\nconst getTrackerLoader = reactiveMapper => {\n  return (props, onData, env) => {\n    let trackerCleanup = null;\n    const handler = Tracker.nonreactive(() => {\n      return Tracker.autorun(() => {\n        // assign the custom clean-up function.\n        trackerCleanup = reactiveMapper(props, onData, env);\n      });\n    });\n\n    return () => {\n      if (typeof trackerCleanup === 'function') trackerCleanup();\n      return handler.stop();\n    };\n  };\n};\n\nexport const composer = (reactiveMapper, options) => {\n  return compose(\n    getTrackerLoader(reactiveMapper),\n    options\n  );\n};\n","export const getAverage = results => {\n  if (!results || results.length === 0) {\n    return 0;\n  }\n\n  return Math.round(\n    results.reduce((sum, result) => sum + result, 0) / results.length\n  );\n};\n","import React from 'react';\nimport { Meteor } from 'meteor/meteor';\nimport { render } from 'react-dom';\n\nimport Container from './components/container';\n\nimport 'rc-slider/assets/index.css';\nimport 'react-semantic-toasts/styles/react-semantic-alert.css';\n\nMeteor.startup(() => {\n  render(<Container />, document.getElementById('render-target'));\n});\n","const allowedMoves = [\n  'F',\n  \"F'\",\n  'F2',\n  'B',\n  \"B'\",\n  'B2',\n  'R',\n  \"R'\",\n  'R2',\n  'L',\n  \"L'\",\n  'L2',\n  'U',\n  \"U'\",\n  'U2',\n  'D',\n  \"D'\",\n  'D2'\n];\n\nconst getRandomMove = () =>\n  allowedMoves[Math.floor(Math.random() * allowedMoves.length)];\nconst movesConflict = (moveA, moveB) =>\n  moveA &&\n  moveB &&\n  moveA.split('').some(character => moveB.includes(character));\n\nexport const getRandomScramble = movesNr => {\n  const moves = [];\n\n  let move;\n  let previousMove;\n  for (let i = 0; i < movesNr; i++) {\n    move = getRandomMove();\n    while (movesConflict(move, previousMove)) {\n      move = getRandomMove();\n    }\n\n    previousMove = move;\n    moves.push(move);\n  }\n\n  return moves.join(' ');\n};\n","import { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\nimport { check } from 'meteor/check';\n\nimport { expect } from 'chai';\n\nexport const Algorithms = new Mongo.Collection('algorithms');\n\nMeteor.methods({\n  'algorithms.toggleActive': (algId, active) => {\n    check(active, Boolean);\n    check(algId, String);\n\n    Algorithms.update(algId, { $set: { active } });\n  },\n  'algorithms.activateAll': category => {\n    Algorithms.update(\n      { category },\n      { $set: { active: true } },\n      { multi: true }\n    );\n  },\n  'algorithms.deactivateAll': category => {\n    Algorithms.update(\n      { category },\n      { $set: { active: false } },\n      { multi: true }\n    );\n  },\n  'algorithms.insert': ({\n    category,\n    image,\n    scramble,\n    solution,\n    subtype,\n    type\n  }) => {\n    expect(category).to.be.a('string');\n    expect(image).to.be.a('string');\n    expect(scramble).to.be.a('string');\n    expect(solution).to.be.a('string');\n    expect(subtype).to.be.a('string');\n    expect(type).to.be.a('string');\n\n    // Make sure the user is logged in before inserting a algorithm\n    /* if (! Meteor.userId()) {\n         throw new Meteor.Error('not-authorized');\n     }*/\n\n    const doc = {\n      createdAt: new Date(),\n      category,\n      image,\n      scramble,\n      solution,\n      subtype,\n      type\n    };\n\n    Algorithms.insert(doc);\n  },\n  'algorithms.search'(text) {\n    check(text, String);\n\n    return Algorithms.find();\n  },\n  'algorithms.remove'(algorithmId) {\n    check(algorithmId, String);\n\n    /*const algorithm = Algorithms.findOne(algorithmId);\n    if (algorithm.private && algorithm.owner !== Meteor.userId()) {\n      // If the algorithm is private, make sure only the owner can delete it\n          throw new Meteor.Error('not-authorized');\n    }*/\n\n    Algorithms.remove(algorithmId);\n  } /*,\n    'algorithms.setChecked'(algorithmId, setChecked) {\n        check(algorithmId, String);\n        check(setChecked, Boolean);\n\n        const algorithm = Algorithms.findOne(algorithmId);\n        if (algorithm.private && algorithm.owner !== Meteor.userId()) {\n              // If the algorithm is private, make sure only the owner can check it off\n                  throw new Meteor.Error('not-authorized');\n            }\n\n        Algorithms.update(algorithmId, { $set: { checked: setChecked } });\n    },\n    'algorithms.setPrivate'(algorithmId, setToPrivate) {\n        check(algorithmId, String);\n        check(setToPrivate, Boolean);\n\n        const algorithm = Algorithms.findOne(algorithmId);\n\n        // Make sure only the algorithm owner can make a algorithm private\n        if (algorithm.owner !== Meteor.userId()) {\n            throw new Meteor.Error('not-authorized');\n        }\n\n        Algorithms.update(algorithmId, { $set: { private: setToPrivate } });\n    },*/\n});\n","import { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\nimport { check } from 'meteor/check';\n\nexport const Results = new Mongo.Collection('results');\n\nMeteor.methods({\n  'results.insert': ({ algorithmId, category, real, scramble, time }) => {\n    check(category, String);\n    check(real, Boolean);\n    check(time, Number);\n\n    if (category === 'OLL' || category === 'PLL' || category === '3x3x3') {\n      check(scramble, String);\n    }\n\n    if (category === 'OLL' || category === 'PLL') {\n      check(algorithmId, String);\n    }\n\n    // Make sure the user is logged in before inserting a result\n    /* if (! Meteor.userId()) {\n     throw new Meteor.Error('not-authorized');\n     }*/\n\n    const doc = {\n      algorithmId,\n      category,\n      createdAt: new Date(),\n      real,\n      scramble,\n      time\n    };\n\n    Results.insert(doc);\n  },\n  'results.search': text => {\n    check(text, String);\n\n    return Results.find();\n  },\n  'results.remove': resultId => {\n    check(resultId, String);\n\n    /*const result = Results.findOne(resultId);\n     if (result.private && result.owner !== Meteor.userId()) {\n     // If the result is private, make sure only the owner can delete it\n     throw new Meteor.Error('not-authorized');\n     }*/\n\n    Results.remove(resultId);\n  }\n});\n"]}}]