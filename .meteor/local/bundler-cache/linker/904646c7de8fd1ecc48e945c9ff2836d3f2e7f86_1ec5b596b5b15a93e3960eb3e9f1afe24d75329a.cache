[{"type":"js","data":"/* Imports for global scope */\n\nMongoInternals = Package.mongo.MongoInternals;\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nECMAScript = Package.ecmascript.ECMAScript;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nWebAppInternals = Package.webapp.WebAppInternals;\nmain = Package.webapp.main;\nDDP = Package['ddp-client'].DDP;\nDDPServer = Package['ddp-server'].DDPServer;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nmeteorInstall = Package.modules.meteorInstall;\nPromise = Package.promise.Promise;\nAutoupdate = Package.autoupdate.Autoupdate;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"lib\":{\"global-helpers.js\":function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                  //\n// lib/global-helpers.js                                                                            //\n//                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                    //\nmodule.export({\n  getRandomScramble: () => getRandomScramble\n});\nconst allowedMoves = ['F', \"F'\", 'F2', 'B', \"B'\", 'B2', 'R', \"R'\", 'R2', 'L', \"L'\", 'L2', 'U', \"U'\", 'U2', 'D', \"D'\", 'D2'];\n\nconst getRandomMove = () => allowedMoves[Math.floor(Math.random() * allowedMoves.length)];\n\nconst movesConflict = (moveA, moveB) => moveA && moveB && moveA.split('').some(character => moveB.includes(character));\n\nconst getRandomScramble = movesNr => {\n  const moves = [];\n  let move;\n  let previousMove;\n\n  for (let i = 0; i < movesNr; i++) {\n    move = getRandomMove();\n\n    while (movesConflict(move, previousMove)) {\n      move = getRandomMove();\n    }\n\n    previousMove = move;\n    moves.push(move);\n  }\n\n  return moves.join(' ');\n};\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"server\":{\"imports\":{\"algorithmsCreation.ts\":function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                  //\n// server/imports/algorithmsCreation.ts                                                             //\n//                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                    //\nmodule.export({\n  createAlgorithms: () => createAlgorithms\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Algorithms;\nmodule.link(\"../../collections/algorithms\", {\n  Algorithms(v) {\n    Algorithms = v;\n  }\n\n}, 1);\nlet OLLs, PLLs;\nmodule.link(\"./const\", {\n  OLLs(v) {\n    OLLs = v;\n  },\n\n  PLLs(v) {\n    PLLs = v;\n  }\n\n}, 2);\n\nconst createAlgorithms = () => {\n  const isOLL = !!Algorithms.findOne({\n    category: 'OLL'\n  });\n  const isPLL = !!Algorithms.findOne({\n    category: 'PLL'\n  });\n  !isOLL && OLLs.forEach(algorithm => Meteor.call('algorithms.insert', algorithm));\n  !isPLL && PLLs.forEach(algorithm => Meteor.call('algorithms.insert', algorithm));\n};\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"const.ts\":function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                  //\n// server/imports/const.ts                                                                          //\n//                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                    //\nmodule.export({\n  OLLs: () => OLLs,\n  PLLs: () => PLLs\n});\nconst squresFull = [[1, 1, 1], [1, 1, 1], [1, 1, 1]];\nconst srikesNone = [];\nconst OLLs = [{\n  active: true,\n  category: 'OLL',\n  image: 'oll_1.svg',\n  name: 'oll_1',\n  scramble: \"RU2 R' U' RUR' U' RU' R' U'\",\n  solution: \"RU2 R' U' RUR' U' RU' R'\",\n  type: 'Cross',\n  subtype: 'Cross',\n  squares: [[0, 1, 0], [1, 1, 1], [0, 1, 0]],\n  strikes: [[1, 0, 1], [0, 0, 0], [1, 0, 1], [0, 0, 0]]\n}, {\n  active: true,\n  category: 'OLL',\n  image: 'oll_2.svg',\n  name: 'oll_2',\n  scramble: \"RU2 R2 U' R2U' R2U2R\",\n  solution: \"(RU2 R2 U') (R2U') (R2U2R)\",\n  type: 'Cross',\n  subtype: 'Cross',\n  squares: [[0, 1, 0], [1, 1, 1], [0, 1, 0]],\n  strikes: [[0, 0, 1], [0, 0, 0], [0, 0, 1], [1, 0, 1]]\n}, {\n  active: true,\n  category: 'OLL',\n  image: 'oll_3.svg',\n  name: 'oll_3',\n  scramble: \"x' (RUR' DRU' R' D' F)\",\n  solution: \"x' (RU' R' DRUR' D')\",\n  type: 'Cross',\n  subtype: 'Cross',\n  squares: [[0, 1, 1], [1, 1, 1], [1, 1, 0]],\n  strikes: [[1, 0, 0], [0, 0, 1], [0, 0, 0], [0, 0, 0]]\n}, {\n  active: true,\n  category: 'OLL',\n  image: 'oll_4.svg',\n  name: 'oll_4',\n  scramble: \"RU2RDR' U2RD' R2 U2\",\n  solution: \"R2D' RU2R'DRU2R\",\n  type: 'Cross',\n  subtype: 'Cross',\n  squares: [[0, 1, 0], [1, 1, 1], [1, 1, 1]],\n  strikes: [[1, 0, 1], [0, 0, 0], [0, 0, 0], [0, 0, 0]]\n}, {\n  active: true,\n  category: 'OLL',\n  image: 'oll_5.svg',\n  name: 'oll_5',\n  scramble: \"x' (RU' R' DRUR' D')\",\n  solution: \"x' (RUR' DRU' R' D')\",\n  type: 'Cross',\n  subtype: 'Cross',\n  squares: [[1, 1, 1], [1, 1, 1], [0, 1, 0]],\n  strikes: [[0, 0, 0], [0, 0, 1], [0, 0, 0], [0, 0, 1]]\n}, {\n  active: true,\n  category: 'OLL',\n  image: 'oll_6.svg',\n  name: 'oll_6',\n  scramble: \"RUR' URU2R' U\",\n  solution: \"L' U' LU' L' U2L\",\n  type: 'Cross',\n  subtype: 'Cross',\n  squares: [[0, 1, 0], [1, 1, 1], [0, 1, 1]],\n  strikes: [[0, 0, 1], [0, 0, 0], [1, 0, 0], [1, 0, 0]]\n}, {\n  active: true,\n  category: 'OLL',\n  image: 'oll_7.svg',\n  name: 'oll_7',\n  scramble: \"L' U' LU' L' U2LU'\",\n  solution: \"RUR' URU2R'\",\n  type: 'Cross',\n  subtype: 'Cross',\n  squares: [[0, 1, 0], [1, 1, 1], [1, 1, 0]],\n  strikes: [[1, 0, 0], [1, 0, 0], [0, 0, 1], [0, 0, 0]]\n}, {\n  active: true,\n  category: 'OLL',\n  image: 'oll_8.svg',\n  name: 'oll_8',\n  scramble: \"FR' F' RUR2B' R' BU' R'\",\n  solution: \"(RU2R2FR) (F' U2R' FRF')\",\n  type: 'Dot',\n  subtype: 'Dot',\n  squares: [[0, 0, 0], [0, 1, 0], [0, 0, 0]],\n  strikes: [[0, 1, 0], [1, 1, 1], [0, 1, 0], [1, 1, 1]]\n}, {\n  active: true,\n  category: 'OLL',\n  image: 'oll_9.svg',\n  name: 'oll_9',\n  scramble: \"FR' F' RU2FR' F' RU' RU' R' U2\",\n  solution: \"LF' L' FU2FU' RU' R' F'\",\n  type: 'Dot',\n  subtype: 'Dot',\n  squares: [[1, 0, 0], [0, 1, 0], [0, 0, 1]],\n  strikes: [[0, 1, 0], [1, 1, 0], [1, 1, 0], [0, 1, 0]]\n}, {\n  active: true,\n  category: 'OLL',\n  image: 'oll_10.svg',\n  name: 'oll_10',\n  scramble: \"FR' F' RU2R d' RU' R' F' U'\",\n  solution: \"(RU2R2FRF' U2) M' URU' L'\",\n  type: 'Dot',\n  subtype: 'Dot',\n  squares: [[0, 0, 1], [0, 1, 0], [0, 0, 1]],\n  strikes: [[0, 1, 0], [0, 1, 0], [0, 1, 0], [1, 1, 1]]\n}, {\n  active: true,\n  category: 'OLL',\n  image: 'oll_11.svg',\n  name: 'oll_11',\n  scramble: \"RU2R2FRF' U2R' FRF' U2\",\n  solution: \"(FRUR' U' F') (fRUR' U' f')\",\n  type: 'Dot',\n  subtype: 'Dot',\n  squares: [[0, 0, 0], [0, 1, 0], [0, 0, 0]],\n  strikes: [[0, 1, 1], [0, 1, 0], [0, 1, 1], [1, 1, 1]]\n}, {\n  active: true,\n  category: 'OLL',\n  image: 'oll_12.svg',\n  name: 'oll_12',\n  scramble: \"R' F' U2F2URU' R' F' U2R\",\n  solution: \"R' U2FRUR' U' F2U2FR\",\n  type: 'Dot',\n  subtype: 'Dot',\n  squares: [[1, 0, 1], [0, 1, 0], [0, 0, 0]],\n  strikes: [[0, 1, 0], [0, 1, 1], [0, 1, 0], [0, 1, 1]]\n}, {\n  active: true,\n  category: 'OLL',\n  image: 'oll_13.svg',\n  name: 'oll_13',\n  scramble: \"MU' LF2L' U' RU' R2 r\",\n  solution: \"MUR' F2RUL' U L2 l'\",\n  type: 'Dot',\n  subtype: 'Dot',\n  squares: [[0, 0, 0], [0, 1, 0], [1, 0, 0]],\n  strikes: [[1, 1, 0], [1, 1, 0], [0, 1, 1], [0, 1, 0]]\n}, {\n  active: true,\n  category: 'OLL',\n  image: 'oll_14.svg',\n  name: 'oll_14',\n  scramble: \"MUR' F2RUL' U L2 l'\",\n  solution: \"MU' LF2L' U' RU' R2 r\",\n  type: 'Dot',\n  subtype: 'Dot',\n  squares: [[0, 0, 0], [0, 1, 0], [0, 0, 1]],\n  strikes: [[0, 1, 1], [0, 1, 0], [1, 1, 0], [1, 1, 0]]\n}, {\n  active: true,\n  category: 'OLL',\n  image: 'oll_15.svg',\n  name: 'oll_15',\n  scramble: \"(MUMUMUMU) (M' UM' UM' UM' U)\",\n  solution: \"M (URUR' U') M2 (U RU' r')\",\n  type: 'Dot',\n  subtype: 'Letter X',\n  squares: [[1, 0, 1], [0, 1, 0], [1, 0, 1]],\n  strikes: [[0, 1, 0], [0, 1, 0], [0, 1, 0], [0, 1, 0]]\n}, {\n  active: true,\n  category: 'OLL',\n  image: 'oll_16.svg',\n  name: 'oll_16',\n  scramble: \"(R' FRUR' U') (F' UR)\",\n  solution: \"R' U' FURU' R' F' R\",\n  type: 'Dash',\n  subtype: 'Letter P',\n  squares: [[0, 1, 1], [0, 1, 1], [0, 0, 1]],\n  strikes: [[1, 0, 0], [0, 0, 0], [1, 1, 0], [0, 1, 0]]\n}, {\n  active: true,\n  category: 'OLL',\n  image: 'oll_17.svg',\n  name: 'oll_17',\n  scramble: \"(L F' L' U' L U) (F U' L')\",\n  solution: \"LUF' U' L' ULFL'\",\n  type: 'Dash',\n  subtype: 'Letter P',\n  squares: [[1, 1, 0], [1, 1, 0], [1, 0, 0]],\n  strikes: [[0, 0, 1], [0, 1, 0], [0, 1, 1], [0, 0, 0]]\n}, {\n  active: true,\n  category: 'OLL',\n  image: 'oll_18.svg',\n  name: 'oll_18',\n  scramble: \"F (RUR' U') F'\",\n  solution: \"FURU' R' F'\",\n  type: 'Dash',\n  subtype: 'Letter P',\n  squares: [[1, 1, 0], [1, 1, 0], [1, 0, 0]],\n  strikes: [[0, 0, 0], [1, 1, 1], [0, 1, 0], [0, 0, 0]]\n}, {\n  active: true,\n  category: 'OLL',\n  image: 'oll_19.svg',\n  name: 'oll_19',\n  scramble: \"F' (L' U' LU) F\",\n  solution: \"F' U' L' ULF\",\n  type: 'Dash',\n  subtype: 'Letter P',\n  squares: [[0, 1, 1], [0, 1, 1], [0, 0, 1]],\n  strikes: [[0, 0, 0], [0, 0, 0], [0, 1, 0], [1, 1, 1]]\n}, {\n  active: true,\n  category: 'OLL',\n  image: 'oll_20.svg',\n  name: 'oll_20',\n  scramble: \"B' RBR' U' R' U' RUR' URU2\",\n  solution: \"(L' U' LU' L' U) (LULF' L' F)\",\n  type: 'Dash',\n  subtype: 'Letter W',\n  squares: [[1, 1, 0], [0, 1, 1], [0, 0, 1]],\n  strikes: [[0, 0, 1], [0, 0, 0], [0, 1, 0], [0, 1, 1]]\n}, {\n  active: true,\n  category: 'OLL',\n  image: 'oll_21.svg',\n  name: 'oll_21',\n  scramble: \"FR' F' RURUR' U' RU' R'\",\n  solution: \"(RUR' URU') (R' U' R' FRF')\",\n  type: 'Dash',\n  subtype: 'Letter W',\n  squares: [[0, 1, 1], [1, 1, 0], [1, 0, 0]],\n  strikes: [[1, 0, 0], [0, 1, 1], [0, 1, 0], [0, 0, 0]]\n}, {\n  active: true,\n  category: 'OLL',\n  image: 'oll_22.svg',\n  name: 'oll_22',\n  scramble: \"R' F' LF' L' FLF' L' F2RU'\",\n  solution: \"(R' F' LF') ( L' FLF' L' F2R)\",\n  type: 'Dash',\n  subtype: 'Dash',\n  squares: [[0, 1, 0], [1, 1, 0], [0, 0, 0]],\n  strikes: [[0, 0, 0], [1, 1, 1], [0, 1, 0], [1, 0, 1]]\n}, {\n  active: true,\n  category: 'OLL',\n  image: 'oll_23.svg',\n  name: 'oll_23',\n  scramble: \"LFR' FRF' R' FRF2L' U\",\n  solution: \"LFR' FRF' R' FRF2L'\",\n  type: 'Dash',\n  subtype: 'Dash',\n  squares: [[0, 1, 0], [0, 1, 1], [0, 0, 0]],\n  strikes: [[0, 0, 0], [1, 0, 1], [0, 1, 0], [1, 1, 1]]\n}, {\n  active: true,\n  category: 'OLL',\n  image: 'oll_24.svg',\n  name: 'oll_24',\n  scramble: \"F' U' L' ULU' L' ULF\",\n  solution: \"F' (L' U' LU) (L' U' LU) F\",\n  type: 'Dash',\n  subtype: 'Dash',\n  squares: [[0, 1, 0], [0, 1, 1], [0, 0, 0]],\n  strikes: [[1, 0, 0], [1, 0, 1], [1, 1, 0], [0, 1, 0]]\n}, {\n  active: true,\n  category: 'OLL',\n  image: 'oll_25.svg',\n  name: 'oll_25',\n  scramble: \"F URU' R' URU' R' F'\",\n  solution: \"F (RUR' U') (RUR' U') F'\",\n  type: 'Dash',\n  subtype: 'Dash',\n  squares: [[0, 1, 0], [1, 1, 0], [0, 0, 0]],\n  strikes: [[0, 0, 1], [0, 1, 0], [0, 1, 1], [1, 0, 1]]\n}, {\n  active: true,\n  category: 'OLL',\n  image: 'oll_26.svg',\n  name: 'oll_26',\n  scramble: \"(r U') (r2 U) (r2 U r2 U' r)\",\n  solution: \"(r' U) (r2U') (r2U') (r2Ur')\",\n  type: 'Dash',\n  subtype: 'Dash',\n  squares: [[0, 0, 0], [0, 1, 1], [0, 1, 0]],\n  strikes: [[0, 1, 1], [0, 0, 0], [0, 0, 1], [1, 1, 1]]\n}, {\n  active: true,\n  category: 'OLL',\n  image: 'oll_27.svg',\n  name: 'oll_27',\n  scramble: \"(r' U) (r2U') (r2U') (r2Ur')U2\",\n  solution: \"(lU') (l2U) (l2U) (l2U' l)\",\n  type: 'Dash',\n  subtype: 'Dash',\n  squares: [[0, 0, 0], [1, 1, 0], [0, 1, 0]],\n  strikes: [[1, 1, 0], [1, 1, 1], [1, 0, 0], [0, 0, 0]]\n}, {\n  active: true,\n  category: 'OLL',\n  image: 'oll_28.svg',\n  name: 'oll_28',\n  scramble: \"L F' L' U' L F L' y L' U L\",\n  solution: \"L' U' L y' LF' L' ULFL'\",\n  type: 'Dash',\n  subtype: 'Dash',\n  squares: [[1, 0, 0], [0, 1, 1], [0, 1, 0]],\n  strikes: [[0, 1, 1], [0, 0, 1], [1, 0, 0], [0, 1, 0]]\n}, {\n  active: true,\n  category: 'OLL',\n  image: 'oll_29.svg',\n  name: 'oll_29',\n  scramble: \"R' F R U R' F' R y' R U' R'\",\n  solution: \"RUR' y R' FRU' R' F' R\",\n  type: 'Dash',\n  subtype: 'Dash',\n  squares: [[0, 0, 1], [1, 1, 0], [0, 1, 0]],\n  strikes: [[1, 1, 0], [0, 1, 0], [0, 0, 1], [0, 0, 1]]\n}, {\n  active: true,\n  category: 'OLL',\n  image: 'oll_30.svg',\n  name: 'oll_30',\n  scramble: \"B' FR' F' RBURU' R' U2\",\n  solution: \"(R' U' RU F) x' (R U' R' UD')\",\n  type: 'Line',\n  subtype: 'Letter C',\n  squares: [[1, 0, 1], [1, 1, 1], [0, 0, 0]],\n  strikes: [[0, 1, 0], [0, 0, 1], [0, 1, 0], [0, 0, 1]]\n}, {\n  active: true,\n  category: 'OLL',\n  image: 'oll_31.svg',\n  name: 'oll_31',\n  scramble: \"RUB' RBR' U' R'\",\n  solution: \"(R' U' R' F) (RF' U) R\",\n  type: 'Line',\n  subtype: 'Letter C',\n  squares: [[1, 1, 0], [0, 1, 0], [1, 1, 0]],\n  strikes: [[0, 0, 0], [1, 1, 1], [0, 0, 0], [0, 1, 0]]\n}, {\n  active: true,\n  category: 'OLL',\n  image: 'oll_32.svg',\n  name: 'oll_32',\n  scramble: \"FR' F' RURU' R'\",\n  solution: \"(RUR' U') (R' FRF')\",\n  type: 'Line',\n  subtype: 'Letter T',\n  squares: [[0, 0, 1], [1, 1, 1], [0, 0, 1]],\n  strikes: [[1, 1, 0], [0, 0, 0], [1, 1, 0], [0, 0, 0]]\n}, {\n  active: true,\n  category: 'OLL',\n  image: 'oll_33.svg',\n  name: 'oll_33',\n  scramble: \"FURU' R' F'\",\n  solution: \"F (RUR' U') F'\",\n  type: 'Line',\n  subtype: 'Letter T',\n  squares: [[0, 0, 1], [1, 1, 1], [0, 0, 1]],\n  strikes: [[0, 1, 0], [0, 0, 0], [0, 1, 0], [1, 0, 1]]\n}, {\n  active: true,\n  category: 'OLL',\n  image: 'oll_34.svg',\n  name: 'oll_34',\n  scramble: \"B' RBU2R' U' RU' R2U2R\",\n  solution: \"(RU2R2U' RU' R' U2) (F R F')\",\n  type: 'Line',\n  subtype: 'Letter I',\n  squares: [[0, 1, 0], [0, 1, 0], [0, 1, 0]],\n  strikes: [[0, 0, 0], [1, 1, 1], [0, 0, 0], [1, 1, 1]]\n}, {\n  active: true,\n  category: 'OLL',\n  image: 'oll_35.svg',\n  name: 'oll_35',\n  scramble: \"F (RUR' U') (RUR' U') F'\",\n  solution: \"F (URU' R' URU' R') F'\",\n  type: 'Line',\n  subtype: 'Letter I',\n  squares: [[0, 0, 0], [1, 1, 1], [0, 0, 0]],\n  strikes: [[1, 1, 0], [1, 0, 1], [1, 1, 0], [0, 0, 0]]\n}, {\n  active: true,\n  category: 'OLL',\n  image: 'oll_36.svg',\n  name: 'oll_36',\n  scramble: \"L' B' LR' U' RUR' U' RUL' BL\",\n  solution: \"(L' B' LU') (R' URU' R' URL' BL)\",\n  type: 'Line',\n  subtype: 'Letter I',\n  squares: [[0, 0, 0], [1, 1, 1], [0, 0, 0]],\n  strikes: [[0, 1, 0], [1, 0, 1], [0, 1, 0], [1, 0, 1]]\n}, {\n  active: true,\n  category: 'OLL',\n  image: 'oll_37.svg',\n  name: 'oll_37',\n  scramble: \"(R' U' RU' R' U) y' (R' URB)U'\",\n  solution: \"(R' U' RU' R' U) y' (R' URB)\",\n  type: 'Line',\n  subtype: 'Letter I',\n  squares: [[0, 1, 0], [0, 1, 0], [0, 1, 0]],\n  strikes: [[1, 0, 0], [1, 1, 1], [1, 0, 0], [0, 1, 0]]\n}, {\n  active: true,\n  category: 'OLL',\n  image: 'oll_38.svg',\n  name: 'oll_38',\n  scramble: \"R' F' LF' L' F2R U2\",\n  solution: \"r' U2RUR'U r\",\n  type: 'Dash',\n  subtype: 'Square',\n  squares: [[0, 0, 0], [0, 1, 1], [0, 1, 1]],\n  strikes: [[1, 1, 0], [1, 0, 0], [0, 0, 0], [0, 1, 1]]\n}, {\n  active: true,\n  category: 'OLL',\n  image: 'oll_39.svg',\n  name: 'oll_39',\n  scramble: \"LFR' FRF2L' U2\",\n  solution: \"l U2L'U'LU' l'\",\n  type: 'Dash',\n  subtype: 'Square',\n  squares: [[0, 0, 0], [1, 1, 0], [1, 1, 0]],\n  strikes: [[0, 1, 1], [0, 1, 1], [0, 0, 0], [1, 0, 0]]\n}, {\n  active: true,\n  category: 'OLL',\n  image: 'oll_40.svg',\n  name: 'oll_40',\n  scramble: \"R' U2 l U' RUR' l' U2R\",\n  solution: \"x' (R' F2R2U' R' UR' F2R)\",\n  type: 'Dash',\n  subtype: 'Square',\n  squares: [[0, 1, 1], [0, 1, 1], [1, 0, 0]],\n  strikes: [[1, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 0]]\n}, {\n  active: true,\n  category: 'OLL',\n  image: 'oll_41.svg',\n  name: 'oll_41',\n  scramble: \"(RUR' U') (R' FRF')\",\n  solution: \"FR' F' RURU' R'\",\n  type: 'Dash',\n  subtype: 'Square',\n  squares: [[1, 1, 0], [1, 1, 0], [0, 0, 1]],\n  strikes: [[0, 0, 0], [1, 1, 0], [1, 1, 0], [0, 0, 0]]\n}, {\n  active: true,\n  category: 'OLL',\n  image: 'oll_42.svg',\n  name: 'oll_42',\n  scramble: \"L F2 R' F' R F' L' U2\",\n  solution: \"l UL'ULU2 l'\",\n  type: 'Dash',\n  subtype: 'Letter S',\n  squares: [[0, 0, 1], [0, 1, 1], [0, 1, 0]],\n  strikes: [[1, 1, 0], [0, 0, 0], [0, 0, 1], [0, 1, 1]]\n}, {\n  active: true,\n  category: 'OLL',\n  image: 'oll_43.svg',\n  name: 'oll_43',\n  scramble: \"R' F2LFL' FR U2\",\n  solution: \"r' U'RU'R'U2 r\",\n  type: 'Dash',\n  subtype: 'Letter S',\n  squares: [[1, 0, 0], [1, 1, 0], [0, 1, 0]],\n  strikes: [[0, 1, 1], [0, 1, 1], [1, 0, 0], [0, 0, 0]]\n}, {\n  active: true,\n  category: 'OLL',\n  image: 'oll_44.svg',\n  name: 'oll_44',\n  scramble: \"MU' RU2R' U' RU' R2rU\",\n  solution: \"F'L'U'LUF U FRUR'U'F'\",\n  type: 'Dash',\n  subtype: 'Letter S',\n  squares: [[1, 0, 0], [1, 1, 0], [0, 1, 0]],\n  strikes: [[0, 1, 0], [1, 1, 0], [0, 0, 1], [0, 0, 1]]\n}, {\n  active: true,\n  category: 'OLL',\n  image: 'oll_45.svg',\n  name: 'oll_45',\n  scramble: \"M' UR' U2RUR' UR2 r' U\",\n  solution: \"FRUR'U'F' U FRUR'U'F'\",\n  type: 'Dash',\n  subtype: 'Letter S',\n  squares: [[0, 0, 1], [0, 1, 1], [0, 1, 0]],\n  strikes: [[0, 1, 0], [0, 0, 1], [1, 0, 0], [1, 1, 0]]\n}, {\n  active: true,\n  category: 'OLL',\n  image: 'oll_46.svg',\n  name: 'oll_46',\n  scramble: \"B2R' URU' R' U' R2BR' BU2\",\n  solution: \"F' LF' L2ULUL' U' LF2\",\n  type: 'Dash',\n  subtype: 'Letter S',\n  squares: [[0, 1, 0], [0, 1, 1], [1, 0, 1]],\n  strikes: [[0, 0, 0], [1, 0, 0], [0, 1, 0], [1, 0, 0]]\n}, {\n  active: true,\n  category: 'OLL',\n  image: 'oll_47.svg',\n  name: 'oll_47',\n  scramble: \"l U' l' U' R2UR' BRU' R2U2\",\n  solution: \"FR' FR2U' R' U' RUR' F2\",\n  type: 'Dash',\n  subtype: 'Letter S',\n  squares: [[0, 1, 0], [1, 1, 0], [1, 0, 1]],\n  strikes: [[0, 0, 0], [1, 1, 0], [0, 1, 0], [1, 0, 0]]\n}, {\n  active: true,\n  category: 'OLL',\n  image: 'oll_48.svg',\n  name: 'oll_48',\n  scramble: \"B' U' R' U' R y URU2R' U' RU'\",\n  solution: \"(R' FRF' R' FRF') (RU R' U' RUR')\",\n  type: 'Dash',\n  subtype: 'Letter S',\n  squares: [[0, 1, 1], [1, 1, 0], [0, 0, 1]],\n  strikes: [[0, 0, 0], [0, 1, 0], [0, 1, 0], [1, 0, 1]]\n}, {\n  active: true,\n  category: 'OLL',\n  image: 'oll_49.svg',\n  name: 'oll_49',\n  scramble: \"FURUR' y' U' R' U2RUR' U'\",\n  solution: \"(LF' L' FLF' L' F) (L' U' L UL' U' L)\",\n  type: 'Dash',\n  subtype: 'Letter S',\n  squares: [[1, 1, 0], [0, 1, 1], [1, 0, 0]],\n  strikes: [[0, 0, 0], [1, 0, 1], [0, 1, 0], [0, 1, 0]]\n}, {\n  active: true,\n  category: 'OLL',\n  image: 'oll_50.svg',\n  name: 'oll_50',\n  scramble: \"LUF' U' L' ULFL'\",\n  solution: \"(L F' L' U' L U) (F U' L')\",\n  type: 'Line',\n  subtype: 'Lightning',\n  squares: [[0, 0, 1], [1, 1, 1], [1, 0, 0]],\n  strikes: [[1, 1, 0], [0, 0, 1], [0, 1, 0], [0, 0, 0]]\n}, {\n  active: true,\n  category: 'OLL',\n  image: 'oll_51.svg',\n  name: 'oll_51',\n  scramble: \"R' U' FURU' R' F' R\",\n  solution: \"(R' FRUR' U') (F' UR)\",\n  type: 'Line',\n  subtype: 'Lightning',\n  squares: [[1, 0, 0], [1, 1, 1], [0, 0, 1]],\n  strikes: [[0, 1, 1], [0, 0, 0], [0, 1, 0], [0, 0, 1]]\n}, {\n  active: true,\n  category: 'OLL',\n  image: 'oll_52.svg',\n  name: 'oll_52',\n  scramble: \"L' U' L y' LF' L' ULFL'\",\n  solution: \"(LF' L' U' LFL') y' (R' UR)\",\n  type: 'Line',\n  subtype: 'Letter L',\n  squares: [[0, 0, 0], [1, 1, 1], [1, 0, 0]],\n  strikes: [[1, 1, 0], [1, 0, 0], [0, 1, 1], [0, 0, 0]]\n}, {\n  active: true,\n  category: 'OLL',\n  image: 'oll_53.svg',\n  name: 'oll_53',\n  scramble: \"RUR' y R' FRU' R' F' R\",\n  solution: \"(R' FRUR' F' R) y (LU' L')\",\n  type: 'Line',\n  subtype: 'Letter L',\n  squares: [[0, 0, 0], [1, 1, 1], [0, 0, 1]],\n  strikes: [[0, 1, 1], [0, 0, 0], [1, 1, 0], [1, 0, 0]]\n}, {\n  active: true,\n  category: 'OLL',\n  image: 'oll_54.svg',\n  name: 'oll_54',\n  scramble: \"L' B' L U' R' U R L' B L\",\n  solution: \"(L' B' L) (R' U' RU) (L' BL)\",\n  type: 'Line',\n  subtype: 'Letter L',\n  squares: [[0, 0, 0], [1, 1, 1], [0, 0, 1]],\n  strikes: [[1, 1, 0], [1, 0, 0], [0, 1, 0], [0, 0, 1]]\n}, {\n  active: true,\n  category: 'OLL',\n  image: 'oll_55.svg',\n  name: 'oll_55',\n  scramble: \"L F L' U R U' R' LF' L' U2\",\n  solution: \"(RBR') (LUL' U') (RB' R')\",\n  type: 'Line',\n  subtype: 'Letter L',\n  squares: [[0, 0, 0], [1, 1, 1], [1, 0, 0]],\n  strikes: [[0, 1, 1], [0, 0, 1], [0, 1, 0], [1, 0, 0]]\n}, {\n  active: true,\n  category: 'OLL',\n  image: 'oll_56.svg',\n  name: 'oll_56',\n  scramble: \"(RL' BLR') U2 (RL' BLR')U'\",\n  solution: \"(RL' BLR') U2 (RL' BLR')\",\n  type: 'Dash',\n  subtype: 'Letter F',\n  squares: [[1, 0, 1], [0, 1, 1], [1, 1, 1]],\n  strikes: [[0, 1, 0], [0, 0, 0], [0, 0, 0], [0, 1, 0]]\n}, {\n  active: true,\n  category: 'OLL',\n  image: 'oll_57.svg',\n  name: 'oll_57',\n  scramble: \"F R' F' R L' U R U' R' L\",\n  solution: \"(RUR' U') r (R' URU' r')\",\n  type: 'Line',\n  subtype: 'Letter H',\n  squares: [[1, 0, 1], [1, 1, 1], [1, 0, 1]],\n  strikes: [[0, 1, 0], [0, 0, 0], [0, 1, 0], [0, 0, 0]]\n}];\nconst PLLs = [{\n  active: true,\n  category: 'PLL',\n  image: 'pll_1.svg',\n  name: 'pll_1',\n  scramble: \"x' (U L' U R2 U') (L U R2 U2)\",\n  solution: \"x' (R' D R') U2 (R D' R' U2 R2)\",\n  type: 'A',\n  subtype: 'A',\n  squares: squresFull,\n  strikes: srikesNone,\n  lines: [[{\n    x: 0,\n    y: 0\n  }, {\n    x: 2,\n    y: 0\n  }, {\n    x: 2,\n    y: 2\n  }]]\n}, {\n  active: true,\n  category: 'PLL',\n  image: 'pll_2.svg',\n  name: 'pll_2',\n  scramble: \"x' (U' R U' L2U) (R' U' L2 U2)\",\n  solution: \"x' (L D' L) U2 (L' D L) U2 L2\",\n  type: 'A',\n  subtype: 'A',\n  squares: squresFull,\n  strikes: srikesNone,\n  lines: [[{\n    x: 0,\n    y: 0\n  }, {\n    x: 0,\n    y: 2\n  }, {\n    x: 2,\n    y: 0\n  }]]\n}, {\n  active: true,\n  category: 'PLL',\n  image: 'pll_3.svg',\n  name: 'pll_3',\n  scramble: \"x' (R U' R' D R U R' D') (R U R' D R U' R' D')\",\n  solution: \"x' (R U' R' D R U R' D') (R U R' D R U' R' D')\",\n  type: 'E',\n  subtype: 'E',\n  squares: squresFull,\n  strikes: srikesNone,\n  lines: [[{\n    x: 0,\n    y: 0\n  }, {\n    x: 0,\n    y: 2\n  }], [{\n    x: 2,\n    y: 0\n  }, {\n    x: 2,\n    y: 2\n  }]]\n}, {\n  active: true,\n  category: 'PLL',\n  image: 'pll_4.svg',\n  name: 'pll_4',\n  scramble: \"(R' URU' R2) y' (R' U' RU) (BRB' R' B2U')\",\n  solution: \"(R' URU' R2) y' (R' U' RU) (BRB' R' B2U')\",\n  type: 'E',\n  subtype: 'E',\n  squares: squresFull,\n  strikes: srikesNone,\n  lines: [[{\n    x: 0,\n    y: 0\n  }, {\n    x: 2,\n    y: 0\n  }], [{\n    x: 0,\n    y: 1\n  }, {\n    x: 2,\n    y: 1\n  }]]\n}, {\n  active: true,\n  category: 'PLL',\n  image: 'pll_5.svg',\n  name: 'pll_5',\n  scramble: \"(M2 U') (M2 U2) (M2 U') M2\",\n  solution: \"(M2 U') (M2 U2) (M2 U') M2\",\n  type: 'H',\n  subtype: 'H',\n  squares: squresFull,\n  strikes: srikesNone,\n  lines: [[{\n    x: 1,\n    y: 0\n  }, {\n    x: 1,\n    y: 2\n  }], [{\n    x: 0,\n    y: 1\n  }, {\n    x: 2,\n    y: 1\n  }]]\n}, {\n  active: true,\n  category: 'PLL',\n  image: 'pll_6.svg',\n  name: 'pll_6',\n  scramble: \"(R' UR' U') (R' U') (R' U R U R2)\",\n  solution: \"(R2 U') (R' U' RU) (R U R U' R)\",\n  type: 'U',\n  subtype: 'U',\n  squares: squresFull,\n  strikes: srikesNone,\n  lines: [[{\n    x: 0,\n    y: 1\n  }, {\n    x: 2,\n    y: 1\n  }, {\n    x: 1,\n    y: 0\n  }]]\n}, {\n  active: true,\n  category: 'PLL',\n  image: 'pll_7.svg',\n  name: 'pll_7',\n  scramble: \"(R2 U') (R' U' RU) (R U R U' R)\",\n  solution: \"(R' UR' U') (R' U') (R' U R U R2)\",\n  type: 'U',\n  subtype: 'U',\n  squares: squresFull,\n  strikes: srikesNone,\n  lines: [[{\n    x: 0,\n    y: 1\n  }, {\n    x: 1,\n    y: 0\n  }, {\n    x: 2,\n    y: 1\n  }]]\n}, {\n  active: true,\n  category: 'PLL',\n  image: 'pll_8.svg',\n  name: 'pll_8',\n  scramble: \"L U' R' UL' U2 R U' R' U2 R x2\",\n  solution: \"B2 (R' U' R) B2 (L' D L' D') L2\",\n  type: 'J',\n  subtype: 'J',\n  squares: squresFull,\n  strikes: srikesNone,\n  lines: [[{\n    x: 0,\n    y: 0\n  }, {\n    x: 0,\n    y: 2\n  }], [{\n    x: 0,\n    y: 1\n  }, {\n    x: 1,\n    y: 2\n  }]]\n}, {\n  active: true,\n  category: 'PLL',\n  image: 'pll_9.svg',\n  name: 'pll_9',\n  scramble: \"(R' U L U' R) (U2 L' U L U2 L') x2\",\n  solution: \"B2 (L U L') B2 (R D' R D) R2\",\n  type: 'J',\n  subtype: 'J',\n  squares: squresFull,\n  strikes: srikesNone,\n  lines: [[{\n    x: 2,\n    y: 0\n  }, {\n    x: 2,\n    y: 2\n  }], [{\n    x: 2,\n    y: 1\n  }, {\n    x: 1,\n    y: 2\n  }]]\n}, {\n  active: true,\n  category: 'PLL',\n  image: 'pll_10.svg',\n  name: 'pll_10',\n  scramble: \"(R U R' U') (R' F R2 U') (R' U' R U R' F')\",\n  solution: \"(R U R' U') (R' F R2 U') (R' U' R U R' F')\",\n  type: 'T',\n  subtype: 'T',\n  squares: squresFull,\n  strikes: srikesNone,\n  lines: [[{\n    x: 2,\n    y: 0\n  }, {\n    x: 2,\n    y: 2\n  }], [{\n    x: 0,\n    y: 1\n  }, {\n    x: 2,\n    y: 1\n  }]]\n}, {\n  active: true,\n  category: 'PLL',\n  image: 'pll_11.svg',\n  name: 'pll_11',\n  scramble: \"(L' U L' U') y'(R' F') (R2 U' R' U R' F R F) y\",\n  solution: \"(L' U L' U') y'(R' F') (R2 U' R' U R' F R F)\",\n  type: 'V',\n  subtype: 'V',\n  squares: squresFull,\n  strikes: srikesNone,\n  lines: [[{\n    x: 0,\n    y: 0\n  }, {\n    x: 2,\n    y: 2\n  }], [{\n    x: 0,\n    y: 1\n  }, {\n    x: 1,\n    y: 2\n  }]]\n}, {\n  active: true,\n  category: 'PLL',\n  image: 'pll_12.svg',\n  name: 'pll_12',\n  scramble: \"(L U2 L' U2) (L F' L' U' LU) (L F L2 U)\",\n  solution: \"(L U2 L' U2) (L F' L' U' LU) (L F L2 U)\",\n  type: 'R',\n  subtype: 'R',\n  squares: squresFull,\n  strikes: srikesNone,\n  lines: [[{\n    x: 0,\n    y: 0\n  }, {\n    x: 2,\n    y: 0\n  }], [{\n    x: 0,\n    y: 1\n  }, {\n    x: 1,\n    y: 2\n  }]]\n}, {\n  active: true,\n  category: 'PLL',\n  image: 'pll_13.svg',\n  name: 'pll_13',\n  scramble: \"(R' U2 R U2) (R' F R U R' U') (R' F' R2 U')\",\n  solution: \"(R' U2 R U2) (R' F R U R' U') (R' F' R2 U')\",\n  type: 'R',\n  subtype: 'R',\n  squares: squresFull,\n  strikes: srikesNone,\n  lines: [[{\n    x: 0,\n    y: 0\n  }, {\n    x: 2,\n    y: 0\n  }], [{\n    x: 2,\n    y: 1\n  }, {\n    x: 1,\n    y: 2\n  }]]\n}, {\n  active: true,\n  category: 'PLL',\n  image: 'pll_14.svg',\n  name: 'pll_14',\n  scramble: \"(L U L' B2) z' (R' U L' U' L) (U' R B2) z\",\n  solution: \"z x' (U2 r' U R' U R U' r U2) y (L F' L') x\",\n  type: 'G',\n  subtype: 'G',\n  squares: squresFull,\n  strikes: srikesNone,\n  lines: [[{\n    x: 1,\n    y: 0\n  }, {\n    x: 2,\n    y: 1\n  }, {\n    x: 1,\n    y: 2\n  }], [{\n    x: 2,\n    y: 0\n  }, {\n    x: 0,\n    y: 2\n  }, {\n    x: 2,\n    y: 2\n  }]]\n}, {\n  active: true,\n  category: 'PLL',\n  image: 'pll_15.svg',\n  name: 'pll_15',\n  scramble: \"(R' U' R B2) z (L U' R U R') (U r' U2) z' x\",\n  solution: \"z' x' (U2 l U' LU' L' U l' U2) y' (R' F R) x\",\n  type: 'G',\n  subtype: 'G',\n  squares: squresFull,\n  strikes: srikesNone,\n  lines: [[{\n    x: 0,\n    y: 0\n  }, {\n    x: 2,\n    y: 2\n  }, {\n    x: 0,\n    y: 2\n  }], [{\n    x: 1,\n    y: 0\n  }, {\n    x: 0,\n    y: 1\n  }, {\n    x: 1,\n    y: 2\n  }]]\n}, {\n  active: true,\n  category: 'PLL',\n  image: 'pll_16.svg',\n  name: 'pll_16',\n  scramble: \"z' (U2 l U' LU' L' U l' U2) y' (R' F R) x\",\n  solution: \"(R' U' R B2) z (L U' R U R') (U r' U2) z' x\",\n  type: 'G',\n  subtype: 'G',\n  squares: squresFull,\n  strikes: srikesNone,\n  lines: [[{\n    x: 0,\n    y: 0\n  }, {\n    x: 0,\n    y: 2\n  }, {\n    x: 2,\n    y: 2\n  }], [{\n    x: 1,\n    y: 0\n  }, {\n    x: 1,\n    y: 2\n  }, {\n    x: 0,\n    y: 1\n  }]]\n}, {\n  active: true,\n  category: 'PLL',\n  image: 'pll_17.svg',\n  name: 'pll_17',\n  scramble: \"z (U2 r' U R' U R U' r U2) y (L F' L') x\",\n  solution: \"(L U L' B2) z' (R' U L' U' L) (U' R B2) z\",\n  type: 'G',\n  subtype: 'G',\n  squares: squresFull,\n  strikes: srikesNone,\n  lines: [[{\n    x: 2,\n    y: 0\n  }, {\n    x: 2,\n    y: 2\n  }, {\n    x: 0,\n    y: 2\n  }], [{\n    x: 1,\n    y: 0\n  }, {\n    x: 1,\n    y: 2\n  }, {\n    x: 2,\n    y: 1\n  }]]\n}, {\n  active: true,\n  category: 'PLL',\n  image: 'pll_18.svg',\n  name: 'pll_18',\n  scramble: \"(U R' U' R U') (R U R U' R' U) (R U R2 U' R' U)\",\n  solution: \"(U R' U' R U') (R U R U' R' U) (R U R2 U' R' U)\",\n  type: 'Z',\n  subtype: 'Z',\n  squares: squresFull,\n  strikes: srikesNone,\n  lines: [[{\n    x: 1,\n    y: 0\n  }, {\n    x: 0,\n    y: 1\n  }], [{\n    x: 2,\n    y: 1\n  }, {\n    x: 1,\n    y: 2\n  }]]\n}, {\n  active: true,\n  category: 'PLL',\n  image: 'pll_19.svg',\n  name: 'pll_19',\n  scramble: \"L U' R U2 L' U R') (L U' R U2 L' U R') U'\",\n  solution: \"L U' R U2 L' U R') (L U' R U2 L' U R') U'\",\n  type: 'N',\n  subtype: 'N',\n  squares: squresFull,\n  strikes: srikesNone,\n  lines: [[{\n    x: 2,\n    y: 0\n  }, {\n    x: 0,\n    y: 2\n  }], [{\n    x: 0,\n    y: 1\n  }, {\n    x: 2,\n    y: 1\n  }]]\n}, {\n  active: true,\n  category: 'PLL',\n  image: 'pll_20.svg',\n  name: 'pll_20',\n  scramble: \"(R' UL' U2 R U' L) (R' UL' U2 R U' L) U\",\n  solution: \"(R' UL' U2 R U' L) (R' UL' U2 R U' L) U\",\n  type: 'N',\n  subtype: 'N',\n  squares: squresFull,\n  strikes: srikesNone,\n  lines: [[{\n    x: 0,\n    y: 0\n  }, {\n    x: 2,\n    y: 2\n  }], [{\n    x: 0,\n    y: 1\n  }, {\n    x: 2,\n    y: 1\n  }]]\n}, {\n  active: true,\n  category: 'PLL',\n  image: 'pll_21.svg',\n  name: 'pll_21',\n  scramble: \"(F R U' R' U' R U R' F') (R U R' U') (R' F R F')\",\n  solution: \"(F R U' R' U' R U R' F') (R U R' U') (R' F R F')\",\n  type: 'Y',\n  subtype: 'Y',\n  squares: squresFull,\n  strikes: srikesNone,\n  lines: [[{\n    x: 0,\n    y: 0\n  }, {\n    x: 2,\n    y: 2\n  }], [{\n    x: 1,\n    y: 0\n  }, {\n    x: 0,\n    y: 1\n  }]]\n}];\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"publications\":{\"algorithms.ts\":function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                  //\n// server/publications/algorithms.ts                                                                //\n//                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                    //\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Algorithms;\nmodule.link(\"../../collections/algorithms\", {\n  Algorithms(v) {\n    Algorithms = v;\n  }\n\n}, 1);\n// TODO Only publish algorithms that are public or belong to the current user\nMeteor.publish('algorithms', () => Algorithms.find());\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"results.ts\":function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                  //\n// server/publications/results.ts                                                                   //\n//                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                    //\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Results;\nmodule.link(\"../../collections/results\", {\n  Results(v) {\n    Results = v;\n  }\n\n}, 1);\n// TODO Only publish algorithms that are public or belong to the current user\nMeteor.publish('results', () => Results.find());\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"main.js\":function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                  //\n// server/main.js                                                                                   //\n//                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                    //\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet createAlgorithms;\nmodule.link(\"./imports/algorithmsCreation\", {\n  createAlgorithms(v) {\n    createAlgorithms = v;\n  }\n\n}, 1);\nMeteor.startup(() => {\n  //UniConfig.private.runOnce('createAlgorithms', createAlgorithms);\n  createAlgorithms();\n});\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"collections\":{\"algorithms.ts\":function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                  //\n// collections/algorithms.ts                                                                        //\n//                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                    //\nmodule.export({\n  Algorithms: () => Algorithms\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 1);\nlet check;\nmodule.link(\"meteor/check\", {\n  check(v) {\n    check = v;\n  }\n\n}, 2);\nlet expect;\nmodule.link(\"chai\", {\n  expect(v) {\n    expect = v;\n  }\n\n}, 3);\nconst Algorithms = new Mongo.Collection('algorithms');\nMeteor.methods({\n  'algorithms.toggleActive': (algId, active) => {\n    check(active, Boolean);\n    check(algId, String);\n    Algorithms.update(algId, {\n      $set: {\n        active\n      }\n    });\n  },\n  'algorithms.activateAll': category => {\n    Algorithms.update({\n      category\n    }, {\n      $set: {\n        active: true\n      }\n    }, {\n      multi: true\n    });\n  },\n  'algorithms.deactivateAll': category => {\n    Algorithms.update({\n      category\n    }, {\n      $set: {\n        active: false\n      }\n    }, {\n      multi: true\n    });\n  },\n  'algorithms.insert': (_ref) => {\n    let {\n      category,\n      image,\n      scramble,\n      solution,\n      subtype,\n      type\n    } = _ref;\n    expect(category).to.be.a('string');\n    expect(image).to.be.a('string');\n    expect(scramble).to.be.a('string');\n    expect(solution).to.be.a('string');\n    expect(subtype).to.be.a('string');\n    expect(type).to.be.a('string'); // Make sure the user is logged in before inserting a algorithm\n\n    /* if (! Meteor.userId()) {\n         throw new Meteor.Error('not-authorized');\n     }*/\n\n    const doc = {\n      createdAt: new Date(),\n      category,\n      image,\n      scramble,\n      solution,\n      subtype,\n      type\n    };\n    Algorithms.insert(doc);\n  },\n\n  'algorithms.search'(text) {\n    check(text, String);\n    return Algorithms.find();\n  },\n\n  'algorithms.remove'(algorithmId) {\n    check(algorithmId, String);\n    /*const algorithm = Algorithms.findOne(algorithmId);\n    if (algorithm.private && algorithm.owner !== Meteor.userId()) {\n      // If the algorithm is private, make sure only the owner can delete it\n          throw new Meteor.Error('not-authorized');\n    }*/\n\n    Algorithms.remove(algorithmId);\n  }\n  /*,\n  'algorithms.setChecked'(algorithmId, setChecked) {\n      check(algorithmId, String);\n      check(setChecked, Boolean);\n         const algorithm = Algorithms.findOne(algorithmId);\n      if (algorithm.private && algorithm.owner !== Meteor.userId()) {\n            // If the algorithm is private, make sure only the owner can check it off\n                throw new Meteor.Error('not-authorized');\n          }\n         Algorithms.update(algorithmId, { $set: { checked: setChecked } });\n  },\n  'algorithms.setPrivate'(algorithmId, setToPrivate) {\n      check(algorithmId, String);\n      check(setToPrivate, Boolean);\n         const algorithm = Algorithms.findOne(algorithmId);\n         // Make sure only the algorithm owner can make a algorithm private\n      if (algorithm.owner !== Meteor.userId()) {\n          throw new Meteor.Error('not-authorized');\n      }\n         Algorithms.update(algorithmId, { $set: { private: setToPrivate } });\n  },*/\n\n\n});\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"results.js\":function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                  //\n// collections/results.js                                                                           //\n//                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                    //\nmodule.export({\n  Results: () => Results\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 1);\nlet check;\nmodule.link(\"meteor/check\", {\n  check(v) {\n    check = v;\n  }\n\n}, 2);\nconst Results = new Mongo.Collection('results');\nMeteor.methods({\n  'results.insert': (_ref) => {\n    let {\n      algorithmId,\n      category,\n      real,\n      scramble,\n      time\n    } = _ref;\n    check(category, String);\n    check(real, Boolean);\n    check(time, Number);\n\n    if (category === 'OLL' || category === 'PLL' || category === '3x3x3') {\n      check(scramble, String);\n    }\n\n    if (category === 'OLL' || category === 'PLL') {\n      check(algorithmId, String);\n    } // Make sure the user is logged in before inserting a result\n\n    /* if (! Meteor.userId()) {\n     throw new Meteor.Error('not-authorized');\n     }*/\n\n\n    const doc = {\n      algorithmId,\n      category,\n      createdAt: new Date(),\n      real,\n      scramble,\n      time\n    };\n    Results.insert(doc);\n  },\n  'results.search': text => {\n    check(text, String);\n    return Results.find();\n  },\n  'results.remove': resultId => {\n    check(resultId, String);\n    /*const result = Results.findOne(resultId);\n     if (result.private && result.owner !== Meteor.userId()) {\n     // If the result is private, make sure only the owner can delete it\n     throw new Meteor.Error('not-authorized');\n     }*/\n\n    Results.remove(resultId);\n  }\n});\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\",\n    \".ts\",\n    \".jsx\",\n    \".tsx\",\n    \".mjs\"\n  ]\n});\n\nrequire(\"/lib/global-helpers.js\");\nrequire(\"/server/publications/algorithms.ts\");\nrequire(\"/server/publications/results.ts\");\nrequire(\"/collections/algorithms.ts\");\nrequire(\"/collections/results.js\");\nrequire(\"/server/main.js\");","hash":"636ac61ed9f6208c10ba55cb53a7f63795540816","servePath":"/app.js","sourceMap":{"version":3,"sources":["lib/global-helpers.js","server/imports/algorithmsCreation.ts","server/imports/const.ts","server/publications/algorithms.ts","server/publications/results.ts","server/main.js","collections/algorithms.ts","collections/results.js"],"names":["module","export","getRandomScramble","allowedMoves","getRandomMove","Math","floor","random","length","movesConflict","moveA","moveB","split","some","character","includes","movesNr","moves","move","previousMove","i","push","join","Meteor","link","v","createAlgorithms","startup","Results","Mongo","check","Collection","methods","algorithmId","category","real","scramble","time","String","Boolean","Number","doc","createdAt","Date","insert","text","find","resultId","remove"],"mappings":"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","file":"/app.js","sourcesContent":["const allowedMoves = [\n  'F',\n  \"F'\",\n  'F2',\n  'B',\n  \"B'\",\n  'B2',\n  'R',\n  \"R'\",\n  'R2',\n  'L',\n  \"L'\",\n  'L2',\n  'U',\n  \"U'\",\n  'U2',\n  'D',\n  \"D'\",\n  'D2'\n];\n\nconst getRandomMove = () =>\n  allowedMoves[Math.floor(Math.random() * allowedMoves.length)];\nconst movesConflict = (moveA, moveB) =>\n  moveA &&\n  moveB &&\n  moveA.split('').some(character => moveB.includes(character));\n\nexport const getRandomScramble = movesNr => {\n  const moves = [];\n\n  let move;\n  let previousMove;\n  for (let i = 0; i < movesNr; i++) {\n    move = getRandomMove();\n    while (movesConflict(move, previousMove)) {\n      move = getRandomMove();\n    }\n\n    previousMove = move;\n    moves.push(move);\n  }\n\n  return moves.join(' ');\n};\n","import { Meteor } from 'meteor/meteor';\nimport { Algorithms } from '../../collections/algorithms';\n\nimport { OLLs, PLLs } from './const';\n\nexport const createAlgorithms = () => {\n  const isOLL = !!Algorithms.findOne({ category: 'OLL' });\n  const isPLL = !!Algorithms.findOne({ category: 'PLL' });\n\n  !isOLL &&\n    OLLs.forEach(algorithm => Meteor.call('algorithms.insert', algorithm));\n  !isPLL &&\n    PLLs.forEach(algorithm => Meteor.call('algorithms.insert', algorithm));\n};\n","export type algorithm = {\n  active: boolean;\n  category: 'OLL' | 'PLL';\n  name: string;\n  image: string;\n  scramble: string;\n  solution: string;\n  type: string;\n  subtype: string;\n  squares: squaresType;\n  strikes: strikesType;\n  lines?: line[];\n};\n\nexport type line = point[];\nexport type point = { x: number; y: number };\n\ntype squaresType = [\n  [0 | 1, 0 | 1, 0 | 1], // top row, left to right\n  [0 | 1, 0 | 1, 0 | 1], // middle row, left to right\n  [0 | 1, 0 | 1, 0 | 1] // bottom row, left to right\n];\n\ntype strikesType =\n  | [\n      [0 | 1, 0 | 1, 0 | 1], // top group, left to right\n      [0 | 1, 0 | 1, 0 | 1], // right group, top to bottom\n      [0 | 1, 0 | 1, 0 | 1], // bottom group, left to right\n      [0 | 1, 0 | 1, 0 | 1] // left group, top to bottom\n    ]\n  | [];\n\nconst squresFull: squaresType = [/* eslint-disable-line */\n  [1, 1, 1],\n  [1, 1, 1],\n  [1, 1, 1]\n];\n\nconst srikesNone: strikesType = [];\n\nexport const OLLs: algorithm[] = [\n  {\n    active: true,\n    category: 'OLL',\n    image: 'oll_1.svg',\n    name: 'oll_1',\n    scramble: \"RU2 R' U' RUR' U' RU' R' U'\",\n    solution: \"RU2 R' U' RUR' U' RU' R'\",\n    type: 'Cross',\n    subtype: 'Cross',\n    squares: [/* eslint-disable-line */\n      [0, 1, 0],\n      [1, 1, 1],\n      [0, 1, 0]\n    ],\n    strikes: [[1, 0, 1], [0, 0, 0], [1, 0, 1], [0, 0, 0]]\n  },\n  {\n    active: true,\n    category: 'OLL',\n    image: 'oll_2.svg',\n    name: 'oll_2',\n    scramble: \"RU2 R2 U' R2U' R2U2R\",\n    solution: \"(RU2 R2 U') (R2U') (R2U2R)\",\n    type: 'Cross',\n    subtype: 'Cross',\n    squares: [/* eslint-disable-line */\n      [0, 1, 0],\n      [1, 1, 1],\n      [0, 1, 0]\n    ],\n    strikes: [[0, 0, 1], [0, 0, 0], [0, 0, 1], [1, 0, 1]]\n  },\n  {\n    active: true,\n    category: 'OLL',\n    image: 'oll_3.svg',\n    name: 'oll_3',\n    scramble: \"x' (RUR' DRU' R' D' F)\",\n    solution: \"x' (RU' R' DRUR' D')\",\n    type: 'Cross',\n    subtype: 'Cross',\n    squares: [/* eslint-disable-line */\n      [0, 1, 1],\n      [1, 1, 1],\n      [1, 1, 0]\n    ],\n    strikes: [[1, 0, 0], [0, 0, 1], [0, 0, 0], [0, 0, 0]]\n  },\n  {\n    active: true,\n    category: 'OLL',\n    image: 'oll_4.svg',\n    name: 'oll_4',\n    scramble: \"RU2RDR' U2RD' R2 U2\",\n    solution: \"R2D' RU2R'DRU2R\",\n    type: 'Cross',\n    subtype: 'Cross',\n    squares: [/* eslint-disable-line */\n      [0, 1, 0],\n      [1, 1, 1],\n      [1, 1, 1]\n    ],\n    strikes: [[1, 0, 1], [0, 0, 0], [0, 0, 0], [0, 0, 0]]\n  },\n  {\n    active: true,\n    category: 'OLL',\n    image: 'oll_5.svg',\n    name: 'oll_5',\n    scramble: \"x' (RU' R' DRUR' D')\",\n    solution: \"x' (RUR' DRU' R' D')\",\n    type: 'Cross',\n    subtype: 'Cross',\n    squares: [/* eslint-disable-line */\n      [1, 1, 1],\n      [1, 1, 1],\n      [0, 1, 0]\n    ],\n    strikes: [[0, 0, 0], [0, 0, 1], [0, 0, 0], [0, 0, 1]]\n  },\n  {\n    active: true,\n    category: 'OLL',\n    image: 'oll_6.svg',\n    name: 'oll_6',\n    scramble: \"RUR' URU2R' U\",\n    solution: \"L' U' LU' L' U2L\",\n    type: 'Cross',\n    subtype: 'Cross',\n    squares: [/* eslint-disable-line */\n      [0, 1, 0],\n      [1, 1, 1],\n      [0, 1, 1]\n    ],\n    strikes: [[0, 0, 1], [0, 0, 0], [1, 0, 0], [1, 0, 0]]\n  },\n  {\n    active: true,\n    category: 'OLL',\n    image: 'oll_7.svg',\n    name: 'oll_7',\n    scramble: \"L' U' LU' L' U2LU'\",\n    solution: \"RUR' URU2R'\",\n    type: 'Cross',\n    subtype: 'Cross',\n    squares: [/* eslint-disable-line */\n      [0, 1, 0],\n      [1, 1, 1],\n      [1, 1, 0]\n    ],\n    strikes: [[1, 0, 0], [1, 0, 0], [0, 0, 1], [0, 0, 0]]\n  },\n  {\n    active: true,\n    category: 'OLL',\n    image: 'oll_8.svg',\n    name: 'oll_8',\n    scramble: \"FR' F' RUR2B' R' BU' R'\",\n    solution: \"(RU2R2FR) (F' U2R' FRF')\",\n    type: 'Dot',\n    subtype: 'Dot',\n    squares: [/* eslint-disable-line */\n      [0, 0, 0],\n      [0, 1, 0],\n      [0, 0, 0]\n    ],\n    strikes: [[0, 1, 0], [1, 1, 1], [0, 1, 0], [1, 1, 1]]\n  },\n  {\n    active: true,\n    category: 'OLL',\n    image: 'oll_9.svg',\n    name: 'oll_9',\n    scramble: \"FR' F' RU2FR' F' RU' RU' R' U2\",\n    solution: \"LF' L' FU2FU' RU' R' F'\",\n    type: 'Dot',\n    subtype: 'Dot',\n    squares: [/* eslint-disable-line */\n      [1, 0, 0],\n      [0, 1, 0],\n      [0, 0, 1]\n    ],\n    strikes: [[0, 1, 0], [1, 1, 0], [1, 1, 0], [0, 1, 0]]\n  },\n  {\n    active: true,\n    category: 'OLL',\n    image: 'oll_10.svg',\n    name: 'oll_10',\n    scramble: \"FR' F' RU2R d' RU' R' F' U'\",\n    solution: \"(RU2R2FRF' U2) M' URU' L'\",\n    type: 'Dot',\n    subtype: 'Dot',\n    squares: [/* eslint-disable-line */\n      [0, 0, 1],\n      [0, 1, 0],\n      [0, 0, 1]\n    ],\n    strikes: [[0, 1, 0], [0, 1, 0], [0, 1, 0], [1, 1, 1]]\n  },\n  {\n    active: true,\n    category: 'OLL',\n    image: 'oll_11.svg',\n    name: 'oll_11',\n    scramble: \"RU2R2FRF' U2R' FRF' U2\",\n    solution: \"(FRUR' U' F') (fRUR' U' f')\",\n    type: 'Dot',\n    subtype: 'Dot',\n    squares: [/* eslint-disable-line */\n      [0, 0, 0],\n      [0, 1, 0],\n      [0, 0, 0]\n    ],\n    strikes: [[0, 1, 1], [0, 1, 0], [0, 1, 1], [1, 1, 1]]\n  },\n  {\n    active: true,\n    category: 'OLL',\n    image: 'oll_12.svg',\n    name: 'oll_12',\n    scramble: \"R' F' U2F2URU' R' F' U2R\",\n    solution: \"R' U2FRUR' U' F2U2FR\",\n    type: 'Dot',\n    subtype: 'Dot',\n    squares: [/* eslint-disable-line */\n      [1, 0, 1],\n      [0, 1, 0],\n      [0, 0, 0]\n    ],\n    strikes: [[0, 1, 0], [0, 1, 1], [0, 1, 0], [0, 1, 1]]\n  },\n  {\n    active: true,\n    category: 'OLL',\n    image: 'oll_13.svg',\n    name: 'oll_13',\n    scramble: \"MU' LF2L' U' RU' R2 r\",\n    solution: \"MUR' F2RUL' U L2 l'\",\n    type: 'Dot',\n    subtype: 'Dot',\n    squares: [/* eslint-disable-line */\n      [0, 0, 0],\n      [0, 1, 0],\n      [1, 0, 0]\n    ],\n    strikes: [[1, 1, 0], [1, 1, 0], [0, 1, 1], [0, 1, 0]]\n  },\n  {\n    active: true,\n    category: 'OLL',\n    image: 'oll_14.svg',\n    name: 'oll_14',\n    scramble: \"MUR' F2RUL' U L2 l'\",\n    solution: \"MU' LF2L' U' RU' R2 r\",\n    type: 'Dot',\n    subtype: 'Dot',\n    squares: [/* eslint-disable-line */\n      [0, 0, 0],\n      [0, 1, 0],\n      [0, 0, 1]\n    ],\n    strikes: [[0, 1, 1], [0, 1, 0], [1, 1, 0], [1, 1, 0]]\n  },\n  {\n    active: true,\n    category: 'OLL',\n    image: 'oll_15.svg',\n    name: 'oll_15',\n    scramble: \"(MUMUMUMU) (M' UM' UM' UM' U)\",\n    solution: \"M (URUR' U') M2 (U RU' r')\",\n    type: 'Dot',\n    subtype: 'Letter X',\n    squares: [/* eslint-disable-line */\n      [1, 0, 1],\n      [0, 1, 0],\n      [1, 0, 1]\n    ],\n    strikes: [[0, 1, 0], [0, 1, 0], [0, 1, 0], [0, 1, 0]]\n  },\n  {\n    active: true,\n    category: 'OLL',\n    image: 'oll_16.svg',\n    name: 'oll_16',\n    scramble: \"(R' FRUR' U') (F' UR)\",\n    solution: \"R' U' FURU' R' F' R\",\n    type: 'Dash',\n    subtype: 'Letter P',\n    squares: [/* eslint-disable-line */\n      [0, 1, 1],\n      [0, 1, 1],\n      [0, 0, 1]\n    ],\n    strikes: [[1, 0, 0], [0, 0, 0], [1, 1, 0], [0, 1, 0]]\n  },\n  {\n    active: true,\n    category: 'OLL',\n    image: 'oll_17.svg',\n    name: 'oll_17',\n    scramble: \"(L F' L' U' L U) (F U' L')\",\n    solution: \"LUF' U' L' ULFL'\",\n    type: 'Dash',\n    subtype: 'Letter P',\n    squares: [/* eslint-disable-line */\n      [1, 1, 0],\n      [1, 1, 0],\n      [1, 0, 0]\n    ],\n    strikes: [[0, 0, 1], [0, 1, 0], [0, 1, 1], [0, 0, 0]]\n  },\n  {\n    active: true,\n    category: 'OLL',\n    image: 'oll_18.svg',\n    name: 'oll_18',\n    scramble: \"F (RUR' U') F'\",\n    solution: \"FURU' R' F'\",\n    type: 'Dash',\n    subtype: 'Letter P',\n    squares: [/* eslint-disable-line */\n      [1, 1, 0],\n      [1, 1, 0],\n      [1, 0, 0]\n    ],\n    strikes: [[0, 0, 0], [1, 1, 1], [0, 1, 0], [0, 0, 0]]\n  },\n  {\n    active: true,\n    category: 'OLL',\n    image: 'oll_19.svg',\n    name: 'oll_19',\n    scramble: \"F' (L' U' LU) F\",\n    solution: \"F' U' L' ULF\",\n    type: 'Dash',\n    subtype: 'Letter P',\n    squares: [/* eslint-disable-line */\n      [0, 1, 1],\n      [0, 1, 1],\n      [0, 0, 1]\n    ],\n    strikes: [[0, 0, 0], [0, 0, 0], [0, 1, 0], [1, 1, 1]]\n  },\n  {\n    active: true,\n    category: 'OLL',\n    image: 'oll_20.svg',\n    name: 'oll_20',\n    scramble: \"B' RBR' U' R' U' RUR' URU2\",\n    solution: \"(L' U' LU' L' U) (LULF' L' F)\",\n    type: 'Dash',\n    subtype: 'Letter W',\n    squares: [/* eslint-disable-line */\n      [1, 1, 0],\n      [0, 1, 1],\n      [0, 0, 1]\n    ],\n    strikes: [[0, 0, 1], [0, 0, 0], [0, 1, 0], [0, 1, 1]]\n  },\n  {\n    active: true,\n    category: 'OLL',\n    image: 'oll_21.svg',\n    name: 'oll_21',\n    scramble: \"FR' F' RURUR' U' RU' R'\",\n    solution: \"(RUR' URU') (R' U' R' FRF')\",\n    type: 'Dash',\n    subtype: 'Letter W',\n    squares: [/* eslint-disable-line */\n      [0, 1, 1],\n      [1, 1, 0],\n      [1, 0, 0]\n    ],\n    strikes: [[1, 0, 0], [0, 1, 1], [0, 1, 0], [0, 0, 0]]\n  },\n  {\n    active: true,\n    category: 'OLL',\n    image: 'oll_22.svg',\n    name: 'oll_22',\n    scramble: \"R' F' LF' L' FLF' L' F2RU'\",\n    solution: \"(R' F' LF') ( L' FLF' L' F2R)\",\n    type: 'Dash',\n    subtype: 'Dash',\n    squares: [/* eslint-disable-line */\n      [0, 1, 0],\n      [1, 1, 0],\n      [0, 0, 0]\n    ],\n    strikes: [[0, 0, 0], [1, 1, 1], [0, 1, 0], [1, 0, 1]]\n  },\n  {\n    active: true,\n    category: 'OLL',\n    image: 'oll_23.svg',\n    name: 'oll_23',\n    scramble: \"LFR' FRF' R' FRF2L' U\",\n    solution: \"LFR' FRF' R' FRF2L'\",\n    type: 'Dash',\n    subtype: 'Dash',\n    squares: [/* eslint-disable-line */\n      [0, 1, 0],\n      [0, 1, 1],\n      [0, 0, 0]\n    ],\n    strikes: [[0, 0, 0], [1, 0, 1], [0, 1, 0], [1, 1, 1]]\n  },\n  {\n    active: true,\n    category: 'OLL',\n    image: 'oll_24.svg',\n    name: 'oll_24',\n    scramble: \"F' U' L' ULU' L' ULF\",\n    solution: \"F' (L' U' LU) (L' U' LU) F\",\n    type: 'Dash',\n    subtype: 'Dash',\n    squares: [/* eslint-disable-line */\n      [0, 1, 0],\n      [0, 1, 1],\n      [0, 0, 0]\n    ],\n    strikes: [[1, 0, 0], [1, 0, 1], [1, 1, 0], [0, 1, 0]]\n  },\n  {\n    active: true,\n    category: 'OLL',\n    image: 'oll_25.svg',\n    name: 'oll_25',\n    scramble: \"F URU' R' URU' R' F'\",\n    solution: \"F (RUR' U') (RUR' U') F'\",\n    type: 'Dash',\n    subtype: 'Dash',\n    squares: [/* eslint-disable-line */\n      [0, 1, 0],\n      [1, 1, 0],\n      [0, 0, 0]\n    ],\n    strikes: [[0, 0, 1], [0, 1, 0], [0, 1, 1], [1, 0, 1]]\n  },\n  {\n    active: true,\n    category: 'OLL',\n    image: 'oll_26.svg',\n    name: 'oll_26',\n    scramble: \"(r U') (r2 U) (r2 U r2 U' r)\",\n    solution: \"(r' U) (r2U') (r2U') (r2Ur')\",\n    type: 'Dash',\n    subtype: 'Dash',\n    squares: [/* eslint-disable-line */\n      [0, 0, 0],\n      [0, 1, 1],\n      [0, 1, 0]\n    ],\n    strikes: [[0, 1, 1], [0, 0, 0], [0, 0, 1], [1, 1, 1]]\n  },\n  {\n    active: true,\n    category: 'OLL',\n    image: 'oll_27.svg',\n    name: 'oll_27',\n    scramble: \"(r' U) (r2U') (r2U') (r2Ur')U2\",\n    solution: \"(lU') (l2U) (l2U) (l2U' l)\",\n    type: 'Dash',\n    subtype: 'Dash',\n    squares: [/* eslint-disable-line */\n      [0, 0, 0],\n      [1, 1, 0],\n      [0, 1, 0]\n    ],\n    strikes: [[1, 1, 0], [1, 1, 1], [1, 0, 0], [0, 0, 0]]\n  },\n  {\n    active: true,\n    category: 'OLL',\n    image: 'oll_28.svg',\n    name: 'oll_28',\n    scramble: \"L F' L' U' L F L' y L' U L\",\n    solution: \"L' U' L y' LF' L' ULFL'\",\n    type: 'Dash',\n    subtype: 'Dash',\n    squares: [/* eslint-disable-line */\n      [1, 0, 0],\n      [0, 1, 1],\n      [0, 1, 0]\n    ],\n    strikes: [[0, 1, 1], [0, 0, 1], [1, 0, 0], [0, 1, 0]]\n  },\n  {\n    active: true,\n    category: 'OLL',\n    image: 'oll_29.svg',\n    name: 'oll_29',\n    scramble: \"R' F R U R' F' R y' R U' R'\",\n    solution: \"RUR' y R' FRU' R' F' R\",\n    type: 'Dash',\n    subtype: 'Dash',\n    squares: [/* eslint-disable-line */\n      [0, 0, 1],\n      [1, 1, 0],\n      [0, 1, 0]\n    ],\n    strikes: [[1, 1, 0], [0, 1, 0], [0, 0, 1], [0, 0, 1]]\n  },\n  {\n    active: true,\n    category: 'OLL',\n    image: 'oll_30.svg',\n    name: 'oll_30',\n    scramble: \"B' FR' F' RBURU' R' U2\",\n    solution: \"(R' U' RU F) x' (R U' R' UD')\",\n    type: 'Line',\n    subtype: 'Letter C',\n    squares: [/* eslint-disable-line */\n      [1, 0, 1],\n      [1, 1, 1],\n      [0, 0, 0]\n    ],\n    strikes: [[0, 1, 0], [0, 0, 1], [0, 1, 0], [0, 0, 1]]\n  },\n  {\n    active: true,\n    category: 'OLL',\n    image: 'oll_31.svg',\n    name: 'oll_31',\n    scramble: \"RUB' RBR' U' R'\",\n    solution: \"(R' U' R' F) (RF' U) R\",\n    type: 'Line',\n    subtype: 'Letter C',\n    squares: [/* eslint-disable-line */\n      [1, 1, 0],\n      [0, 1, 0],\n      [1, 1, 0]\n    ],\n    strikes: [[0, 0, 0], [1, 1, 1], [0, 0, 0], [0, 1, 0]]\n  },\n  {\n    active: true,\n    category: 'OLL',\n    image: 'oll_32.svg',\n    name: 'oll_32',\n    scramble: \"FR' F' RURU' R'\",\n    solution: \"(RUR' U') (R' FRF')\",\n    type: 'Line',\n    subtype: 'Letter T',\n    squares: [/* eslint-disable-line */\n      [0, 0, 1],\n      [1, 1, 1],\n      [0, 0, 1]\n    ],\n    strikes: [[1, 1, 0], [0, 0, 0], [1, 1, 0], [0, 0, 0]]\n  },\n  {\n    active: true,\n    category: 'OLL',\n    image: 'oll_33.svg',\n    name: 'oll_33',\n    scramble: \"FURU' R' F'\",\n    solution: \"F (RUR' U') F'\",\n    type: 'Line',\n    subtype: 'Letter T',\n    squares: [/* eslint-disable-line */\n      [0, 0, 1],\n      [1, 1, 1],\n      [0, 0, 1]\n    ],\n    strikes: [[0, 1, 0], [0, 0, 0], [0, 1, 0], [1, 0, 1]]\n  },\n  {\n    active: true,\n    category: 'OLL',\n    image: 'oll_34.svg',\n    name: 'oll_34',\n    scramble: \"B' RBU2R' U' RU' R2U2R\",\n    solution: \"(RU2R2U' RU' R' U2) (F R F')\",\n    type: 'Line',\n    subtype: 'Letter I',\n    squares: [/* eslint-disable-line */\n      [0, 1, 0],\n      [0, 1, 0],\n      [0, 1, 0]\n    ],\n    strikes: [[0, 0, 0], [1, 1, 1], [0, 0, 0], [1, 1, 1]]\n  },\n  {\n    active: true,\n    category: 'OLL',\n    image: 'oll_35.svg',\n    name: 'oll_35',\n    scramble: \"F (RUR' U') (RUR' U') F'\",\n    solution: \"F (URU' R' URU' R') F'\",\n    type: 'Line',\n    subtype: 'Letter I',\n    squares: [/* eslint-disable-line */\n      [0, 0, 0],\n      [1, 1, 1],\n      [0, 0, 0]\n    ],\n    strikes: [[1, 1, 0], [1, 0, 1], [1, 1, 0], [0, 0, 0]]\n  },\n  {\n    active: true,\n    category: 'OLL',\n    image: 'oll_36.svg',\n    name: 'oll_36',\n    scramble: \"L' B' LR' U' RUR' U' RUL' BL\",\n    solution: \"(L' B' LU') (R' URU' R' URL' BL)\",\n    type: 'Line',\n    subtype: 'Letter I',\n    squares: [/* eslint-disable-line */\n      [0, 0, 0],\n      [1, 1, 1],\n      [0, 0, 0]\n    ],\n    strikes: [[0, 1, 0], [1, 0, 1], [0, 1, 0], [1, 0, 1]]\n  },\n  {\n    active: true,\n    category: 'OLL',\n    image: 'oll_37.svg',\n    name: 'oll_37',\n    scramble: \"(R' U' RU' R' U) y' (R' URB)U'\",\n    solution: \"(R' U' RU' R' U) y' (R' URB)\",\n    type: 'Line',\n    subtype: 'Letter I',\n    squares: [/* eslint-disable-line */\n      [0, 1, 0],\n      [0, 1, 0],\n      [0, 1, 0]\n    ],\n    strikes: [[1, 0, 0], [1, 1, 1], [1, 0, 0], [0, 1, 0]]\n  },\n  {\n    active: true,\n    category: 'OLL',\n    image: 'oll_38.svg',\n    name: 'oll_38',\n    scramble: \"R' F' LF' L' F2R U2\",\n    solution: \"r' U2RUR'U r\",\n    type: 'Dash',\n    subtype: 'Square',\n    squares: [/* eslint-disable-line */\n      [0, 0, 0],\n      [0, 1, 1],\n      [0, 1, 1]\n    ],\n    strikes: [[1, 1, 0], [1, 0, 0], [0, 0, 0], [0, 1, 1]]\n  },\n  {\n    active: true,\n    category: 'OLL',\n    image: 'oll_39.svg',\n    name: 'oll_39',\n    scramble: \"LFR' FRF2L' U2\",\n    solution: \"l U2L'U'LU' l'\",\n    type: 'Dash',\n    subtype: 'Square',\n    squares: [/* eslint-disable-line */\n      [0, 0, 0],\n      [1, 1, 0],\n      [1, 1, 0]\n    ],\n    strikes: [[0, 1, 1], [0, 1, 1], [0, 0, 0], [1, 0, 0]]\n  },\n  {\n    active: true,\n    category: 'OLL',\n    image: 'oll_40.svg',\n    name: 'oll_40',\n    scramble: \"R' U2 l U' RUR' l' U2R\",\n    solution: \"x' (R' F2R2U' R' UR' F2R)\",\n    type: 'Dash',\n    subtype: 'Square',\n    squares: [/* eslint-disable-line */\n      [0, 1, 1],\n      [0, 1, 1],\n      [1, 0, 0]\n    ],\n    strikes: [[1, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 0]]\n  },\n  {\n    active: true,\n    category: 'OLL',\n    image: 'oll_41.svg',\n    name: 'oll_41',\n    scramble: \"(RUR' U') (R' FRF')\",\n    solution: \"FR' F' RURU' R'\",\n    type: 'Dash',\n    subtype: 'Square',\n    squares: [/* eslint-disable-line */\n      [1, 1, 0],\n      [1, 1, 0],\n      [0, 0, 1]\n    ],\n    strikes: [[0, 0, 0], [1, 1, 0], [1, 1, 0], [0, 0, 0]]\n  },\n  {\n    active: true,\n    category: 'OLL',\n    image: 'oll_42.svg',\n    name: 'oll_42',\n    scramble: \"L F2 R' F' R F' L' U2\",\n    solution: \"l UL'ULU2 l'\",\n    type: 'Dash',\n    subtype: 'Letter S',\n    squares: [/* eslint-disable-line */\n      [0, 0, 1],\n      [0, 1, 1],\n      [0, 1, 0]\n    ],\n    strikes: [[1, 1, 0], [0, 0, 0], [0, 0, 1], [0, 1, 1]]\n  },\n  {\n    active: true,\n    category: 'OLL',\n    image: 'oll_43.svg',\n    name: 'oll_43',\n    scramble: \"R' F2LFL' FR U2\",\n    solution: \"r' U'RU'R'U2 r\",\n    type: 'Dash',\n    subtype: 'Letter S',\n    squares: [/* eslint-disable-line */\n      [1, 0, 0],\n      [1, 1, 0],\n      [0, 1, 0]\n    ],\n    strikes: [[0, 1, 1], [0, 1, 1], [1, 0, 0], [0, 0, 0]]\n  },\n  {\n    active: true,\n    category: 'OLL',\n    image: 'oll_44.svg',\n    name: 'oll_44',\n    scramble: \"MU' RU2R' U' RU' R2rU\",\n    solution: \"F'L'U'LUF U FRUR'U'F'\",\n    type: 'Dash',\n    subtype: 'Letter S',\n    squares: [/* eslint-disable-line */\n      [1, 0, 0],\n      [1, 1, 0],\n      [0, 1, 0]\n    ],\n    strikes: [[0, 1, 0], [1, 1, 0], [0, 0, 1], [0, 0, 1]]\n  },\n  {\n    active: true,\n    category: 'OLL',\n    image: 'oll_45.svg',\n    name: 'oll_45',\n    scramble: \"M' UR' U2RUR' UR2 r' U\",\n    solution: \"FRUR'U'F' U FRUR'U'F'\",\n    type: 'Dash',\n    subtype: 'Letter S',\n    squares: [/* eslint-disable-line */\n      [0, 0, 1],\n      [0, 1, 1],\n      [0, 1, 0]\n    ],\n    strikes: [[0, 1, 0], [0, 0, 1], [1, 0, 0], [1, 1, 0]]\n  },\n  {\n    active: true,\n    category: 'OLL',\n    image: 'oll_46.svg',\n    name: 'oll_46',\n    scramble: \"B2R' URU' R' U' R2BR' BU2\",\n    solution: \"F' LF' L2ULUL' U' LF2\",\n    type: 'Dash',\n    subtype: 'Letter S',\n    squares: [/* eslint-disable-line */\n      [0, 1, 0],\n      [0, 1, 1],\n      [1, 0, 1]\n    ],\n    strikes: [[0, 0, 0], [1, 0, 0], [0, 1, 0], [1, 0, 0]]\n  },\n  {\n    active: true,\n    category: 'OLL',\n    image: 'oll_47.svg',\n    name: 'oll_47',\n    scramble: \"l U' l' U' R2UR' BRU' R2U2\",\n    solution: \"FR' FR2U' R' U' RUR' F2\",\n    type: 'Dash',\n    subtype: 'Letter S',\n    squares: [/* eslint-disable-line */\n      [0, 1, 0],\n      [1, 1, 0],\n      [1, 0, 1]\n    ],\n    strikes: [[0, 0, 0], [1, 1, 0], [0, 1, 0], [1, 0, 0]]\n  },\n  {\n    active: true,\n    category: 'OLL',\n    image: 'oll_48.svg',\n    name: 'oll_48',\n    scramble: \"B' U' R' U' R y URU2R' U' RU'\",\n    solution: \"(R' FRF' R' FRF') (RU R' U' RUR')\",\n    type: 'Dash',\n    subtype: 'Letter S',\n    squares: [/* eslint-disable-line */\n      [0, 1, 1],\n      [1, 1, 0],\n      [0, 0, 1]\n    ],\n    strikes: [[0, 0, 0], [0, 1, 0], [0, 1, 0], [1, 0, 1]]\n  },\n  {\n    active: true,\n    category: 'OLL',\n    image: 'oll_49.svg',\n    name: 'oll_49',\n    scramble: \"FURUR' y' U' R' U2RUR' U'\",\n    solution: \"(LF' L' FLF' L' F) (L' U' L UL' U' L)\",\n    type: 'Dash',\n    subtype: 'Letter S',\n    squares: [/* eslint-disable-line */\n      [1, 1, 0],\n      [0, 1, 1],\n      [1, 0, 0]\n    ],\n    strikes: [[0, 0, 0], [1, 0, 1], [0, 1, 0], [0, 1, 0]]\n  },\n  {\n    active: true,\n    category: 'OLL',\n    image: 'oll_50.svg',\n    name: 'oll_50',\n    scramble: \"LUF' U' L' ULFL'\",\n    solution: \"(L F' L' U' L U) (F U' L')\",\n    type: 'Line',\n    subtype: 'Lightning',\n    squares: [/* eslint-disable-line */\n      [0, 0, 1],\n      [1, 1, 1],\n      [1, 0, 0]\n    ],\n    strikes: [[1, 1, 0], [0, 0, 1], [0, 1, 0], [0, 0, 0]]\n  },\n  {\n    active: true,\n    category: 'OLL',\n    image: 'oll_51.svg',\n    name: 'oll_51',\n    scramble: \"R' U' FURU' R' F' R\",\n    solution: \"(R' FRUR' U') (F' UR)\",\n    type: 'Line',\n    subtype: 'Lightning',\n    squares: [/* eslint-disable-line */\n      [1, 0, 0],\n      [1, 1, 1],\n      [0, 0, 1]\n    ],\n    strikes: [[0, 1, 1], [0, 0, 0], [0, 1, 0], [0, 0, 1]]\n  },\n  {\n    active: true,\n    category: 'OLL',\n    image: 'oll_52.svg',\n    name: 'oll_52',\n    scramble: \"L' U' L y' LF' L' ULFL'\",\n    solution: \"(LF' L' U' LFL') y' (R' UR)\",\n    type: 'Line',\n    subtype: 'Letter L',\n    squares: [/* eslint-disable-line */\n      [0, 0, 0],\n      [1, 1, 1],\n      [1, 0, 0]\n    ],\n    strikes: [[1, 1, 0], [1, 0, 0], [0, 1, 1], [0, 0, 0]]\n  },\n  {\n    active: true,\n    category: 'OLL',\n    image: 'oll_53.svg',\n    name: 'oll_53',\n    scramble: \"RUR' y R' FRU' R' F' R\",\n    solution: \"(R' FRUR' F' R) y (LU' L')\",\n    type: 'Line',\n    subtype: 'Letter L',\n    squares: [/* eslint-disable-line */\n      [0, 0, 0],\n      [1, 1, 1],\n      [0, 0, 1]\n    ],\n    strikes: [[0, 1, 1], [0, 0, 0], [1, 1, 0], [1, 0, 0]]\n  },\n  {\n    active: true,\n    category: 'OLL',\n    image: 'oll_54.svg',\n    name: 'oll_54',\n    scramble: \"L' B' L U' R' U R L' B L\",\n    solution: \"(L' B' L) (R' U' RU) (L' BL)\",\n    type: 'Line',\n    subtype: 'Letter L',\n    squares: [/* eslint-disable-line */\n      [0, 0, 0],\n      [1, 1, 1],\n      [0, 0, 1]\n    ],\n    strikes: [[1, 1, 0], [1, 0, 0], [0, 1, 0], [0, 0, 1]]\n  },\n  {\n    active: true,\n    category: 'OLL',\n    image: 'oll_55.svg',\n    name: 'oll_55',\n    scramble: \"L F L' U R U' R' LF' L' U2\",\n    solution: \"(RBR') (LUL' U') (RB' R')\",\n    type: 'Line',\n    subtype: 'Letter L',\n    squares: [/* eslint-disable-line */\n      [0, 0, 0],\n      [1, 1, 1],\n      [1, 0, 0]\n    ],\n    strikes: [[0, 1, 1], [0, 0, 1], [0, 1, 0], [1, 0, 0]]\n  },\n  {\n    active: true,\n    category: 'OLL',\n    image: 'oll_56.svg',\n    name: 'oll_56',\n    scramble: \"(RL' BLR') U2 (RL' BLR')U'\",\n    solution: \"(RL' BLR') U2 (RL' BLR')\",\n    type: 'Dash',\n    subtype: 'Letter F',\n    squares: [/* eslint-disable-line */\n      [1, 0, 1],\n      [0, 1, 1],\n      [1, 1, 1]\n    ],\n    strikes: [[0, 1, 0], [0, 0, 0], [0, 0, 0], [0, 1, 0]]\n  },\n  {\n    active: true,\n    category: 'OLL',\n    image: 'oll_57.svg',\n    name: 'oll_57',\n    scramble: \"F R' F' R L' U R U' R' L\",\n    solution: \"(RUR' U') r (R' URU' r')\",\n    type: 'Line',\n    subtype: 'Letter H',\n    squares: [/* eslint-disable-line */\n      [1, 0, 1],\n      [1, 1, 1],\n      [1, 0, 1]\n    ],\n    strikes: [[0, 1, 0], [0, 0, 0], [0, 1, 0], [0, 0, 0]]\n  }\n];\n\nexport const PLLs: algorithm[] = [\n  {\n    active: true,\n    category: 'PLL',\n    image: 'pll_1.svg',\n    name: 'pll_1',\n    scramble: \"x' (U L' U R2 U') (L U R2 U2)\",\n    solution: \"x' (R' D R') U2 (R D' R' U2 R2)\",\n    type: 'A',\n    subtype: 'A',\n    squares: squresFull,\n    strikes: srikesNone,\n    lines: [[{ x: 0, y: 0 }, { x: 2, y: 0 }, { x: 2, y: 2 }]]\n  },\n  {\n    active: true,\n    category: 'PLL',\n    image: 'pll_2.svg',\n    name: 'pll_2',\n    scramble: \"x' (U' R U' L2U) (R' U' L2 U2)\",\n    solution: \"x' (L D' L) U2 (L' D L) U2 L2\",\n    type: 'A',\n    subtype: 'A',\n    squares: squresFull,\n    strikes: srikesNone,\n    lines: [[{ x: 0, y: 0 }, { x: 0, y: 2 }, { x: 2, y: 0 }]]\n  },\n  {\n    active: true,\n    category: 'PLL',\n    image: 'pll_3.svg',\n    name: 'pll_3',\n    scramble: \"x' (R U' R' D R U R' D') (R U R' D R U' R' D')\",\n    solution: \"x' (R U' R' D R U R' D') (R U R' D R U' R' D')\",\n    type: 'E',\n    subtype: 'E',\n    squares: squresFull,\n    strikes: srikesNone,\n    lines: [[{ x: 0, y: 0 }, { x: 0, y: 2 }], [{ x: 2, y: 0 }, { x: 2, y: 2 }]]\n  },\n  {\n    active: true,\n    category: 'PLL',\n    image: 'pll_4.svg',\n    name: 'pll_4',\n    scramble: \"(R' URU' R2) y' (R' U' RU) (BRB' R' B2U')\",\n    solution: \"(R' URU' R2) y' (R' U' RU) (BRB' R' B2U')\",\n    type: 'E',\n    subtype: 'E',\n    squares: squresFull,\n    strikes: srikesNone,\n    lines: [[{ x: 0, y: 0 }, { x: 2, y: 0 }], [{ x: 0, y: 1 }, { x: 2, y: 1 }]]\n  },\n  {\n    active: true,\n    category: 'PLL',\n    image: 'pll_5.svg',\n    name: 'pll_5',\n    scramble: \"(M2 U') (M2 U2) (M2 U') M2\",\n    solution: \"(M2 U') (M2 U2) (M2 U') M2\",\n    type: 'H',\n    subtype: 'H',\n    squares: squresFull,\n    strikes: srikesNone,\n    lines: [[{ x: 1, y: 0 }, { x: 1, y: 2 }], [{ x: 0, y: 1 }, { x: 2, y: 1 }]]\n  },\n  {\n    active: true,\n    category: 'PLL',\n    image: 'pll_6.svg',\n    name: 'pll_6',\n    scramble: \"(R' UR' U') (R' U') (R' U R U R2)\",\n    solution: \"(R2 U') (R' U' RU) (R U R U' R)\",\n    type: 'U',\n    subtype: 'U',\n    squares: squresFull,\n    strikes: srikesNone,\n    lines: [[{ x: 0, y: 1 }, { x: 2, y: 1 }, { x: 1, y: 0 }]]\n  },\n  {\n    active: true,\n    category: 'PLL',\n    image: 'pll_7.svg',\n    name: 'pll_7',\n    scramble: \"(R2 U') (R' U' RU) (R U R U' R)\",\n    solution: \"(R' UR' U') (R' U') (R' U R U R2)\",\n    type: 'U',\n    subtype: 'U',\n    squares: squresFull,\n    strikes: srikesNone,\n    lines: [[{ x: 0, y: 1 }, { x: 1, y: 0 }, { x: 2, y: 1 }]]\n  },\n  {\n    active: true,\n    category: 'PLL',\n    image: 'pll_8.svg',\n    name: 'pll_8',\n    scramble: \"L U' R' UL' U2 R U' R' U2 R x2\",\n    solution: \"B2 (R' U' R) B2 (L' D L' D') L2\",\n    type: 'J',\n    subtype: 'J',\n    squares: squresFull,\n    strikes: srikesNone,\n    lines: [[{ x: 0, y: 0 }, { x: 0, y: 2 }], [{ x: 0, y: 1 }, { x: 1, y: 2 }]]\n  },\n  {\n    active: true,\n    category: 'PLL',\n    image: 'pll_9.svg',\n    name: 'pll_9',\n    scramble: \"(R' U L U' R) (U2 L' U L U2 L') x2\",\n    solution: \"B2 (L U L') B2 (R D' R D) R2\",\n    type: 'J',\n    subtype: 'J',\n    squares: squresFull,\n    strikes: srikesNone,\n    lines: [[{ x: 2, y: 0 }, { x: 2, y: 2 }], [{ x: 2, y: 1 }, { x: 1, y: 2 }]]\n  },\n  {\n    active: true,\n    category: 'PLL',\n    image: 'pll_10.svg',\n    name: 'pll_10',\n    scramble: \"(R U R' U') (R' F R2 U') (R' U' R U R' F')\",\n    solution: \"(R U R' U') (R' F R2 U') (R' U' R U R' F')\",\n    type: 'T',\n    subtype: 'T',\n    squares: squresFull,\n    strikes: srikesNone,\n    lines: [[{ x: 2, y: 0 }, { x: 2, y: 2 }], [{ x: 0, y: 1 }, { x: 2, y: 1 }]]\n  },\n  {\n    active: true,\n    category: 'PLL',\n    image: 'pll_11.svg',\n    name: 'pll_11',\n    scramble: \"(L' U L' U') y'(R' F') (R2 U' R' U R' F R F) y\",\n    solution: \"(L' U L' U') y'(R' F') (R2 U' R' U R' F R F)\",\n    type: 'V',\n    subtype: 'V',\n    squares: squresFull,\n    strikes: srikesNone,\n    lines: [[{ x: 0, y: 0 }, { x: 2, y: 2 }], [{ x: 0, y: 1 }, { x: 1, y: 2 }]]\n  },\n  {\n    active: true,\n    category: 'PLL',\n    image: 'pll_12.svg',\n    name: 'pll_12',\n    scramble: \"(L U2 L' U2) (L F' L' U' LU) (L F L2 U)\",\n    solution: \"(L U2 L' U2) (L F' L' U' LU) (L F L2 U)\",\n    type: 'R',\n    subtype: 'R',\n    squares: squresFull,\n    strikes: srikesNone,\n    lines: [[{ x: 0, y: 0 }, { x: 2, y: 0 }], [{ x: 0, y: 1 }, { x: 1, y: 2 }]]\n  },\n  {\n    active: true,\n    category: 'PLL',\n    image: 'pll_13.svg',\n    name: 'pll_13',\n    scramble: \"(R' U2 R U2) (R' F R U R' U') (R' F' R2 U')\",\n    solution: \"(R' U2 R U2) (R' F R U R' U') (R' F' R2 U')\",\n    type: 'R',\n    subtype: 'R',\n    squares: squresFull,\n    strikes: srikesNone,\n    lines: [[{ x: 0, y: 0 }, { x: 2, y: 0 }], [{ x: 2, y: 1 }, { x: 1, y: 2 }]]\n  },\n  {\n    active: true,\n    category: 'PLL',\n    image: 'pll_14.svg',\n    name: 'pll_14',\n    scramble: \"(L U L' B2) z' (R' U L' U' L) (U' R B2) z\",\n    solution: \"z x' (U2 r' U R' U R U' r U2) y (L F' L') x\",\n    type: 'G',\n    subtype: 'G',\n    squares: squresFull,\n    strikes: srikesNone,\n    lines: [\n      [{ x: 1, y: 0 }, { x: 2, y: 1 }, { x: 1, y: 2 }],\n      [{ x: 2, y: 0 }, { x: 0, y: 2 }, { x: 2, y: 2 }]\n    ]\n  },\n  {\n    active: true,\n    category: 'PLL',\n    image: 'pll_15.svg',\n    name: 'pll_15',\n    scramble: \"(R' U' R B2) z (L U' R U R') (U r' U2) z' x\",\n    solution: \"z' x' (U2 l U' LU' L' U l' U2) y' (R' F R) x\",\n    type: 'G',\n    subtype: 'G',\n    squares: squresFull,\n    strikes: srikesNone,\n    lines: [\n      [{ x: 0, y: 0 }, { x: 2, y: 2 }, { x: 0, y: 2 }],\n      [{ x: 1, y: 0 }, { x: 0, y: 1 }, { x: 1, y: 2 }]\n    ]\n  },\n  {\n    active: true,\n    category: 'PLL',\n    image: 'pll_16.svg',\n    name: 'pll_16',\n    scramble: \"z' (U2 l U' LU' L' U l' U2) y' (R' F R) x\",\n    solution: \"(R' U' R B2) z (L U' R U R') (U r' U2) z' x\",\n    type: 'G',\n    subtype: 'G',\n    squares: squresFull,\n    strikes: srikesNone,\n    lines: [\n      [{ x: 0, y: 0 }, { x: 0, y: 2 }, { x: 2, y: 2 }],\n      [{ x: 1, y: 0 }, { x: 1, y: 2 }, { x: 0, y: 1 }]\n    ]\n  },\n  {\n    active: true,\n    category: 'PLL',\n    image: 'pll_17.svg',\n    name: 'pll_17',\n    scramble: \"z (U2 r' U R' U R U' r U2) y (L F' L') x\",\n    solution: \"(L U L' B2) z' (R' U L' U' L) (U' R B2) z\",\n    type: 'G',\n    subtype: 'G',\n    squares: squresFull,\n    strikes: srikesNone,\n    lines: [\n      [{ x: 2, y: 0 }, { x: 2, y: 2 }, { x: 0, y: 2 }],\n      [{ x: 1, y: 0 }, { x: 1, y: 2 }, { x: 2, y: 1 }]\n    ]\n  },\n  {\n    active: true,\n    category: 'PLL',\n    image: 'pll_18.svg',\n    name: 'pll_18',\n    scramble: \"(U R' U' R U') (R U R U' R' U) (R U R2 U' R' U)\",\n    solution: \"(U R' U' R U') (R U R U' R' U) (R U R2 U' R' U)\",\n    type: 'Z',\n    subtype: 'Z',\n    squares: squresFull,\n    strikes: srikesNone,\n    lines: [[{ x: 1, y: 0 }, { x: 0, y: 1 }], [{ x: 2, y: 1 }, { x: 1, y: 2 }]]\n  },\n  {\n    active: true,\n    category: 'PLL',\n    image: 'pll_19.svg',\n    name: 'pll_19',\n    scramble: \"L U' R U2 L' U R') (L U' R U2 L' U R') U'\",\n    solution: \"L U' R U2 L' U R') (L U' R U2 L' U R') U'\",\n    type: 'N',\n    subtype: 'N',\n    squares: squresFull,\n    strikes: srikesNone,\n    lines: [[{ x: 2, y: 0 }, { x: 0, y: 2 }], [{ x: 0, y: 1 }, { x: 2, y: 1 }]]\n  },\n  {\n    active: true,\n    category: 'PLL',\n    image: 'pll_20.svg',\n    name: 'pll_20',\n    scramble: \"(R' UL' U2 R U' L) (R' UL' U2 R U' L) U\",\n    solution: \"(R' UL' U2 R U' L) (R' UL' U2 R U' L) U\",\n    type: 'N',\n    subtype: 'N',\n    squares: squresFull,\n    strikes: srikesNone,\n    lines: [[{ x: 0, y: 0 }, { x: 2, y: 2 }], [{ x: 0, y: 1 }, { x: 2, y: 1 }]]\n  },\n  {\n    active: true,\n    category: 'PLL',\n    image: 'pll_21.svg',\n    name: 'pll_21',\n    scramble: \"(F R U' R' U' R U R' F') (R U R' U') (R' F R F')\",\n    solution: \"(F R U' R' U' R U R' F') (R U R' U') (R' F R F')\",\n    type: 'Y',\n    subtype: 'Y',\n    squares: squresFull,\n    strikes: srikesNone,\n    lines: [[{ x: 0, y: 0 }, { x: 2, y: 2 }], [{ x: 1, y: 0 }, { x: 0, y: 1 }]]\n  }\n];\n","import { Meteor } from 'meteor/meteor';\nimport { Algorithms } from '../../collections/algorithms';\n\n// TODO Only publish algorithms that are public or belong to the current user\nMeteor.publish('algorithms', () => Algorithms.find());\n","import { Meteor } from 'meteor/meteor';\nimport { Results } from '../../collections/results';\n\n// TODO Only publish algorithms that are public or belong to the current user\nMeteor.publish('results', () => Results.find());\n","import { Meteor } from 'meteor/meteor';\n\nimport { createAlgorithms } from './imports/algorithmsCreation';\n\nMeteor.startup(() => {\n  //UniConfig.private.runOnce('createAlgorithms', createAlgorithms);\n  createAlgorithms();\n});\n","import { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\nimport { check } from 'meteor/check';\n\nimport { expect } from 'chai';\n\nexport const Algorithms = new Mongo.Collection('algorithms');\n\nMeteor.methods({\n  'algorithms.toggleActive': (algId, active) => {\n    check(active, Boolean);\n    check(algId, String);\n\n    Algorithms.update(algId, { $set: { active } });\n  },\n  'algorithms.activateAll': category => {\n    Algorithms.update(\n      { category },\n      { $set: { active: true } },\n      { multi: true }\n    );\n  },\n  'algorithms.deactivateAll': category => {\n    Algorithms.update(\n      { category },\n      { $set: { active: false } },\n      { multi: true }\n    );\n  },\n  'algorithms.insert': ({\n    category,\n    image,\n    scramble,\n    solution,\n    subtype,\n    type\n  }) => {\n    expect(category).to.be.a('string');\n    expect(image).to.be.a('string');\n    expect(scramble).to.be.a('string');\n    expect(solution).to.be.a('string');\n    expect(subtype).to.be.a('string');\n    expect(type).to.be.a('string');\n\n    // Make sure the user is logged in before inserting a algorithm\n    /* if (! Meteor.userId()) {\n         throw new Meteor.Error('not-authorized');\n     }*/\n\n    const doc = {\n      createdAt: new Date(),\n      category,\n      image,\n      scramble,\n      solution,\n      subtype,\n      type\n    };\n\n    Algorithms.insert(doc);\n  },\n  'algorithms.search'(text) {\n    check(text, String);\n\n    return Algorithms.find();\n  },\n  'algorithms.remove'(algorithmId) {\n    check(algorithmId, String);\n\n    /*const algorithm = Algorithms.findOne(algorithmId);\n    if (algorithm.private && algorithm.owner !== Meteor.userId()) {\n      // If the algorithm is private, make sure only the owner can delete it\n          throw new Meteor.Error('not-authorized');\n    }*/\n\n    Algorithms.remove(algorithmId);\n  } /*,\n    'algorithms.setChecked'(algorithmId, setChecked) {\n        check(algorithmId, String);\n        check(setChecked, Boolean);\n\n        const algorithm = Algorithms.findOne(algorithmId);\n        if (algorithm.private && algorithm.owner !== Meteor.userId()) {\n              // If the algorithm is private, make sure only the owner can check it off\n                  throw new Meteor.Error('not-authorized');\n            }\n\n        Algorithms.update(algorithmId, { $set: { checked: setChecked } });\n    },\n    'algorithms.setPrivate'(algorithmId, setToPrivate) {\n        check(algorithmId, String);\n        check(setToPrivate, Boolean);\n\n        const algorithm = Algorithms.findOne(algorithmId);\n\n        // Make sure only the algorithm owner can make a algorithm private\n        if (algorithm.owner !== Meteor.userId()) {\n            throw new Meteor.Error('not-authorized');\n        }\n\n        Algorithms.update(algorithmId, { $set: { private: setToPrivate } });\n    },*/\n});\n","import { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\nimport { check } from 'meteor/check';\n\nexport const Results = new Mongo.Collection('results');\n\nMeteor.methods({\n  'results.insert': ({ algorithmId, category, real, scramble, time }) => {\n    check(category, String);\n    check(real, Boolean);\n    check(time, Number);\n\n    if (category === 'OLL' || category === 'PLL' || category === '3x3x3') {\n      check(scramble, String);\n    }\n\n    if (category === 'OLL' || category === 'PLL') {\n      check(algorithmId, String);\n    }\n\n    // Make sure the user is logged in before inserting a result\n    /* if (! Meteor.userId()) {\n     throw new Meteor.Error('not-authorized');\n     }*/\n\n    const doc = {\n      algorithmId,\n      category,\n      createdAt: new Date(),\n      real,\n      scramble,\n      time\n    };\n\n    Results.insert(doc);\n  },\n  'results.search': text => {\n    check(text, String);\n\n    return Results.find();\n  },\n  'results.remove': resultId => {\n    check(resultId, String);\n\n    /*const result = Results.findOne(resultId);\n     if (result.private && result.owner !== Meteor.userId()) {\n     // If the result is private, make sure only the owner can delete it\n     throw new Meteor.Error('not-authorized');\n     }*/\n\n    Results.remove(resultId);\n  }\n});\n"]}}]