[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nTemplate = Package['templating-runtime'].Template;\nmeteorInstall = Package.modules.meteorInstall;\nmeteorBabelHelpers = Package.modules.meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\nHTML = Package.htmljs.HTML;\nSymbol = Package['ecmascript-runtime-client'].Symbol;\nMap = Package['ecmascript-runtime-client'].Map;\nSet = Package['ecmascript-runtime-client'].Set;\n\n","servePath":"/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"client\":{\"template.main.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                            //\n// client/template.main.js                                                                                    //\n//                                                                                                            //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                              //\n\nTemplate.body.addContent((function() {\n  var view = this;\n  return HTML.Raw('<div id=\"render-target\"></div>');\n}));\nMeteor.startup(Template.body.renderToDocument);\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"lib\":{\"composer.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                            //\n// client/lib/composer.js                                                                                     //\n//                                                                                                            //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                              //\nmodule.export({\n  composer: function () {\n    return composer;\n  }\n});\nvar React;\nmodule.link(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  }\n}, 0);\nvar setDefaults;\nmodule.link(\"react-komposer\", {\n  setDefaults: function (v) {\n    setDefaults = v;\n  }\n}, 1);\nvar Tracker;\nmodule.link(\"meteor/tracker\", {\n  Tracker: function (v) {\n    Tracker = v;\n  }\n}, 2);\nvar Loader;\nmodule.link(\"../components/loader\", {\n  \"default\": function (v) {\n    Loader = v;\n  }\n}, 3);\n\nvar errorHandler = function (error) {\n  return Meteor.isProduction ? React.createElement(\"span\", null, \"An error occurred.\") : React.createElement(\"code\", null, JSON.stringify(error, null, 2));\n};\n\nvar compose = setDefaults({\n  errorHandler: errorHandler,\n  loadingHandler: Loader,\n  pure: true\n});\n\nvar getTrackerLoader = function (reactiveMapper) {\n  return function (props, onData, env) {\n    var trackerCleanup = null;\n    var handler = Tracker.nonreactive(function () {\n      return Tracker.autorun(function () {\n        // assign the custom clean-up function.\n        trackerCleanup = reactiveMapper(props, onData, env);\n      });\n    });\n    return function () {\n      if (typeof trackerCleanup === 'function') trackerCleanup();\n      return handler.stop();\n    };\n  };\n};\n\nvar composer = function (reactiveMapper, options) {\n  return compose(getTrackerLoader(reactiveMapper), options);\n};\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"utils.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                            //\n// client/utils.js                                                                                            //\n//                                                                                                            //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                              //\nmodule.export({\n  getAverage: function () {\n    return getAverage;\n  }\n});\n\nvar getAverage = function (results) {\n  if (!results || results.length === 0) {\n    return 0;\n  }\n\n  return Math.round(results.reduce(function (sum, result) {\n    return sum + result;\n  }, 0) / results.length);\n};\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"main.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                            //\n// client/main.js                                                                                             //\n//                                                                                                            //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                              //\nvar React;\nmodule.link(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  }\n}, 0);\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 1);\nvar render;\nmodule.link(\"react-dom\", {\n  render: function (v) {\n    render = v;\n  }\n}, 2);\nvar Container;\nmodule.link(\"./components/container\", {\n  \"default\": function (v) {\n    Container = v;\n  }\n}, 3);\nmodule.link(\"rc-slider/assets/index.css\");\nmodule.link(\"react-semantic-toasts/styles/react-semantic-alert.css\");\nMeteor.startup(function () {\n  render(React.createElement(Container, null), document.getElementById('render-target'));\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"components\":{\"loader.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                            //\n// client/components/loader.js                                                                                //\n//                                                                                                            //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                              //\nvar React;module.link('react',{default:function(v){React=v}},0);var Dimmer,LoaderSemantic;module.link('semantic-ui-react',{Dimmer:function(v){Dimmer=v},Loader:function(v){LoaderSemantic=v}},1);\n\n\nconst Loader = () => (\n  <Dimmer active page style={{ backgroundColor: 'rgba(0, 0, 0, 0.55)' }}>\n    <LoaderSemantic size=\"large\">Loading</LoaderSemantic>\n  </Dimmer>\n);\n\nmodule.exportDefault(Loader);\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"container.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                            //\n// client/components/container.js                                                                             //\n//                                                                                                            //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                              //\nmodule.export({default:function(){return Container}});var React,Component;module.link('react',{default:function(v){React=v},Component:function(v){Component=v}},0);var Segment;module.link('semantic-ui-react',{Segment:function(v){Segment=v}},1);var Loader;module.link('./loader',{default:function(v){Loader=v}},2);var MenuTop;module.link('./menuTop',{default:function(v){MenuTop=v}},3);var Results;module.link('./results',{default:function(v){Results=v}},4);var Training;module.link('./training',{default:function(v){Training=v}},5);\n\n\n\n\n\n\n\nclass Container extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentTab: 'training',\n      isVisibleLoader: true\n    };\n\n    this.onChangeTab = this.onChangeTab.bind(this);\n  }\n\n  onChangeTab = (e, { name }) => this.setState({ currentTab: name });\n  onToggleLoader = newValue => this.setState({ isVisibleLoader: newValue });\n\n  render() {\n    const {\n      onChangeTab,\n      onToggleLoader,\n\n      state: { currentTab, isVisibleLoader }\n    } = this;\n\n    return (\n      <div className=\"segment\">\n        <header>\n          <MenuTop currentTab={currentTab} onChangeTab={onChangeTab} />\n        </header>\n\n        <Segment>\n          {isVisibleLoader && <Loader />}\n\n          <main>\n            {(currentTab === 'training' || currentTab === 'debugging') && (\n              <Training\n                onToggleLoader={onToggleLoader}\n                debugging={currentTab === 'debugging'}\n              />\n            )}\n            {currentTab === 'results' && (\n              <Results debugging={currentTab === 'debugging'} />\n            )}\n          </main>\n        </Segment>\n\n        <footer />\n      </div>\n    );\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"menuTop.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                            //\n// client/components/menuTop.js                                                                               //\n//                                                                                                            //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                              //\nvar React;module.link('react',{default:function(v){React=v}},0);var PropTypes;module.link('prop-types',{default:function(v){PropTypes=v}},1);var Icon,Menu;module.link('semantic-ui-react',{Icon:function(v){Icon=v},Menu:function(v){Menu=v}},2);\n\n\n\nconst MenuTop = ({ currentTab, onChangeTab }) => (\n  <Menu inverted icon=\"labeled\">\n    <Menu.Item\n      active={currentTab === 'home'}\n      color=\"green\"\n      name=\"home\"\n      onClick={onChangeTab}\n    >\n      <Icon name=\"home\" />\n      Home\n    </Menu.Item>\n    <Menu.Item\n      active={currentTab === 'training'}\n      color=\"blue\"\n      name=\"training\"\n      onClick={onChangeTab}\n    >\n      <Icon name=\"book\" />\n      Training\n    </Menu.Item>\n    <Menu.Item\n      active={currentTab === 'debugging'}\n      color=\"brown\"\n      name=\"debugging\"\n      onClick={onChangeTab}\n    >\n      <Icon name=\"pencil\" />\n      Debugging\n    </Menu.Item>\n    <Menu.Item\n      active={currentTab === 'results'}\n      color=\"orange\"\n      name=\"results\"\n      onClick={onChangeTab}\n    >\n      <Icon name=\"lightning\" />\n      Results\n    </Menu.Item>\n    <Menu.Item\n      active={currentTab === 'about'}\n      color=\"teal\"\n      name=\"about\"\n      onClick={onChangeTab}\n    >\n      <Icon name=\"idea\" />\n      About\n    </Menu.Item>\n  </Menu>\n);\nMenuTop.propTypes = {\n  currentTab: PropTypes.string.isRequired,\n  onChangeTab: PropTypes.func.isRequired\n};\n\nmodule.exportDefault(MenuTop);\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"results\":{\"index.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                            //\n// client/components/results/index.js                                                                         //\n//                                                                                                            //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                              //\nvar Meteor;module.link('meteor/meteor',{Meteor:function(v){Meteor=v}},0);var Results;module.link('/collections/results',{Results:function(v){Results=v}},1);var composer;module.link('../../lib/composer',{composer:function(v){composer=v}},2);var ResultsComponent;module.link('./results',{default:function(v){ResultsComponent=v}},3);\n\n\n\n\n\nconst compose = (props, onData) => {\n  const subscriptions = [Meteor.subscribe('results')];\n\n  if (subscriptions.every(subscription => subscription.ready())) {\n    const results = Results.find({}).fetch();\n    onData(null, { results });\n  }\n};\n\nmodule.exportDefault(composer(compose)(ResultsComponent));\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"results.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                            //\n// client/components/results/results.js                                                                       //\n//                                                                                                            //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                              //\nvar React,Component;module.link('react',{default:function(v){React=v},Component:function(v){Component=v}},0);var Table;module.link('semantic-ui-react',{Table:function(v){Table=v}},1);var moment;module.link('moment',{default:function(v){moment=v}},2);\n\n\n\nconst columns = [\n  {\n    label: 'Date',\n    value: 'createdAt',\n    format: value => moment(value).format('DD-MM-YYYY HH:ss')\n  },\n  {\n    label: 'Category',\n    value: 'category'\n  },\n  {\n    label: 'Debugging',\n    value: 'real',\n    format: value => (value ? 'no' : 'yes') // not real means that it is debugging\n  },\n  {\n    label: 'Scramble',\n    value: 'scramble'\n  },\n  {\n    label: 'Time',\n    value: 'time',\n    format: value =>\n      (value / 1000).toLocaleString('en-US', {\n        minimumFractionDigits: 3,\n        maximumFractionDigits: 3\n      }) + 's'\n  }\n];\n\nclass ResultsTab extends Component {\n  constructor(args) {\n    super(args);\n  }\n\n  renderHeader = () => (\n    <Table.Row>\n      {columns.map(({ label }, index) => (\n        <Table.HeaderCell key={index}>{label}</Table.HeaderCell>\n      ))}\n    </Table.Row>\n  );\n\n  renderRow = row => (\n    <Table.Row>\n      {columns.map(({ value, format = value => value }, index) => (\n        <Table.Cell key={index}>{format(row[value])}</Table.Cell>\n      ))}\n    </Table.Row>\n  );\n\n  render() {\n    const { results } = this.props;\n\n    return (\n      <Table\n        inverted\n        headerRow={this.renderHeader}\n        tableData={results}\n        renderBodyRow={this.renderRow}\n      />\n    );\n  }\n}\n\nmodule.exportDefault(ResultsTab);\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"training\":{\"index.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                            //\n// client/components/training/index.js                                                                        //\n//                                                                                                            //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                              //\nvar Meteor;module.link('meteor/meteor',{Meteor:function(v){Meteor=v}},0);var Algorithms;module.link('../../../collections/algorithms',{Algorithms:function(v){Algorithms=v}},1);var Results;module.link('../../../collections/results',{Results:function(v){Results=v}},2);var composer;module.link('../../lib/composer',{composer:function(v){composer=v}},3);var Training;module.link('./training',{default:function(v){Training=v}},4);\n\n\n\n\n\n\n// TODO move it\nconst categories = [\n  {\n    label: 'OLL',\n    value: 'OLL',\n    randomizableAlgorithm: true\n  },\n  {\n    label: 'PLL',\n    value: 'PLL',\n    randomizableAlgorithm: true\n  },\n  {\n    label: '3x3x3',\n    value: '3x3x3',\n    randomizableScramble: true\n  },\n  {\n    label: 'OLL Attack',\n    value: 'OLL-attack',\n    algorithmsCategory: 'OLL',\n    settingsDisabled: true\n  },\n  {\n    label: 'PLL Attack',\n    value: 'PLL-attack',\n    algorithmsCategory: 'PLL',\n    settingsDisabled: true\n  }\n];\n\nconst compose = (props, onData) => {\n  const subscriptions = [\n    Meteor.subscribe('algorithms'),\n    Meteor.subscribe('results')\n  ];\n\n  if (subscriptions.every(subscription => subscription.ready())) {\n    const algorithms = Algorithms.find({}).fetch();\n    const results = Results.find({}).fetch();\n\n    results.forEach(result => {\n      const algorithm = algorithms.find(alg => alg._id === result.algorithmId);\n      const category = categories.find(cat => cat.value === result.category);\n      if (algorithm) {\n        algorithm.results = (algorithm.results || []).concat(result.time);\n      }\n      if (category) {\n        category.results = (category.results || []).concat(result.time);\n      }\n    });\n\n    onData(null, { algorithms, categories });\n  }\n};\n\nmodule.exportDefault(composer(compose)(Training));\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"training.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                            //\n// client/components/training/training.js                                                                     //\n//                                                                                                            //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                              //\nvar React,Component;module.link('react',{default:function(v){React=v},Component:function(v){Component=v}},0);var moment;module.link('moment',{default:function(v){moment=v}},1);var PropTypes;module.link('prop-types',{default:function(v){PropTypes=v}},2);var Grid,Menu;module.link('semantic-ui-react',{Grid:function(v){Grid=v},Menu:function(v){Menu=v}},3);var SemanticToastContainer,toast;module.link('react-semantic-toasts',{SemanticToastContainer:function(v){SemanticToastContainer=v},toast:function(v){toast=v}},4);var AlgSettings;module.link('../algSettings',{default:function(v){AlgSettings=v}},5);var Averages;module.link('../averages',{default:function(v){Averages=v}},6);var TipsAndTricks;module.link('../tipsAndTricks',{default:function(v){TipsAndTricks=v}},7);var TrainingMain;module.link('../trainingMain',{default:function(v){TrainingMain=v}},8);var getRandomScramble;module.link('/lib/global-helpers',{getRandomScramble:function(v){getRandomScramble=v}},9);\n\n\n\n\n\n\n\n\n\n\n\n\n// TODO move it\nconst getRandomEntry = (array, excludeId) => {\n  const index = Math.floor(Math.random() * array.length);\n  const entry = array[index];\n\n  if (array.length > 1 && excludeId && entry._id === excludeId) {\n    return getRandomEntry(array, excludeId);\n  }\n\n  return entry;\n};\n\n// TODO move it\nconst toastNoActiveAlgorithms = () =>\n  toast({\n    title: 'No active algorithms',\n    type: 'warning',\n    description:\n      'Randomizing algorithms pauzed until you select at least one algorithm',\n    time: 5000\n  });\n\nclass Training extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      blocked: {\n        control: false,\n        delete: false,\n        shift: false,\n        space: false\n      },\n      currentAlgorithm: {\n        category: '',\n        image: '',\n        scramble: '',\n        solution: '',\n        subtype: '',\n        type: ''\n      },\n      currentAlgorithmId: 0,\n      currentCategory: this.props.categories[0],\n      isVisibleSolution: false,\n      settingsOpened: true,\n      timerCurrentValue: 0,\n      timerStartValue: 0,\n      timerStatus: 'resetted'\n    };\n  }\n\n  componentDidMount() {\n    this.onChangeAlgorithm();\n    this.props.onToggleLoader(false);\n\n    document.body.addEventListener('keydown', this.onKeyDown);\n    document.body.addEventListener('keypress', this.onKeyPress);\n    document.body.addEventListener('keyup', this.onKeyUp);\n  }\n\n  componentWillUnmount() {\n    document.body.removeEventListener('keydown', this.onKeyDown);\n    document.body.removeEventListener('keypress', this.onKeyPress);\n    document.body.removeEventListener('keyup', this.onKeyUp);\n  }\n\n  onChangeAlgorithm = () => {\n    const { algorithms } = this.props;\n    const { currentAlgorithmId, currentCategory } = this.state;\n\n    this.onReset();\n\n    let newAlgorithm;\n    if (currentCategory.randomizableAlgorithm) {\n      const activeAlgorithms = algorithms.filter(\n        algorithm =>\n          !!algorithm.active && algorithm.category === currentCategory.value\n      );\n\n      if (!activeAlgorithms.length) {\n        toastNoActiveAlgorithms();\n      }\n\n      newAlgorithm = getRandomEntry(activeAlgorithms, currentAlgorithmId);\n    } else if (currentCategory.randomizableScramble) {\n      const scramble = getRandomScramble(25);\n      newAlgorithm = { category: currentCategory.value, scramble };\n    }\n\n    this.setState({\n      currentAlgorithm: newAlgorithm,\n      currentAlgorithmId: newAlgorithm && newAlgorithm._id // alg may be undefined, e.g. for {OLL,PLL}-Attack\n    });\n  };\n\n  onChangeCategory = category => {\n    this.props.onToggleLoader(true);\n\n    this.setState({ currentCategory: category }, () => {\n      this.onChangeAlgorithm();\n      this.props.onToggleLoader(false);\n    });\n  };\n\n  onToggleActive = algorithm => {\n    Meteor.call('algorithms.toggleActive', algorithm._id, !algorithm.active);\n  };\n\n  onActivateAll = () => {\n    const { currentCategory } = this.state;\n    Meteor.call('algorithms.activateAll', currentCategory.value);\n  };\n\n  onDeactivateAll = () => {\n    Meteor.call('algorithms.deactivateAll');\n    toastNoActiveAlgorithms();\n  };\n\n  onKeyDown = event => {\n    if (event.target !== document.body) {\n      return;\n    }\n\n    const blocked = this.state.blocked;\n\n    if ((event.key === 'Enter' || event.key === ' ') && !blocked.space) {\n      event.preventDefault();\n      this.onGoToNextStatus('down');\n      this.setState({ blocked: { ...blocked, space: true } });\n    } else if (event.key === 'r') {\n      event.preventDefault();\n      this.onChangeAlgorithm();\n    } else if (event.key === 'Shift' && !blocked.shift) {\n      event.preventDefault();\n      this.setState({\n        blocked: { ...blocked, shift: true },\n        isVisibleSolution: true\n      });\n    } else if (event.key === 'Control' && !blocked.control) {\n      event.preventDefault();\n      this.setState({ blocked: { ...blocked, control: true } });\n    } else if (\n      (event.key === 'Backspace' ||\n        event.key === 'Delete' ||\n        event.key === 'Escape') &&\n      !blocked.delete\n    ) {\n      event.preventDefault();\n      this.setState({ blocked: { ...blocked, delete: true } });\n    }\n  };\n\n  onKeyPress = event => {\n    if (event.key === ' ' && event.target === document.body) {\n      event.preventDefault();\n    }\n  };\n\n  onKeyUp = event => {\n    if (event.target !== document.body) {\n      return;\n    }\n\n    const { blocked, isVisibleSolution } = this.state;\n\n    if (event.key === 'Enter' || event.key === ' ') {\n      this.onGoToNextStatus('up');\n      this.setState({ blocked: { ...blocked, space: false } });\n    } else if (event.key === 'Shift') {\n      this.setState({\n        blocked: { ...blocked, shift: false },\n        isVisibleSolution: false\n      });\n    } else if (event.key === 'Control') {\n      this.setState({\n        blocked: { ...blocked, control: false },\n        isVisibleSolution: !isVisibleSolution\n      });\n    } else if (\n      event.key === 'Backspace' ||\n      event.key === 'Delete' ||\n      event.key === 'Escape'\n    ) {\n      this.onChangeAlgorithm();\n      this.setState({ blocked: { ...blocked, delete: false } });\n    }\n  };\n\n  onGoToNextStatus = upOrDown => {\n    const {\n      blocked,\n      currentAlgorithm,\n      currentCategory,\n      timerCurrentValue,\n      timerStatus\n    } = this.state;\n\n    if (timerStatus === 'resetted' && upOrDown === 'down' && !blocked.space) {\n      this.setState({ timerStatus: 'pre-inspection' });\n    } else if (timerStatus === 'pre-inspection' && upOrDown === 'up') {\n      this.setState({\n        timerStatus: 'timer-on',\n        timerStartValue: moment().valueOf()\n      });\n      this.timer = setInterval(this.updateTimerTime, 1);\n    } else if (\n      timerStatus === 'timer-on' &&\n      upOrDown === 'down' &&\n      !blocked.space\n    ) {\n      clearInterval(this.timer);\n      this.setState({ timerStatus: 'timer-off' });\n    } else if (\n      timerStatus === 'timer-off' &&\n      upOrDown === 'down' &&\n      !blocked.space\n    ) {\n      /* Save time */\n      const result = {\n        ...(currentAlgorithm && {\n          algorithmId: currentAlgorithm._id,\n          scramble: currentAlgorithm.scramble\n        }),\n        category: currentCategory.value,\n        real: !this.props.debugging,\n        time: timerCurrentValue\n      };\n\n      Meteor.call('results.insert', result, () => this.onChangeAlgorithm());\n    }\n  };\n\n  onReset = () => {\n    clearInterval(this.timer);\n    this.setState({ timerStatus: 'resetted', timerCurrentValue: 0 });\n  };\n\n  updateTimerTime = () => {\n    this.setState(state => ({\n      timerCurrentValue: moment().valueOf() - state.timerStartValue\n    }));\n  };\n\n  render() {\n    const {\n      state: {\n        currentAlgorithm,\n        currentCategory,\n        isVisibleSolution,\n        timerCurrentValue\n      },\n      props: { algorithms, categories },\n      onActivateAll,\n      onToggleActive,\n      onChangeAlgorithm,\n      onChangeCategory,\n      onDeactivateAll\n    } = this;\n\n    const currentAlgorithms = algorithms.filter(\n      algorithm => algorithm.category === currentCategory.value\n    );\n\n    return (\n      <>\n        <SemanticToastContainer />\n        <Grid>\n          <Grid.Column width={4}>\n            <Menu className=\"left-menu\" inverted tabular vertical>\n              {categories.map(category => (\n                <Menu.Item\n                  key={category.value}\n                  name={category.label}\n                  active={currentCategory.value === category.value}\n                  onClick={() => onChangeCategory(category)}\n                />\n              ))}\n            </Menu>\n          </Grid.Column>\n          <Grid.Column width={8} textAlign=\"center\">\n            <TrainingMain\n              currentAlgorithm={currentAlgorithm}\n              isVisibleSolution={isVisibleSolution}\n              onChangeAlgorithm={onChangeAlgorithm}\n              timerCurrentValue={timerCurrentValue}\n            />\n          </Grid.Column>\n          <Grid.Column width={4}>\n            <Averages\n              currentAlgorithm={currentAlgorithm}\n              currentCategory={currentCategory}\n            />\n            <TipsAndTricks />\n          </Grid.Column>\n        </Grid>\n        {this.state.settingsOpened && (\n          <AlgSettings\n            algorithms={currentAlgorithms}\n            currentCategory={currentCategory}\n            onActivateAll={onActivateAll}\n            onToggleActive={onToggleActive}\n            onDeactivateAll={onDeactivateAll}\n          />\n        )}\n        <img src=\"/images/pll_2.png\" />\n        <img src=\"/images/pll_2.svg\" />\n      </>\n    );\n  }\n}\n\nTraining.propTypes = {\n  onToggleLoader: PropTypes.func.isRequired,\n  debugging: PropTypes.bool.isRequired\n};\n\nmodule.exportDefault(Training);\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"algSettings.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                            //\n// client/components/algSettings.js                                                                           //\n//                                                                                                            //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                              //\nvar React,useState;module.link('react',{default:function(v){React=v},useState:function(v){useState=v}},0);var PropTypes;module.link('prop-types',{default:function(v){PropTypes=v}},1);var Button,List,Segment;module.link('semantic-ui-react',{Button:function(v){Button=v},List:function(v){List=v},Segment:function(v){Segment=v}},2);var groupBy;module.link('lodash/groupBy',{default:function(v){groupBy=v}},3);var Slider,createSliderWithTooltip;module.link('rc-slider',{default:function(v){Slider=v},createSliderWithTooltip:function(v){createSliderWithTooltip=v}},4);var getAverage;module.link('../utils',{getAverage:function(v){getAverage=v}},5);\n\n\n\n\n\n\nconst SliderTooltip = createSliderWithTooltip(Slider);\n\nconst AlgSettings = ({\n  algorithms,\n  currentCategory: { settingsDisabled },\n  onActivateAll,\n  onToggleActive,\n  onDeactivateAll\n}) => {\n  const [detailsLevel, setDetailsLevel] = useState(1);\n\n  const algorithmsGrouped =\n    detailsLevel === 0\n      ? groupBy(algorithms, 'category')\n      : detailsLevel === 1\n      ? groupBy(algorithms, 'type')\n      : detailsLevel === 2\n      ? groupBy(algorithms, 'subtype')\n      : [];\n\n  return (\n    <section\n      className={`algorithm-settings${settingsDisabled ? ' disabled' : ''}`}\n    >\n      <List divided verticalAlign=\"middle\">\n        <List.Item>\n          <List.Content floated=\"right\">\n            <div className=\"grouping-level\">\n              <div className=\"title\">Grouping level</div>\n              <SliderTooltip\n                min={0}\n                max={2}\n                onChange={setDetailsLevel}\n                tipFormatter={value => ['None', 'General', 'Precise'][value]}\n                tipProps={{\n                  placement: 'bottom',\n                  visible: true,\n                  borderRadius: '0px'\n                }}\n                value={detailsLevel}\n              />\n            </div>\n          </List.Content>\n          <List.Content>\n            {!settingsDisabled && (\n              <div className=\"controls\">\n                <Button\n                  secondary\n                  onClick={settingsDisabled ? null : onActivateAll}\n                >\n                  Select all\n                </Button>\n                <Button\n                  secondary\n                  onClick={settingsDisabled ? null : onDeactivateAll}\n                >\n                  Unselect all\n                </Button>\n              </div>\n            )}\n          </List.Content>\n        </List.Item>\n      </List>\n\n      {Object.entries(algorithmsGrouped).map(([name, values], index) => (\n        <Segment key={index}>\n          <h5>{name}</h5>\n          {values.map(algorithm => (\n            <div\n              key={algorithm._id}\n              className={`algorithm${\n                settingsDisabled || algorithm.active ? ' active' : ''\n              }`}\n              onClick={() =>\n                settingsDisabled ? null : onToggleActive(algorithm)\n              }\n            >\n              <img src={`/images/${algorithm.image}`} />\n              <div className=\"results-average\">\n                {getAverage(algorithm && algorithm.results)}\n              </div>\n            </div>\n          ))}\n        </Segment>\n      ))}\n    </section>\n  );\n};\n\nAlgSettings.propTypes = {\n  currentCategory: PropTypes.object.isRequired,\n  onActivateAll: PropTypes.func.isRequired,\n  onToggleActive: PropTypes.func.isRequired,\n  onDeactivateAll: PropTypes.func.isRequired\n};\n\nmodule.exportDefault(AlgSettings);\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"averages.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                            //\n// client/components/averages.js                                                                              //\n//                                                                                                            //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                              //\nvar React;module.link('react',{default:function(v){React=v}},0);var PropTypes;module.link('prop-types',{default:function(v){PropTypes=v}},1);var List,Segment;module.link('semantic-ui-react',{List:function(v){List=v},Segment:function(v){Segment=v}},2);var moment;module.link('moment',{default:function(v){moment=v}},3);var getAverage;module.link('../utils',{getAverage:function(v){getAverage=v}},4);\n\n\n\n\n\nconst Averages = ({ currentAlgorithm, currentCategory }) => {\n  const currentAlgorithmAvg = getAverage(\n    currentAlgorithm && currentAlgorithm.results\n  );\n  const currentCategoryAvg = getAverage(\n    currentCategory && currentCategory.results\n  );\n\n  const averages = ['OLL', 'PLL'].includes(currentCategory.value)\n    ? [\n        {\n          header: 'Average for this algorithm',\n          description: currentAlgorithmAvg\n            ? moment(currentAlgorithmAvg).format('ss:SSS')\n            : 'No records'\n        },\n        {\n          header: `Average for all ${currentCategory.value} algorithms`,\n          description: currentCategoryAvg\n            ? moment(currentCategoryAvg).format('ss:SSS')\n            : 'No records'\n        }\n      ]\n    : [\n        {\n          header: `Average for all in ${currentCategory.value}`,\n          description: currentCategoryAvg\n            ? moment(currentCategoryAvg).format('mm:ss:SSS')\n            : 'No records'\n        }\n      ];\n\n  return (\n    <Segment className=\"averages\">\n      <List inverted items={averages} />\n    </Segment>\n  );\n};\n\nAverages.propTypes = {\n  currentAlgorithmAvg: PropTypes.number,\n  currentCategory: PropTypes.object,\n  currentCategoryAvg: PropTypes.number\n};\n\nmodule.exportDefault(Averages);\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"tipsAndTricks.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                            //\n// client/components/tipsAndTricks.js                                                                         //\n//                                                                                                            //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                              //\nvar React;module.link('react',{default:function(v){React=v}},0);var List,Segment;module.link('semantic-ui-react',{List:function(v){List=v},Segment:function(v){Segment=v}},1);\n\n\nconst tipsList = [\n  {\n    header: 'Enter / Space',\n    description: '... -> start timer -> stop timer -> save result -> ...'\n  },\n  {\n    header: 'r',\n    description: 'Randomize new algorithm'\n  },\n  {\n    header: 'Shift (hold)',\n    description: 'Take a peek at the solution'\n  },\n  {\n    header: 'Control',\n    description: 'Show / hide the solution'\n  },\n  {\n    header: 'Backspace / Delete / Escape',\n    description: \"Reset timer - don't save the solution\"\n  }\n].map(tip => ({ ...tip, icon: 'lightbulb outline' }));\n\nconst TipsAndTricks = () => (\n  <Segment>\n    Shortcuts list:\n    <List celled inverted items={tipsList} />\n  </Segment>\n);\n\nmodule.exportDefault(TipsAndTricks);\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"trainingMain.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                            //\n// client/components/trainingMain.js                                                                          //\n//                                                                                                            //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                              //\nvar React;module.link('react',{default:function(v){React=v}},0);var PropTypes;module.link('prop-types',{default:function(v){PropTypes=v}},1);var Button,Segment;module.link('semantic-ui-react',{Button:function(v){Button=v},Segment:function(v){Segment=v}},2);var Timer;module.link('./timer',{default:function(v){Timer=v}},3);\n\n\n\n\n\nconst TrainingMain = ({\n  onChangeAlgorithm,\n  currentAlgorithm: { image, scramble, solution } = {},\n  isVisibleSolution,\n  timerCurrentValue\n}) => (\n  <section className=\"training-main\">\n    {scramble && <Segment className=\"scramble-segment\">{scramble}</Segment>}\n    {image && (\n      <Segment className=\"image-segment\">\n        <img src={`/images/${image}`} />\n      </Segment>\n    )}\n    <Segment className=\"timer-segment\">\n      <Timer\n        isVisibleSolution={isVisibleSolution}\n        solution={solution}\n        timerCurrentValue={timerCurrentValue}\n      />\n    </Segment>\n    {(image || solution) && (\n      <Segment>\n        <Button primary onClick={() => onChangeAlgorithm()}>\n          Randomize new\n        </Button>\n      </Segment>\n    )}\n  </section>\n);\n\nTrainingMain.propTypes = {\n  currentAlgorithm: PropTypes.object,\n  isVisibleSolution: PropTypes.bool.isRequired,\n  onChangeAlgorithm: PropTypes.func.isRequired,\n  timerCurrentValue: PropTypes.number.isRequired\n};\n\nmodule.exportDefault(TrainingMain);\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"timer.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                            //\n// client/components/timer.js                                                                                 //\n//                                                                                                            //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                              //\nvar moment;module.link('moment',{default:function(v){moment=v}},0);var PropTypes;module.link('prop-types',{default:function(v){PropTypes=v}},1);var React;module.link('react',{default:function(v){React=v}},2);\n\n\n\nconst Timer = ({ isVisibleSolution, solution, timerCurrentValue }) => (\n  <div className=\"timer\">\n    <p>{moment(timerCurrentValue).format('mm:ss:SSS')}</p>\n    {isVisibleSolution && solution && <p>{solution}</p>}\n  </div>\n);\n\nTimer.propTypes = {\n  isVisibleSolution: PropTypes.bool.isRequired,\n  solution: PropTypes.string,\n  timerCurrentValue: PropTypes.number.isRequired\n};\n\nmodule.exportDefault(Timer);\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"lib\":{\"global-helpers.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                            //\n// lib/global-helpers.js                                                                                      //\n//                                                                                                            //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                              //\nmodule.export({\n  getRandomScramble: function () {\n    return getRandomScramble;\n  }\n});\nvar allowedMoves = ['F', \"F'\", 'F2', 'B', \"B'\", 'B2', 'R', \"R'\", 'R2', 'L', \"L'\", 'L2', 'U', \"U'\", 'U2', 'D', \"D'\", 'D2'];\n\nvar getRandomMove = function () {\n  return allowedMoves[Math.floor(Math.random() * allowedMoves.length)];\n};\n\nvar movesConflict = function (moveA, moveB) {\n  return moveA && moveB && moveA.split('').some(function (character) {\n    return moveB.includes(character);\n  });\n};\n\nvar getRandomScramble = function (movesNr) {\n  var moves = [];\n  var move;\n  var previousMove;\n\n  for (var i = 0; i < movesNr; i++) {\n    move = getRandomMove();\n\n    while (movesConflict(move, previousMove)) {\n      move = getRandomMove();\n    }\n\n    previousMove = move;\n    moves.push(move);\n  }\n\n  return moves.join(' ');\n};\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"collections\":{\"algorithms.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                            //\n// collections/algorithms.js                                                                                  //\n//                                                                                                            //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                              //\nmodule.export({\n  Algorithms: function () {\n    return Algorithms;\n  }\n});\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo: function (v) {\n    Mongo = v;\n  }\n}, 1);\nvar check;\nmodule.link(\"meteor/check\", {\n  check: function (v) {\n    check = v;\n  }\n}, 2);\nvar expect;\nmodule.link(\"chai\", {\n  expect: function (v) {\n    expect = v;\n  }\n}, 3);\nvar Algorithms = new Mongo.Collection('algorithms');\nMeteor.methods({\n  'algorithms.toggleActive': function (algId, active) {\n    check(active, Boolean);\n    check(algId, String);\n    Algorithms.update(algId, {\n      $set: {\n        active: active\n      }\n    });\n  },\n  'algorithms.activateAll': function (category) {\n    Algorithms.update({\n      category: category\n    }, {\n      $set: {\n        active: true\n      }\n    }, {\n      multi: true\n    });\n  },\n  'algorithms.deactivateAll': function (category) {\n    Algorithms.update({\n      category: category\n    }, {\n      $set: {\n        active: false\n      }\n    }, {\n      multi: true\n    });\n  },\n  'algorithms.insert': function (_ref) {\n    var category = _ref.category,\n        image = _ref.image,\n        scramble = _ref.scramble,\n        solution = _ref.solution,\n        subtype = _ref.subtype,\n        type = _ref.type;\n    expect(category).to.be.a('string');\n    expect(image).to.be.a('string');\n    expect(scramble).to.be.a('string');\n    expect(solution).to.be.a('string');\n    expect(subtype).to.be.a('string');\n    expect(type).to.be.a('string'); // Make sure the user is logged in before inserting a algorithm\n\n    /* if (! Meteor.userId()) {\n         throw new Meteor.Error('not-authorized');\n     }*/\n\n    var doc = {\n      createdAt: new Date(),\n      category: category,\n      image: image,\n      scramble: scramble,\n      solution: solution,\n      subtype: subtype,\n      type: type\n    };\n    Algorithms.insert(doc);\n  },\n  'algorithms.search': function (text) {\n    check(text, String);\n    return Algorithms.find();\n  },\n  'algorithms.remove': function (algorithmId) {\n    check(algorithmId, String);\n    /*const algorithm = Algorithms.findOne(algorithmId);\n    if (algorithm.private && algorithm.owner !== Meteor.userId()) {\n      // If the algorithm is private, make sure only the owner can delete it\n          throw new Meteor.Error('not-authorized');\n    }*/\n\n    Algorithms.remove(algorithmId);\n  }\n  /*,\n  'algorithms.setChecked'(algorithmId, setChecked) {\n      check(algorithmId, String);\n      check(setChecked, Boolean);\n       const algorithm = Algorithms.findOne(algorithmId);\n      if (algorithm.private && algorithm.owner !== Meteor.userId()) {\n            // If the algorithm is private, make sure only the owner can check it off\n                throw new Meteor.Error('not-authorized');\n          }\n       Algorithms.update(algorithmId, { $set: { checked: setChecked } });\n  },\n  'algorithms.setPrivate'(algorithmId, setToPrivate) {\n      check(algorithmId, String);\n      check(setToPrivate, Boolean);\n       const algorithm = Algorithms.findOne(algorithmId);\n       // Make sure only the algorithm owner can make a algorithm private\n      if (algorithm.owner !== Meteor.userId()) {\n          throw new Meteor.Error('not-authorized');\n      }\n       Algorithms.update(algorithmId, { $set: { private: setToPrivate } });\n  },*/\n\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"results.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                            //\n// collections/results.js                                                                                     //\n//                                                                                                            //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                              //\nmodule.export({\n  Results: function () {\n    return Results;\n  }\n});\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo: function (v) {\n    Mongo = v;\n  }\n}, 1);\nvar check;\nmodule.link(\"meteor/check\", {\n  check: function (v) {\n    check = v;\n  }\n}, 2);\nvar Results = new Mongo.Collection('results');\nMeteor.methods({\n  'results.insert': function (_ref) {\n    var algorithmId = _ref.algorithmId,\n        category = _ref.category,\n        real = _ref.real,\n        scramble = _ref.scramble,\n        time = _ref.time;\n    check(category, String);\n    check(real, Boolean);\n    check(time, Number);\n\n    if (category === 'OLL' || category === 'PLL' || category === '3x3x3') {\n      check(scramble, String);\n    }\n\n    if (category === 'OLL' || category === 'PLL') {\n      check(algorithmId, String);\n    } // Make sure the user is logged in before inserting a result\n\n    /* if (! Meteor.userId()) {\n     throw new Meteor.Error('not-authorized');\n     }*/\n\n\n    var doc = {\n      algorithmId: algorithmId,\n      category: category,\n      createdAt: new Date(),\n      real: real,\n      scramble: scramble,\n      time: time\n    };\n    Results.insert(doc);\n  },\n  'results.search': function (text) {\n    check(text, String);\n    return Results.find();\n  },\n  'results.remove': function (resultId) {\n    check(resultId, String);\n    /*const result = Results.findOne(resultId);\n     if (result.private && result.owner !== Meteor.userId()) {\n     // If the result is private, make sure only the owner can delete it\n     throw new Meteor.Error('not-authorized');\n     }*/\n\n    Results.remove(resultId);\n  }\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\",\n    \".html\",\n    \".ts\",\n    \".jsx\",\n    \".mjs\",\n    \".tsx\",\n    \".css\",\n    \".less\"\n  ]\n});\n\nrequire(\"/client/template.main.js\");\nrequire(\"/client/lib/composer.js\");\nrequire(\"/lib/global-helpers.js\");\nrequire(\"/client/utils.js\");\nrequire(\"/collections/algorithms.js\");\nrequire(\"/collections/results.js\");\nrequire(\"/client/main.js\");","hash":"ca7dc622a2de15c59bfd4a9f0f9d22b3e32f8c9c","servePath":"/app.js","sourceMap":{"version":3,"sources":["client/lib/composer.js","client/utils.js","client/main.js","lib/global-helpers.js","collections/algorithms.js","collections/results.js"],"names":["module","export","composer","React","link","v","setDefaults","Tracker","Loader","errorHandler","error","Meteor","isProduction","JSON","stringify","compose","loadingHandler","pure","getTrackerLoader","reactiveMapper","props","onData","env","trackerCleanup","handler","nonreactive","autorun","stop","options","getAverage","results","length","Math","round","reduce","sum","result","render","Container","startup","document","getElementById","getRandomScramble","allowedMoves","getRandomMove","floor","random","movesConflict","moveA","moveB","split","some","character","includes","movesNr","moves","move","previousMove","i","push","join","Algorithms","Mongo","check","expect","Collection","methods","algId","active","Boolean","String","update","$set","category","multi","image","scramble","solution","subtype","type","to","be","a","doc","createdAt","Date","insert","text","find","algorithmId","remove","Results","real","time","Number","resultId"],"mappings":"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","file":"/app.js","sourcesContent":["import React from 'react';\nimport { setDefaults } from 'react-komposer';\nimport { Tracker } from 'meteor/tracker';\n\nimport Loader from '../components/loader';\n\nconst errorHandler = error =>\n  Meteor.isProduction ? (\n    <span>An error occurred.</span>\n  ) : (\n    <code>{JSON.stringify(error, null, 2)}</code>\n  );\n\nconst compose = setDefaults({\n  errorHandler,\n  loadingHandler: Loader,\n  pure: true\n});\n\nconst getTrackerLoader = reactiveMapper => {\n  return (props, onData, env) => {\n    let trackerCleanup = null;\n    const handler = Tracker.nonreactive(() => {\n      return Tracker.autorun(() => {\n        // assign the custom clean-up function.\n        trackerCleanup = reactiveMapper(props, onData, env);\n      });\n    });\n\n    return () => {\n      if (typeof trackerCleanup === 'function') trackerCleanup();\n      return handler.stop();\n    };\n  };\n};\n\nexport const composer = (reactiveMapper, options) => {\n  return compose(\n    getTrackerLoader(reactiveMapper),\n    options\n  );\n};\n","export const getAverage = results => {\n  if (!results || results.length === 0) {\n    return 0;\n  }\n\n  return Math.round(\n    results.reduce((sum, result) => sum + result, 0) / results.length\n  );\n};\n","import React from 'react';\nimport { Meteor } from 'meteor/meteor';\nimport { render } from 'react-dom';\n\nimport Container from './components/container';\n\nimport 'rc-slider/assets/index.css';\nimport 'react-semantic-toasts/styles/react-semantic-alert.css';\n\nMeteor.startup(() => {\n  render(<Container />, document.getElementById('render-target'));\n});\n","const allowedMoves = [\n  'F',\n  \"F'\",\n  'F2',\n  'B',\n  \"B'\",\n  'B2',\n  'R',\n  \"R'\",\n  'R2',\n  'L',\n  \"L'\",\n  'L2',\n  'U',\n  \"U'\",\n  'U2',\n  'D',\n  \"D'\",\n  'D2'\n];\n\nconst getRandomMove = () =>\n  allowedMoves[Math.floor(Math.random() * allowedMoves.length)];\nconst movesConflict = (moveA, moveB) =>\n  moveA &&\n  moveB &&\n  moveA.split('').some(character => moveB.includes(character));\n\nexport const getRandomScramble = movesNr => {\n  const moves = [];\n\n  let move;\n  let previousMove;\n  for (let i = 0; i < movesNr; i++) {\n    move = getRandomMove();\n    while (movesConflict(move, previousMove)) {\n      move = getRandomMove();\n    }\n\n    previousMove = move;\n    moves.push(move);\n  }\n\n  return moves.join(' ');\n};\n","import { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\nimport { check } from 'meteor/check';\n\nimport { expect } from 'chai';\n\nexport const Algorithms = new Mongo.Collection('algorithms');\n\nMeteor.methods({\n  'algorithms.toggleActive': (algId, active) => {\n    check(active, Boolean);\n    check(algId, String);\n\n    Algorithms.update(algId, { $set: { active } });\n  },\n  'algorithms.activateAll': category => {\n    Algorithms.update(\n      { category },\n      { $set: { active: true } },\n      { multi: true }\n    );\n  },\n  'algorithms.deactivateAll': category => {\n    Algorithms.update(\n      { category },\n      { $set: { active: false } },\n      { multi: true }\n    );\n  },\n  'algorithms.insert': ({\n    category,\n    image,\n    scramble,\n    solution,\n    subtype,\n    type\n  }) => {\n    expect(category).to.be.a('string');\n    expect(image).to.be.a('string');\n    expect(scramble).to.be.a('string');\n    expect(solution).to.be.a('string');\n    expect(subtype).to.be.a('string');\n    expect(type).to.be.a('string');\n\n    // Make sure the user is logged in before inserting a algorithm\n    /* if (! Meteor.userId()) {\n         throw new Meteor.Error('not-authorized');\n     }*/\n\n    const doc = {\n      createdAt: new Date(),\n      category,\n      image,\n      scramble,\n      solution,\n      subtype,\n      type\n    };\n\n    Algorithms.insert(doc);\n  },\n  'algorithms.search'(text) {\n    check(text, String);\n\n    return Algorithms.find();\n  },\n  'algorithms.remove'(algorithmId) {\n    check(algorithmId, String);\n\n    /*const algorithm = Algorithms.findOne(algorithmId);\n    if (algorithm.private && algorithm.owner !== Meteor.userId()) {\n      // If the algorithm is private, make sure only the owner can delete it\n          throw new Meteor.Error('not-authorized');\n    }*/\n\n    Algorithms.remove(algorithmId);\n  } /*,\n    'algorithms.setChecked'(algorithmId, setChecked) {\n        check(algorithmId, String);\n        check(setChecked, Boolean);\n\n        const algorithm = Algorithms.findOne(algorithmId);\n        if (algorithm.private && algorithm.owner !== Meteor.userId()) {\n              // If the algorithm is private, make sure only the owner can check it off\n                  throw new Meteor.Error('not-authorized');\n            }\n\n        Algorithms.update(algorithmId, { $set: { checked: setChecked } });\n    },\n    'algorithms.setPrivate'(algorithmId, setToPrivate) {\n        check(algorithmId, String);\n        check(setToPrivate, Boolean);\n\n        const algorithm = Algorithms.findOne(algorithmId);\n\n        // Make sure only the algorithm owner can make a algorithm private\n        if (algorithm.owner !== Meteor.userId()) {\n            throw new Meteor.Error('not-authorized');\n        }\n\n        Algorithms.update(algorithmId, { $set: { private: setToPrivate } });\n    },*/\n});\n","import { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\nimport { check } from 'meteor/check';\n\nexport const Results = new Mongo.Collection('results');\n\nMeteor.methods({\n  'results.insert': ({ algorithmId, category, real, scramble, time }) => {\n    check(category, String);\n    check(real, Boolean);\n    check(time, Number);\n\n    if (category === 'OLL' || category === 'PLL' || category === '3x3x3') {\n      check(scramble, String);\n    }\n\n    if (category === 'OLL' || category === 'PLL') {\n      check(algorithmId, String);\n    }\n\n    // Make sure the user is logged in before inserting a result\n    /* if (! Meteor.userId()) {\n     throw new Meteor.Error('not-authorized');\n     }*/\n\n    const doc = {\n      algorithmId,\n      category,\n      createdAt: new Date(),\n      real,\n      scramble,\n      time\n    };\n\n    Results.insert(doc);\n  },\n  'results.search': text => {\n    check(text, String);\n\n    return Results.find();\n  },\n  'results.remove': resultId => {\n    check(resultId, String);\n\n    /*const result = Results.findOne(resultId);\n     if (result.private && result.owner !== Meteor.userId()) {\n     // If the result is private, make sure only the owner can delete it\n     throw new Meteor.Error('not-authorized');\n     }*/\n\n    Results.remove(resultId);\n  }\n});\n"]}}]