[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nTemplate = Package['templating-runtime'].Template;\nmeteorInstall = Package.modules.meteorInstall;\nmeteorBabelHelpers = Package.modules.meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\nHTML = Package.htmljs.HTML;\nSymbol = Package['ecmascript-runtime-client'].Symbol;\nMap = Package['ecmascript-runtime-client'].Map;\nSet = Package['ecmascript-runtime-client'].Set;\n\n","servePath":"/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"client\":{\"template.main.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                  //\n// client/template.main.js                                                                          //\n//                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                    //\n\nTemplate.body.addContent((function() {\n  var view = this;\n  return HTML.Raw('<div id=\"render-target\"></div>');\n}));\nMeteor.startup(Template.body.renderToDocument);\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"utils.js\":function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                  //\n// client/utils.js                                                                                  //\n//                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                    //\nmodule.export({\n  getAverage: function () {\n    return getAverage;\n  }\n});\n\nvar getAverage = function (results) {\n  if (!results || results.length === 0) {\n    return 0;\n  }\n\n  return Math.round(results.reduce(function (sum, result) {\n    return sum + result;\n  }, 0) / results.length);\n};\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"main.js\":function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                  //\n// client/main.js                                                                                   //\n//                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                    //\nvar React;\nmodule.link(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  }\n}, 0);\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 1);\nvar render;\nmodule.link(\"react-dom\", {\n  render: function (v) {\n    render = v;\n  }\n}, 2);\nvar Container;\nmodule.link(\"./components/container\", {\n  \"default\": function (v) {\n    Container = v;\n  }\n}, 3);\nmodule.link(\"rc-slider/assets/index.css\");\nmodule.link(\"react-semantic-toasts/styles/react-semantic-alert.css\");\nMeteor.startup(function () {\n  render(React.createElement(Container, null), document.getElementById('render-target'));\n});\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"lib\":{\"global-helpers.js\":function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                  //\n// lib/global-helpers.js                                                                            //\n//                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                    //\nmodule.export({\n  getRandomScramble: function () {\n    return getRandomScramble;\n  }\n});\nvar allowedMoves = ['F', \"F'\", 'F2', 'B', \"B'\", 'B2', 'R', \"R'\", 'R2', 'L', \"L'\", 'L2', 'U', \"U'\", 'U2', 'D', \"D'\", 'D2'];\n\nvar getRandomMove = function () {\n  return allowedMoves[Math.floor(Math.random() * allowedMoves.length)];\n};\n\nvar movesConflict = function (moveA, moveB) {\n  return moveA && moveB && moveA.split('').some(function (character) {\n    return moveB.includes(character);\n  });\n};\n\nvar getRandomScramble = function (movesNr) {\n  var moves = [];\n  var move;\n  var previousMove;\n\n  for (var i = 0; i < movesNr; i++) {\n    move = getRandomMove();\n\n    while (movesConflict(move, previousMove)) {\n      move = getRandomMove();\n    }\n\n    previousMove = move;\n    moves.push(move);\n  }\n\n  return moves.join(' ');\n};\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"collections\":{\"algorithms.js\":function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                  //\n// collections/algorithms.js                                                                        //\n//                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                    //\nmodule.export({\n  Algorithms: function () {\n    return Algorithms;\n  }\n});\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo: function (v) {\n    Mongo = v;\n  }\n}, 1);\nvar check;\nmodule.link(\"meteor/check\", {\n  check: function (v) {\n    check = v;\n  }\n}, 2);\nvar expect;\nmodule.link(\"chai\", {\n  expect: function (v) {\n    expect = v;\n  }\n}, 3);\nvar Algorithms = new Mongo.Collection('algorithms');\nMeteor.methods({\n  'algorithms.toggleActive': function (algId, active) {\n    check(active, Boolean);\n    check(algId, String);\n    Algorithms.update(algId, {\n      $set: {\n        active: active\n      }\n    });\n  },\n  'algorithms.activateAll': function (category) {\n    Algorithms.update({\n      category: category\n    }, {\n      $set: {\n        active: true\n      }\n    }, {\n      multi: true\n    });\n  },\n  'algorithms.deactivateAll': function (category) {\n    Algorithms.update({\n      category: category\n    }, {\n      $set: {\n        active: false\n      }\n    }, {\n      multi: true\n    });\n  },\n  'algorithms.insert': function (_ref) {\n    var category = _ref.category,\n        image = _ref.image,\n        scramble = _ref.scramble,\n        solution = _ref.solution,\n        subtype = _ref.subtype,\n        type = _ref.type;\n    expect(category).to.be.a('string');\n    expect(image).to.be.a('string');\n    expect(scramble).to.be.a('string');\n    expect(solution).to.be.a('string');\n    expect(subtype).to.be.a('string');\n    expect(type).to.be.a('string'); // Make sure the user is logged in before inserting a algorithm\n\n    /* if (! Meteor.userId()) {\n         throw new Meteor.Error('not-authorized');\n     }*/\n\n    var doc = {\n      createdAt: new Date(),\n      category: category,\n      image: image,\n      scramble: scramble,\n      solution: solution,\n      subtype: subtype,\n      type: type\n    };\n    Algorithms.insert(doc);\n  },\n  'algorithms.search': function (text) {\n    check(text, String);\n    return Algorithms.find();\n  },\n  'algorithms.remove': function (algorithmId) {\n    check(algorithmId, String);\n    /*const algorithm = Algorithms.findOne(algorithmId);\n    if (algorithm.private && algorithm.owner !== Meteor.userId()) {\n      // If the algorithm is private, make sure only the owner can delete it\n          throw new Meteor.Error('not-authorized');\n    }*/\n\n    Algorithms.remove(algorithmId);\n  }\n  /*,\n  'algorithms.setChecked'(algorithmId, setChecked) {\n      check(algorithmId, String);\n      check(setChecked, Boolean);\n       const algorithm = Algorithms.findOne(algorithmId);\n      if (algorithm.private && algorithm.owner !== Meteor.userId()) {\n            // If the algorithm is private, make sure only the owner can check it off\n                throw new Meteor.Error('not-authorized');\n          }\n       Algorithms.update(algorithmId, { $set: { checked: setChecked } });\n  },\n  'algorithms.setPrivate'(algorithmId, setToPrivate) {\n      check(algorithmId, String);\n      check(setToPrivate, Boolean);\n       const algorithm = Algorithms.findOne(algorithmId);\n       // Make sure only the algorithm owner can make a algorithm private\n      if (algorithm.owner !== Meteor.userId()) {\n          throw new Meteor.Error('not-authorized');\n      }\n       Algorithms.update(algorithmId, { $set: { private: setToPrivate } });\n  },*/\n\n});\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"results.js\":function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                  //\n// collections/results.js                                                                           //\n//                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                    //\nmodule.export({\n  Results: function () {\n    return Results;\n  }\n});\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo: function (v) {\n    Mongo = v;\n  }\n}, 1);\nvar check;\nmodule.link(\"meteor/check\", {\n  check: function (v) {\n    check = v;\n  }\n}, 2);\nvar Results = new Mongo.Collection('results');\nMeteor.methods({\n  'results.insert': function (_ref) {\n    var algorithmId = _ref.algorithmId,\n        category = _ref.category,\n        real = _ref.real,\n        scramble = _ref.scramble,\n        time = _ref.time;\n    check(category, String);\n    check(real, Boolean);\n    check(time, Number);\n\n    if (category === 'OLL' || category === 'PLL' || category === '3x3x3') {\n      check(scramble, String);\n    }\n\n    if (category === 'OLL' || category === 'PLL') {\n      check(algorithmId, String);\n    } // Make sure the user is logged in before inserting a result\n\n    /* if (! Meteor.userId()) {\n     throw new Meteor.Error('not-authorized');\n     }*/\n\n\n    var doc = {\n      algorithmId: algorithmId,\n      category: category,\n      createdAt: new Date(),\n      real: real,\n      scramble: scramble,\n      time: time\n    };\n    Results.insert(doc);\n  },\n  'results.search': function (text) {\n    check(text, String);\n    return Results.find();\n  },\n  'results.remove': function (resultId) {\n    check(resultId, String);\n    /*const result = Results.findOne(resultId);\n     if (result.private && result.owner !== Meteor.userId()) {\n     // If the result is private, make sure only the owner can delete it\n     throw new Meteor.Error('not-authorized');\n     }*/\n\n    Results.remove(resultId);\n  }\n});\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\",\n    \".html\",\n    \".ts\",\n    \".jsx\",\n    \".mjs\",\n    \".tsx\",\n    \".css\",\n    \".less\"\n  ]\n});\n\nrequire(\"/client/template.main.js\");\nrequire(\"/lib/global-helpers.js\");\nrequire(\"/client/utils.js\");\nrequire(\"/collections/algorithms.js\");\nrequire(\"/collections/results.js\");\nrequire(\"/client/main.js\");","hash":"666a2a5f688e53ec9384e2b60a82131bb069ea8d","servePath":"/app.js","sourceMap":{"version":3,"sources":["client/utils.js","client/main.js","lib/global-helpers.js","collections/algorithms.js","collections/results.js"],"names":["module","export","getAverage","results","length","Math","round","reduce","sum","result","React","link","v","Meteor","render","Container","startup","document","getElementById","getRandomScramble","allowedMoves","getRandomMove","floor","random","movesConflict","moveA","moveB","split","some","character","includes","movesNr","moves","move","previousMove","i","push","join","Algorithms","Mongo","check","expect","Collection","methods","algId","active","Boolean","String","update","$set","category","multi","image","scramble","solution","subtype","type","to","be","a","doc","createdAt","Date","insert","text","find","algorithmId","remove","Results","real","time","Number","resultId"],"mappings":"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","file":"/app.js","sourcesContent":["export const getAverage = results => {\n  if (!results || results.length === 0) {\n    return 0;\n  }\n\n  return Math.round(\n    results.reduce((sum, result) => sum + result, 0) / results.length\n  );\n};\n","import React from 'react';\nimport { Meteor } from 'meteor/meteor';\nimport { render } from 'react-dom';\n\nimport Container from './components/container';\n\nimport 'rc-slider/assets/index.css';\nimport 'react-semantic-toasts/styles/react-semantic-alert.css';\n\nMeteor.startup(() => {\n  render(<Container />, document.getElementById('render-target'));\n});\n","const allowedMoves = [\n  'F',\n  \"F'\",\n  'F2',\n  'B',\n  \"B'\",\n  'B2',\n  'R',\n  \"R'\",\n  'R2',\n  'L',\n  \"L'\",\n  'L2',\n  'U',\n  \"U'\",\n  'U2',\n  'D',\n  \"D'\",\n  'D2'\n];\n\nconst getRandomMove = () =>\n  allowedMoves[Math.floor(Math.random() * allowedMoves.length)];\nconst movesConflict = (moveA, moveB) =>\n  moveA &&\n  moveB &&\n  moveA.split('').some(character => moveB.includes(character));\n\nexport const getRandomScramble = movesNr => {\n  const moves = [];\n\n  let move;\n  let previousMove;\n  for (let i = 0; i < movesNr; i++) {\n    move = getRandomMove();\n    while (movesConflict(move, previousMove)) {\n      move = getRandomMove();\n    }\n\n    previousMove = move;\n    moves.push(move);\n  }\n\n  return moves.join(' ');\n};\n","import { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\nimport { check } from 'meteor/check';\n\nimport { expect } from 'chai';\n\nexport const Algorithms = new Mongo.Collection('algorithms');\n\nMeteor.methods({\n  'algorithms.toggleActive': (algId, active) => {\n    check(active, Boolean);\n    check(algId, String);\n\n    Algorithms.update(algId, { $set: { active } });\n  },\n  'algorithms.activateAll': category => {\n    Algorithms.update(\n      { category },\n      { $set: { active: true } },\n      { multi: true }\n    );\n  },\n  'algorithms.deactivateAll': category => {\n    Algorithms.update(\n      { category },\n      { $set: { active: false } },\n      { multi: true }\n    );\n  },\n  'algorithms.insert': ({\n    category,\n    image,\n    scramble,\n    solution,\n    subtype,\n    type\n  }) => {\n    expect(category).to.be.a('string');\n    expect(image).to.be.a('string');\n    expect(scramble).to.be.a('string');\n    expect(solution).to.be.a('string');\n    expect(subtype).to.be.a('string');\n    expect(type).to.be.a('string');\n\n    // Make sure the user is logged in before inserting a algorithm\n    /* if (! Meteor.userId()) {\n         throw new Meteor.Error('not-authorized');\n     }*/\n\n    const doc = {\n      createdAt: new Date(),\n      category,\n      image,\n      scramble,\n      solution,\n      subtype,\n      type\n    };\n\n    Algorithms.insert(doc);\n  },\n  'algorithms.search'(text) {\n    check(text, String);\n\n    return Algorithms.find();\n  },\n  'algorithms.remove'(algorithmId) {\n    check(algorithmId, String);\n\n    /*const algorithm = Algorithms.findOne(algorithmId);\n    if (algorithm.private && algorithm.owner !== Meteor.userId()) {\n      // If the algorithm is private, make sure only the owner can delete it\n          throw new Meteor.Error('not-authorized');\n    }*/\n\n    Algorithms.remove(algorithmId);\n  } /*,\n    'algorithms.setChecked'(algorithmId, setChecked) {\n        check(algorithmId, String);\n        check(setChecked, Boolean);\n\n        const algorithm = Algorithms.findOne(algorithmId);\n        if (algorithm.private && algorithm.owner !== Meteor.userId()) {\n              // If the algorithm is private, make sure only the owner can check it off\n                  throw new Meteor.Error('not-authorized');\n            }\n\n        Algorithms.update(algorithmId, { $set: { checked: setChecked } });\n    },\n    'algorithms.setPrivate'(algorithmId, setToPrivate) {\n        check(algorithmId, String);\n        check(setToPrivate, Boolean);\n\n        const algorithm = Algorithms.findOne(algorithmId);\n\n        // Make sure only the algorithm owner can make a algorithm private\n        if (algorithm.owner !== Meteor.userId()) {\n            throw new Meteor.Error('not-authorized');\n        }\n\n        Algorithms.update(algorithmId, { $set: { private: setToPrivate } });\n    },*/\n});\n","import { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\nimport { check } from 'meteor/check';\n\nexport const Results = new Mongo.Collection('results');\n\nMeteor.methods({\n  'results.insert': ({ algorithmId, category, real, scramble, time }) => {\n    check(category, String);\n    check(real, Boolean);\n    check(time, Number);\n\n    if (category === 'OLL' || category === 'PLL' || category === '3x3x3') {\n      check(scramble, String);\n    }\n\n    if (category === 'OLL' || category === 'PLL') {\n      check(algorithmId, String);\n    }\n\n    // Make sure the user is logged in before inserting a result\n    /* if (! Meteor.userId()) {\n     throw new Meteor.Error('not-authorized');\n     }*/\n\n    const doc = {\n      algorithmId,\n      category,\n      createdAt: new Date(),\n      real,\n      scramble,\n      time\n    };\n\n    Results.insert(doc);\n  },\n  'results.search': text => {\n    check(text, String);\n\n    return Results.find();\n  },\n  'results.remove': resultId => {\n    check(resultId, String);\n\n    /*const result = Results.findOne(resultId);\n     if (result.private && result.owner !== Meteor.userId()) {\n     // If the result is private, make sure only the owner can delete it\n     throw new Meteor.Error('not-authorized');\n     }*/\n\n    Results.remove(resultId);\n  }\n});\n"]}}]