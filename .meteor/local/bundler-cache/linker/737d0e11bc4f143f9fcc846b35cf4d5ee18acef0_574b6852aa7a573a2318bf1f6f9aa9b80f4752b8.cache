[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nTemplate = Package['templating-runtime'].Template;\nmeteorInstall = Package.modules.meteorInstall;\nPromise = Package.promise.Promise;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"client\":{\"template.main.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// client/template.main.js                                                                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n\nTemplate.body.addContent((function() {\n  var view = this;\n  return HTML.Raw('<div id=\"render-target\"></div>');\n}));\nMeteor.startup(Template.body.renderToDocument);\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"imports\":{\"lib\":{\"composer.tsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// client/imports/lib/composer.tsx                                                                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  composer: () => composer\n});\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet setDefaults;\nmodule.link(\"react-komposer\", {\n  setDefaults(v) {\n    setDefaults = v;\n  }\n\n}, 1);\nlet Tracker;\nmodule.link(\"meteor/tracker\", {\n  Tracker(v) {\n    Tracker = v;\n  }\n\n}, 2);\nlet Loader;\nmodule.link(\"../components/loader\", {\n  default(v) {\n    Loader = v;\n  }\n\n}, 3);\n\nconst errorHandler = error => Meteor.isProduction ? React.createElement(\"span\", null, \"An error occurred.\") : React.createElement(\"code\", null, JSON.stringify(error, null, 2));\n\nconst compose = setDefaults({\n  errorHandler,\n  loadingHandler: Loader,\n  pure: true\n});\n\nconst getTrackerLoader = reactiveMapper => {\n  return (props, onData, env) => {\n    let trackerCleanup = null;\n    const handler = Tracker.nonreactive(() => {\n      return Tracker.autorun(() => {\n        // assign the custom clean-up function.\n        trackerCleanup = reactiveMapper(props, onData, env);\n      });\n    });\n    return () => {\n      if (typeof trackerCleanup === 'function') trackerCleanup();\n      return handler.stop();\n    };\n  };\n};\n\nconst composer = (reactiveMapper, options) => {\n  return compose(getTrackerLoader(reactiveMapper), options);\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"components\":{\"results\":{\"index.ts\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// client/imports/components/results/index.ts                                                                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Results;\nmodule.link(\"/collections/results\", {\n  Results(v) {\n    Results = v;\n  }\n\n}, 1);\nlet composer;\nmodule.link(\"../../lib/composer\", {\n  composer(v) {\n    composer = v;\n  }\n\n}, 2);\nlet ResultsComponent;\nmodule.link(\"./results\", {\n  default(v) {\n    ResultsComponent = v;\n  }\n\n}, 3);\n\n// @ts-ignore\nconst compose = (props, onData) => {\n  const subscriptions = [Meteor.subscribe('results')];\n\n  if (subscriptions.every(subscription => subscription.ready())) {\n    const results = Results.find({}).fetch();\n    onData(null, {\n      results\n    });\n  }\n};\n\nmodule.exportDefault(composer(compose)(ResultsComponent));\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"results.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// client/imports/components/results/results.js                                                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet React, Component;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n\n  Component(v) {\n    Component = v;\n  }\n\n}, 0);\nlet Table;\nmodule.link(\"semantic-ui-react\", {\n  Table(v) {\n    Table = v;\n  }\n\n}, 1);\nlet moment;\nmodule.link(\"moment\", {\n  default(v) {\n    moment = v;\n  }\n\n}, 2);\nconst columns = [{\n  label: 'Date',\n  value: 'createdAt',\n  format: value => moment(value).format('DD-MM-YYYY HH:ss')\n}, {\n  label: 'Category',\n  value: 'category'\n}, {\n  label: 'Scramble',\n  value: 'scramble'\n}, {\n  label: 'Time',\n  value: 'time',\n  format: value => (value / 1000).toLocaleString('en-US', {\n    minimumFractionDigits: 3,\n    maximumFractionDigits: 3\n  }) + 's'\n}];\n\nclass ResultsTab extends Component {\n  constructor(args) {\n    super(args);\n\n    this.renderHeader = () => React.createElement(Table.Row, null, columns.map((_ref, index) => {\n      let {\n        label\n      } = _ref;\n      return React.createElement(Table.HeaderCell, {\n        key: index\n      }, label);\n    }));\n\n    this.renderRow = row => React.createElement(Table.Row, null, columns.map((_ref2, index) => {\n      let {\n        value,\n        format = value => value\n      } = _ref2;\n      return React.createElement(Table.Cell, {\n        key: index\n      }, format(row[value]));\n    }));\n  }\n\n  render() {\n    const {\n      results\n    } = this.props;\n    return React.createElement(Table, {\n      inverted: true,\n      headerRow: this.renderHeader,\n      tableData: results,\n      renderBodyRow: this.renderRow\n    });\n  }\n\n}\n\nmodule.exportDefault(ResultsTab);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"training\":{\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// client/imports/components/training/index.js                                                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Algorithms;\nmodule.link(\"../../../../collections/algorithms\", {\n  Algorithms(v) {\n    Algorithms = v;\n  }\n\n}, 1);\nlet Results;\nmodule.link(\"../../../../collections/results\", {\n  Results(v) {\n    Results = v;\n  }\n\n}, 2);\nlet composer;\nmodule.link(\"../../lib/composer\", {\n  composer(v) {\n    composer = v;\n  }\n\n}, 3);\nlet Training;\nmodule.link(\"./training\", {\n  default(v) {\n    Training = v;\n  }\n\n}, 4);\n// TODO to be moved\nconst categories = [{\n  label: 'OLL',\n  value: 'OLL',\n  randomizableAlgorithm: true\n}, {\n  label: 'PLL',\n  value: 'PLL',\n  randomizableAlgorithm: true\n}, {\n  label: '3x3x3',\n  value: '3x3x3',\n  randomizableScramble: true\n}, {\n  label: 'OLL Attack',\n  value: 'OLL-attack',\n  algorithmsCategory: 'OLL',\n  settingsDisabled: true\n}, {\n  label: 'PLL Attack',\n  value: 'PLL-attack',\n  algorithmsCategory: 'PLL',\n  settingsDisabled: true\n}];\n\nconst compose = (props, onData) => {\n  const subscriptions = [Meteor.subscribe('algorithms'), Meteor.subscribe('results')];\n\n  if (subscriptions.every(subscription => subscription.ready())) {\n    const algorithms = Algorithms.find({}).fetch();\n    const results = Results.find({}).fetch();\n    results.forEach(result => {\n      const algorithm = algorithms.find(alg => alg._id === result.algorithmId);\n      const category = categories.find(cat => cat.value === result.category);\n\n      if (algorithm) {\n        algorithm.results = (algorithm.results || []).concat(result.time);\n      }\n\n      if (category) {\n        category.results = (category.results || []).concat(result.time);\n      }\n    });\n    onData(null, {\n      algorithms,\n      categories\n    });\n  }\n};\n\nmodule.exportDefault(composer(compose)(Training));\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"training.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// client/imports/components/training/training.js                                                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\nlet React, Component;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n\n  Component(v) {\n    Component = v;\n  }\n\n}, 0);\nlet moment;\nmodule.link(\"moment\", {\n  default(v) {\n    moment = v;\n  }\n\n}, 1);\nlet Grid, Menu;\nmodule.link(\"semantic-ui-react\", {\n  Grid(v) {\n    Grid = v;\n  },\n\n  Menu(v) {\n    Menu = v;\n  }\n\n}, 2);\nlet SemanticToastContainer, toast;\nmodule.link(\"react-semantic-toasts\", {\n  SemanticToastContainer(v) {\n    SemanticToastContainer = v;\n  },\n\n  toast(v) {\n    toast = v;\n  }\n\n}, 3);\nlet AlgSettings;\nmodule.link(\"../algSettings\", {\n  default(v) {\n    AlgSettings = v;\n  }\n\n}, 4);\nlet Averages;\nmodule.link(\"../averages\", {\n  default(v) {\n    Averages = v;\n  }\n\n}, 5);\nlet TipsAndTricks;\nmodule.link(\"../tipsAndTricks\", {\n  default(v) {\n    TipsAndTricks = v;\n  }\n\n}, 6);\nlet TrainingMain;\nmodule.link(\"../trainingMain\", {\n  default(v) {\n    TrainingMain = v;\n  }\n\n}, 7);\nlet getRandomScramble;\nmodule.link(\"/lib/global-helpers\", {\n  getRandomScramble(v) {\n    getRandomScramble = v;\n  }\n\n}, 8);\n\n// TODO to be moved\nconst getRandomEntry = (array, excludeId) => {\n  const index = Math.floor(Math.random() * array.length);\n  const entry = array[index];\n\n  if (array.length > 1 && excludeId && entry._id === excludeId) {\n    return getRandomEntry(array, excludeId);\n  }\n\n  return entry;\n}; // TODO to be moved\n\n\nconst toastNoActiveAlgorithms = () => toast({\n  title: 'No active algorithms',\n  type: 'warning',\n  description: 'Randomizing algorithms pauzed until you select at least one algorithm',\n  time: 5000\n});\n\nclass Training extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeAlgorithm = () => {\n      const {\n        algorithms\n      } = this.props;\n      const {\n        currentAlgorithmId,\n        currentCategory\n      } = this.state;\n      this.onReset();\n      let newAlgorithm;\n\n      if (currentCategory.randomizableAlgorithm) {\n        const activeAlgorithms = algorithms.filter(algorithm => !!algorithm.active && algorithm.category === currentCategory.value);\n\n        if (!activeAlgorithms.length) {\n          toastNoActiveAlgorithms();\n        }\n\n        newAlgorithm = getRandomEntry(activeAlgorithms, currentAlgorithmId);\n      } else if (currentCategory.randomizableScramble) {\n        const scramble = getRandomScramble(25);\n        newAlgorithm = {\n          category: currentCategory.value,\n          scramble\n        };\n      }\n\n      this.setState({\n        currentAlgorithm: newAlgorithm,\n        currentAlgorithmId: newAlgorithm && newAlgorithm._id // alg may be undefined, e.g. for {OLL,PLL}-Attack\n\n      });\n    };\n\n    this.onChangeCategory = category => {\n      this.setState({\n        currentCategory: category\n      }, () => {\n        this.onChangeAlgorithm();\n      });\n    };\n\n    this.onToggleActive = algorithm => {\n      Meteor.call('algorithms.toggleActive', algorithm._id, !algorithm.active);\n    };\n\n    this.onActivateAll = () => {\n      const {\n        currentCategory\n      } = this.state;\n      Meteor.call('algorithms.activateAll', currentCategory.value);\n    };\n\n    this.onDeactivateAll = () => {\n      Meteor.call('algorithms.deactivateAll');\n      toastNoActiveAlgorithms();\n    };\n\n    this.onKeyDown = event => {\n      const blocked = this.state.blocked;\n\n      if ((event.key === 'Enter' || event.key === ' ') && !blocked.space) {\n        event.preventDefault();\n        this.onGoToNextStatus('down');\n        this.setState({\n          blocked: _objectSpread({}, blocked, {\n            space: true\n          })\n        });\n      } else if (event.key === 'r') {\n        event.preventDefault();\n        this.onChangeAlgorithm();\n      } else if (event.key === 'Shift' && !blocked.shift) {\n        event.preventDefault();\n        this.setState({\n          blocked: _objectSpread({}, blocked, {\n            shift: true\n          }),\n          isVisibleSolution: true\n        });\n      } else if (event.key === 'Control' && !blocked.control) {\n        event.preventDefault();\n        this.setState({\n          blocked: _objectSpread({}, blocked, {\n            control: true\n          })\n        });\n      } else if ((event.key === 'Backspace' || event.key === 'Delete' || event.key === 'Escape') && !blocked.delete) {\n        event.preventDefault();\n        this.setState({\n          blocked: _objectSpread({}, blocked, {\n            delete: true\n          })\n        });\n      }\n    };\n\n    this.onKeyPress = event => {\n      if (event.key === ' ') {\n        event.preventDefault();\n      }\n    };\n\n    this.onKeyUp = event => {\n      const {\n        blocked,\n        isVisibleSolution\n      } = this.state;\n\n      if (event.key === 'Enter' || event.key === ' ') {\n        this.onGoToNextStatus('up');\n        this.setState({\n          blocked: _objectSpread({}, blocked, {\n            space: false\n          })\n        });\n      } else if (event.key === 'Shift') {\n        this.setState({\n          blocked: _objectSpread({}, blocked, {\n            shift: false\n          }),\n          isVisibleSolution: false\n        });\n      } else if (event.key === 'Control') {\n        this.setState({\n          blocked: _objectSpread({}, blocked, {\n            control: false\n          }),\n          isVisibleSolution: !isVisibleSolution\n        });\n      } else if (event.key === 'Backspace' || event.key === 'Delete' || event.key === 'Escape') {\n        this.onChangeAlgorithm();\n        this.setState({\n          blocked: _objectSpread({}, blocked, {\n            delete: false\n          })\n        });\n      }\n    };\n\n    this.onGoToNextStatus = upOrDown => {\n      const {\n        blocked,\n        currentAlgorithm,\n        currentCategory,\n        timerCurrentValue,\n        timerStatus\n      } = this.state;\n\n      if (timerStatus === 'resetted' && upOrDown === 'down' && !blocked.space) {\n        this.setState({\n          timerStatus: 'pre-inspection'\n        });\n      } else if (timerStatus === 'pre-inspection' && upOrDown === 'up') {\n        this.setState({\n          timerStatus: 'timer-on',\n          timerStartValue: moment().valueOf()\n        });\n        this.timer = setInterval(this.updateTimerTime, 1);\n      } else if (timerStatus === 'timer-on' && upOrDown === 'down' && !blocked.space) {\n        clearInterval(this.timer);\n        this.setState({\n          timerStatus: 'timer-off'\n        });\n      } else if (timerStatus === 'timer-off' && upOrDown === 'down' && !blocked.space) {\n        /* Save the time */\n        const result = _objectSpread({}, currentAlgorithm && {\n          algorithmId: currentAlgorithm._id,\n          scramble: currentAlgorithm.scramble\n        }, {\n          category: currentCategory.value,\n          time: timerCurrentValue\n        });\n\n        Meteor.call('results.insert', result, () => this.onChangeAlgorithm());\n      }\n    };\n\n    this.onReset = () => {\n      clearInterval(this.timer);\n      this.setState({\n        timerStatus: 'resetted',\n        timerCurrentValue: 0\n      });\n    };\n\n    this.updateTimerTime = () => {\n      this.setState(state => ({\n        timerCurrentValue: moment().valueOf() - state.timerStartValue\n      }));\n    };\n\n    this.state = {\n      blocked: {\n        control: false,\n        delete: false,\n        shift: false,\n        space: false\n      },\n      currentAlgorithm: {\n        category: '',\n        image: '',\n        scramble: '',\n        solution: '',\n        subtype: '',\n        type: ''\n      },\n      currentAlgorithmId: 0,\n      currentCategory: this.props.categories[0],\n      isVisibleSolution: false,\n      settingsOpened: true,\n      timerCurrentValue: 0,\n      timerStartValue: 0,\n      timerStatus: 'resetted'\n    };\n  }\n\n  componentDidMount() {\n    this.onChangeAlgorithm();\n    console.log('did mount');\n    document.body.addEventListener('keydown', this.onKeyDown);\n    document.body.addEventListener('keypress', this.onKeyPress);\n    document.body.addEventListener('keyup', this.onKeyUp);\n  }\n\n  componentWillUnmount() {\n    document.body.removeEventListener('keydown', this.onKeyDown);\n    document.body.removeEventListener('keypress', this.onKeyPress);\n    document.body.removeEventListener('keyup', this.onKeyUp);\n  }\n\n  render() {\n    const {\n      state: {\n        currentAlgorithm,\n        currentCategory,\n        isVisibleSolution,\n        timerCurrentValue\n      },\n      props: {\n        algorithms,\n        categories\n      },\n      onActivateAll,\n      onToggleActive,\n      onChangeAlgorithm,\n      onChangeCategory,\n      onDeactivateAll\n    } = this;\n    const currentAlgorithms = algorithms.filter(algorithm => algorithm.category === currentCategory.value);\n    return React.createElement(React.Fragment, null, React.createElement(SemanticToastContainer, null), React.createElement(Grid, null, React.createElement(Grid.Column, {\n      width: 4\n    }, React.createElement(Menu, {\n      className: \"left-menu\",\n      inverted: true,\n      tabular: true,\n      vertical: true\n    }, categories.map(category => React.createElement(Menu.Item, {\n      key: category.value,\n      name: category.label,\n      active: currentCategory.value === category.value,\n      onClick: () => onChangeCategory(category)\n    })))), React.createElement(Grid.Column, {\n      width: 8,\n      textAlign: \"center\"\n    }, React.createElement(TrainingMain, {\n      currentAlgorithm: currentAlgorithm,\n      isVisibleSolution: isVisibleSolution,\n      onChangeAlgorithm: onChangeAlgorithm,\n      timerCurrentValue: timerCurrentValue\n    })), React.createElement(Grid.Column, {\n      width: 4\n    }, React.createElement(Averages, {\n      currentAlgorithm: currentAlgorithm,\n      currentCategory: currentCategory\n    }), React.createElement(TipsAndTricks, null))), this.state.settingsOpened && React.createElement(AlgSettings, {\n      algorithms: currentAlgorithms,\n      currentCategory: currentCategory,\n      onActivateAll: onActivateAll,\n      onToggleActive: onToggleActive,\n      onDeactivateAll: onDeactivateAll\n    }));\n  }\n\n}\n\nmodule.exportDefault(Training);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"about.tsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// client/imports/components/about.tsx                                                                                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\n\nconst About = () => React.createElement(\"div\", null, \"About\");\n\nmodule.exportDefault(About);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"algSettings.tsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// client/imports/components/algSettings.tsx                                                                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet React, useState;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n\n  useState(v) {\n    useState = v;\n  }\n\n}, 0);\nlet Button, List, Segment;\nmodule.link(\"semantic-ui-react\", {\n  Button(v) {\n    Button = v;\n  },\n\n  List(v) {\n    List = v;\n  },\n\n  Segment(v) {\n    Segment = v;\n  }\n\n}, 1);\nlet groupBy;\nmodule.link(\"lodash/groupBy\", {\n  default(v) {\n    groupBy = v;\n  }\n\n}, 2);\nlet Slider, createSliderWithTooltip;\nmodule.link(\"rc-slider\", {\n  default(v) {\n    Slider = v;\n  },\n\n  createSliderWithTooltip(v) {\n    createSliderWithTooltip = v;\n  }\n\n}, 3);\nlet getAverage;\nmodule.link(\"../../utils\", {\n  getAverage(v) {\n    getAverage = v;\n  }\n\n}, 4);\nconst SliderTooltip = createSliderWithTooltip(Slider);\n\nconst AlgSettings = (_ref) => {\n  let {\n    algorithms,\n    currentCategory: {\n      settingsDisabled\n    },\n    onActivateAll,\n    onToggleActive,\n    onDeactivateAll\n  } = _ref;\n  const [detailsLevel, setDetailsLevel] = useState(1);\n  const algorithmsGrouped = detailsLevel === 0 ? groupBy(algorithms, 'category') : detailsLevel === 1 ? groupBy(algorithms, 'type') : detailsLevel === 2 ? groupBy(algorithms, 'subtype') : [];\n  return React.createElement(\"section\", {\n    className: \"algorithm-settings\".concat(settingsDisabled ? ' disabled' : '')\n  }, React.createElement(List, {\n    divided: true,\n    verticalAlign: \"middle\"\n  }, React.createElement(List.Item, null, React.createElement(List.Content, {\n    floated: \"right\"\n  }, React.createElement(\"div\", {\n    className: \"grouping-level\"\n  }, React.createElement(\"div\", {\n    className: \"title\"\n  }, \"Grouping level\"), React.createElement(SliderTooltip, {\n    min: 0,\n    max: 2,\n    onChange: setDetailsLevel,\n    tipFormatter: value => ['None', 'General', 'Precise'][value],\n    tipProps: {\n      placement: 'bottom',\n      visible: true\n    },\n    value: detailsLevel\n  }))), React.createElement(List.Content, null, !settingsDisabled && React.createElement(\"div\", {\n    className: \"controls\"\n  }, React.createElement(Button, {\n    secondary: true,\n    onClick: settingsDisabled ? undefined : onActivateAll\n  }, \"Select all\"), React.createElement(Button, {\n    secondary: true,\n    onClick: settingsDisabled ? undefined : onDeactivateAll\n  }, \"Unselect all\"))))), Object.entries(algorithmsGrouped).map((_ref2, index) => {\n    let [name, values] = _ref2;\n    return React.createElement(Segment, {\n      key: index\n    }, React.createElement(\"h5\", null, name), values.map(algorithm => React.createElement(\"div\", {\n      key: algorithm._id,\n      className: \"algorithm\".concat(settingsDisabled || algorithm.active ? ' active' : ''),\n      onClick: () => settingsDisabled ? null : onToggleActive(algorithm)\n    }, React.createElement(\"img\", {\n      alt: algorithm.name,\n      src: \"/images/\".concat(algorithm.image)\n    }), React.createElement(\"div\", {\n      className: \"results-average\"\n    }, getAverage(algorithm && algorithm.results)))));\n  }));\n};\n\nmodule.exportDefault(AlgSettings);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"averages.tsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// client/imports/components/averages.tsx                                                                              //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet List, Segment;\nmodule.link(\"semantic-ui-react\", {\n  List(v) {\n    List = v;\n  },\n\n  Segment(v) {\n    Segment = v;\n  }\n\n}, 1);\nlet moment;\nmodule.link(\"moment\", {\n  default(v) {\n    moment = v;\n  }\n\n}, 2);\nlet getAverage;\nmodule.link(\"../../utils\", {\n  getAverage(v) {\n    getAverage = v;\n  }\n\n}, 3);\n\nconst Averages = (_ref) => {\n  let {\n    currentAlgorithm,\n    currentCategory\n  } = _ref;\n  const currentAlgorithmAvg = getAverage(currentAlgorithm && currentAlgorithm.results);\n  const currentCategoryAvg = getAverage(currentCategory && currentCategory.results);\n  const averages = ['OLL', 'PLL'].includes(currentCategory.value) ? [{\n    header: 'Average for this algorithm',\n    description: currentAlgorithmAvg ? moment(currentAlgorithmAvg).format('ss:SSS') : 'No records'\n  }, {\n    header: \"Average for all \".concat(currentCategory.value, \" algorithms\"),\n    description: currentCategoryAvg ? moment(currentCategoryAvg).format('ss:SSS') : 'No records'\n  }] : [{\n    header: \"Average for all in \".concat(currentCategory.value),\n    description: currentCategoryAvg ? moment(currentCategoryAvg).format('mm:ss:SSS') : 'No records'\n  }];\n  return React.createElement(Segment, {\n    className: \"averages\"\n  }, React.createElement(List, {\n    inverted: true,\n    items: averages\n  }));\n};\n\nmodule.exportDefault(Averages);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"home.tsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// client/imports/components/home.tsx                                                                                  //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\n\nconst Home = () => React.createElement(\"div\", null, \"Home\");\n\nmodule.exportDefault(Home);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"loader.tsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// client/imports/components/loader.tsx                                                                                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet Dimmer, LoaderSemantic;\nmodule.link(\"semantic-ui-react\", {\n  Dimmer(v) {\n    Dimmer = v;\n  },\n\n  Loader(v) {\n    LoaderSemantic = v;\n  }\n\n}, 1);\n\nconst Loader = () => React.createElement(Dimmer, {\n  active: true,\n  page: true,\n  style: {\n    backgroundColor: 'rgba(0, 0, 0, 0.55)'\n  }\n}, React.createElement(LoaderSemantic, {\n  size: \"large\"\n}, \"Loading\"));\n\nmodule.exportDefault(Loader);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"menuTop.tsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// client/imports/components/menuTop.tsx                                                                               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet Icon, Menu;\nmodule.link(\"semantic-ui-react\", {\n  Icon(v) {\n    Icon = v;\n  },\n\n  Menu(v) {\n    Menu = v;\n  }\n\n}, 1);\nlet Link;\nmodule.link(\"@reach/router\", {\n  Link(v) {\n    Link = v;\n  }\n\n}, 2);\nlet capitalize;\nmodule.link(\"lodash/capitalize\", {\n  default(v) {\n    capitalize = v;\n  }\n\n}, 3);\nconst tabs = [{\n  name: 'home',\n  color: 'green',\n  icon: 'home'\n}, {\n  name: 'training',\n  color: 'blue',\n  icon: 'book'\n}, {\n  name: 'results',\n  color: 'orange',\n  icon: 'lightning'\n}, {\n  name: 'about',\n  color: 'teal',\n  icon: 'idea'\n}];\n\nconst MenuTop = (_ref) => {\n  let {\n    uri\n  } = _ref;\n  return React.createElement(Menu, {\n    inverted: true,\n    icon: \"labeled\"\n  }, tabs.map((_ref2) => {\n    let {\n      color,\n      icon,\n      name\n    } = _ref2;\n    return React.createElement(Link, {\n      key: name,\n      to: \"/\".concat(name)\n    }, React.createElement(Menu.Item, {\n      active: \"/\".concat(name) === uri,\n      color: color,\n      name: name\n    }, React.createElement(Icon, {\n      name: icon\n    }), capitalize(name)));\n  }));\n};\n\nmodule.exportDefault(MenuTop);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"router.tsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// client/imports/components/router.tsx                                                                                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet Segment;\nmodule.link(\"semantic-ui-react\", {\n  Segment(v) {\n    Segment = v;\n  }\n\n}, 1);\nlet Router;\nmodule.link(\"@reach/router\", {\n  Router(v) {\n    Router = v;\n  }\n\n}, 2);\nlet About;\nmodule.link(\"./about\", {\n  default(v) {\n    About = v;\n  }\n\n}, 3);\nlet Home;\nmodule.link(\"./home\", {\n  default(v) {\n    Home = v;\n  }\n\n}, 4);\nlet MenuTop;\nmodule.link(\"./menuTop\", {\n  default(v) {\n    MenuTop = v;\n  }\n\n}, 5);\nlet Results;\nmodule.link(\"./results\", {\n  default(v) {\n    Results = v;\n  }\n\n}, 6);\nlet Training;\nmodule.link(\"./training\", {\n  default(v) {\n    Training = v;\n  }\n\n}, 7);\n\nconst RouterComponent = () => React.createElement(\"div\", null, React.createElement(\"header\", null, React.createElement(Router, null, React.createElement(MenuTop, {\n  default: true\n}))), React.createElement(\"nav\", null, React.createElement(Segment, null, React.createElement(Router, null, React.createElement(Home, {\n  path: \"/home\"\n}), React.createElement(Training, {\n  path: \"/training\",\n  default: true\n}), React.createElement(Results, {\n  path: \"/results\"\n}), React.createElement(About, {\n  path: \"/about\"\n})))));\n\nmodule.exportDefault(RouterComponent);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"timer.tsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// client/imports/components/timer.tsx                                                                                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet moment;\nmodule.link(\"moment\", {\n  default(v) {\n    moment = v;\n  }\n\n}, 0);\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 1);\n\nconst Timer = (_ref) => {\n  let {\n    isVisibleSolution,\n    solution,\n    timerCurrentValue\n  } = _ref;\n  return React.createElement(\"div\", {\n    className: \"timer\"\n  }, React.createElement(\"p\", null, moment(timerCurrentValue).format('mm:ss:SSS')), isVisibleSolution && solution && React.createElement(\"p\", null, solution));\n};\n\nmodule.exportDefault(Timer);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"tipsAndTricks.tsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// client/imports/components/tipsAndTricks.tsx                                                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet List, Segment;\nmodule.link(\"semantic-ui-react\", {\n  List(v) {\n    List = v;\n  },\n\n  Segment(v) {\n    Segment = v;\n  }\n\n}, 1);\nconst tipsList = [{\n  header: 'Enter / Space',\n  description: '... -> start timer -> stop timer -> save result -> ...'\n}, {\n  header: 'r',\n  description: 'Randomize new algorithm'\n}, {\n  header: 'Shift (hold)',\n  description: 'Take a peek at the solution'\n}, {\n  header: 'Control',\n  description: 'Show / hide the solution'\n}, {\n  header: 'Backspace / Delete / Escape',\n  description: \"Reset timer - don't save the solution\"\n}].map(tip => _objectSpread({}, tip, {\n  icon: 'lightbulb outline'\n}));\n\nconst TipsAndTricks = () => React.createElement(Segment, null, \"Shortcuts list:\", React.createElement(List, {\n  celled: true,\n  inverted: true,\n  items: tipsList\n}));\n\nmodule.exportDefault(TipsAndTricks);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"trainingMain.tsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// client/imports/components/trainingMain.tsx                                                                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet Button, Segment;\nmodule.link(\"semantic-ui-react\", {\n  Button(v) {\n    Button = v;\n  },\n\n  Segment(v) {\n    Segment = v;\n  }\n\n}, 1);\nlet Timer;\nmodule.link(\"./timer\", {\n  default(v) {\n    Timer = v;\n  }\n\n}, 2);\n\nconst TrainingMain = (_ref) => {\n  let {\n    onChangeAlgorithm,\n    currentAlgorithm: {\n      image,\n      scramble,\n      solution\n    } = {\n      image: undefined,\n      scramble: undefined,\n      solution: undefined\n    },\n    isVisibleSolution,\n    timerCurrentValue\n  } = _ref;\n  return React.createElement(\"section\", {\n    className: \"training-main\"\n  }, scramble && React.createElement(Segment, {\n    className: \"scramble-segment\"\n  }, scramble), image && React.createElement(Segment, {\n    className: \"image-segment\"\n  }, React.createElement(\"img\", {\n    src: \"/images/\".concat(image)\n  })), React.createElement(Segment, {\n    className: \"timer-segment\"\n  }, React.createElement(Timer, {\n    isVisibleSolution: isVisibleSolution,\n    solution: solution,\n    timerCurrentValue: timerCurrentValue\n  })), (image || solution) && React.createElement(Segment, null, React.createElement(Button, {\n    primary: true,\n    onClick: () => onChangeAlgorithm()\n  }, \"Randomize new\")));\n};\n\nmodule.exportDefault(TrainingMain);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"utils.ts\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// client/utils.ts                                                                                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  getAverage: () => getAverage\n});\n\nconst getAverage = results => {\n  if (!results || results.length === 0) {\n    return 0;\n  }\n\n  return Math.round(results.reduce((sum, result) => sum + result, 0) / results.length);\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"main.tsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// client/main.tsx                                                                                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 1);\nlet render;\nmodule.link(\"react-dom\", {\n  render(v) {\n    render = v;\n  }\n\n}, 2);\nlet Router;\nmodule.link(\"./imports/components/router\", {\n  default(v) {\n    Router = v;\n  }\n\n}, 3);\nmodule.link(\"rc-slider/assets/index.css\");\nmodule.link(\"react-semantic-toasts/styles/react-semantic-alert.css\");\nMeteor.startup(() => {\n  render(React.createElement(Router, null), document.getElementById('render-target'));\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"lib\":{\"global-helpers.ts\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// lib/global-helpers.ts                                                                                               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  getRandomScramble: () => getRandomScramble\n});\nconst allowedMoves = ['F', \"F'\", 'F2', 'B', \"B'\", 'B2', 'R', \"R'\", 'R2', 'L', \"L'\", 'L2', 'U', \"U'\", 'U2', 'D', \"D'\", 'D2'];\n\nconst getRandomMove = () => allowedMoves[Math.floor(Math.random() * allowedMoves.length)];\n\nconst movesConflict = (moveA, moveB) => moveA && moveB ? moveA.split('').some(character => moveB.includes(character)) : false;\n\nconst getRandomScramble = movesNr => {\n  const moves = [];\n  let move = '';\n  let previousMove = '';\n\n  for (let i = 0; i < movesNr; i++) {\n    move = getRandomMove();\n\n    while (movesConflict(move, previousMove)) {\n      move = getRandomMove();\n    }\n\n    previousMove = move;\n    moves.push(move);\n  }\n\n  return moves.join(' ');\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"collections\":{\"algorithms.ts\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// collections/algorithms.ts                                                                                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  Algorithms: () => Algorithms\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 1);\nlet check;\nmodule.link(\"meteor/check\", {\n  check(v) {\n    check = v;\n  }\n\n}, 2);\nlet expect;\nmodule.link(\"chai\", {\n  expect(v) {\n    expect = v;\n  }\n\n}, 3);\nconst Algorithms = new Mongo.Collection('algorithms');\nMeteor.methods({\n  'algorithms.toggleActive': (algId, active) => {\n    check(active, Boolean);\n    check(algId, String);\n    Algorithms.update(algId, {\n      $set: {\n        active\n      }\n    });\n  },\n  'algorithms.activateAll': category => {\n    Algorithms.update({\n      category\n    }, {\n      $set: {\n        active: true\n      }\n    }, {\n      multi: true\n    });\n  },\n  'algorithms.deactivateAll': category => {\n    Algorithms.update({\n      category\n    }, {\n      $set: {\n        active: false\n      }\n    }, {\n      multi: true\n    });\n  },\n  'algorithms.insert': (_ref) => {\n    let {\n      category,\n      image,\n      scramble,\n      solution,\n      subtype,\n      type\n    } = _ref;\n    expect(category).to.be.a('string');\n    expect(image).to.be.a('string');\n    expect(scramble).to.be.a('string');\n    expect(solution).to.be.a('string');\n    expect(subtype).to.be.a('string');\n    expect(type).to.be.a('string'); // Make sure the user is logged in before inserting a algorithm\n\n    /* if (! Meteor.userId()) {\n         throw new Meteor.Error('not-authorized');\n     }*/\n\n    const doc = {\n      createdAt: new Date(),\n      category,\n      image,\n      scramble,\n      solution,\n      subtype,\n      type\n    };\n    Algorithms.insert(doc);\n  },\n\n  'algorithms.search'(text) {\n    check(text, String);\n    return Algorithms.find();\n  },\n\n  'algorithms.remove'(algorithmId) {\n    check(algorithmId, String);\n    /*const algorithm = Algorithms.findOne(algorithmId);\n    if (algorithm.private && algorithm.owner !== Meteor.userId()) {\n      // If the algorithm is private, make sure only the owner can delete it\n          throw new Meteor.Error('not-authorized');\n    }*/\n\n    Algorithms.remove(algorithmId);\n  }\n  /*,\n  'algorithms.setChecked'(algorithmId, setChecked) {\n      check(algorithmId, String);\n      check(setChecked, Boolean);\n         const algorithm = Algorithms.findOne(algorithmId);\n      if (algorithm.private && algorithm.owner !== Meteor.userId()) {\n            // If the algorithm is private, make sure only the owner can check it off\n                throw new Meteor.Error('not-authorized');\n          }\n         Algorithms.update(algorithmId, { $set: { checked: setChecked } });\n  },\n  'algorithms.setPrivate'(algorithmId, setToPrivate) {\n      check(algorithmId, String);\n      check(setToPrivate, Boolean);\n         const algorithm = Algorithms.findOne(algorithmId);\n         // Make sure only the algorithm owner can make a algorithm private\n      if (algorithm.owner !== Meteor.userId()) {\n          throw new Meteor.Error('not-authorized');\n      }\n         Algorithms.update(algorithmId, { $set: { private: setToPrivate } });\n  },*/\n\n\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"results.ts\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// collections/results.ts                                                                                              //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  Results: () => Results\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 1);\nlet check;\nmodule.link(\"meteor/check\", {\n  check(v) {\n    check = v;\n  }\n\n}, 2);\nconst Results = new Mongo.Collection('results');\nMeteor.methods({\n  'results.insert': (_ref) => {\n    let {\n      algorithmId,\n      category,\n      real,\n      scramble,\n      time\n    } = _ref;\n    check(category, String);\n    check(real, Boolean);\n    check(time, Number);\n\n    if (category === 'OLL' || category === 'PLL' || category === '3x3x3') {\n      check(scramble, String);\n    }\n\n    if (category === 'OLL' || category === 'PLL') {\n      check(algorithmId, String);\n    } // Make sure the user is logged in before inserting a result\n\n    /* if (! Meteor.userId()) {\n     throw new Meteor.Error('not-authorized');\n     }*/\n\n\n    const doc = {\n      algorithmId,\n      category,\n      createdAt: new Date(),\n      real,\n      scramble,\n      time\n    };\n    Results.insert(doc);\n  },\n  'results.search': text => {\n    check(text, String);\n    return Results.find();\n  },\n  'results.remove': resultId => {\n    check(resultId, String);\n    /*const result = Results.findOne(resultId);\n     if (result.private && result.owner !== Meteor.userId()) {\n     // If the result is private, make sure only the owner can delete it\n     throw new Meteor.Error('not-authorized');\n     }*/\n\n    Results.remove(resultId);\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\",\n    \".html\",\n    \".ts\",\n    \".tsx\",\n    \".jsx\",\n    \".mjs\",\n    \".css\",\n    \".less\"\n  ]\n});\n\nrequire(\"/client/template.main.js\");\nrequire(\"/lib/global-helpers.ts\");\nrequire(\"/client/utils.ts\");\nrequire(\"/collections/algorithms.ts\");\nrequire(\"/collections/results.ts\");\nrequire(\"/client/main.tsx\");","hash":"e0b4476e49261fc364e40a8645ff08ba2beecbc1","servePath":"/app.js","sourceMap":{"version":3,"sources":["client/imports/lib/composer.tsx","client/imports/components/results/index.ts","client/imports/components/results/results.js","client/imports/components/training/index.js","client/imports/components/training/training.js","client/imports/components/about.tsx","client/imports/components/algSettings.tsx","client/imports/components/averages.tsx","client/imports/components/home.tsx","client/imports/components/loader.tsx","client/imports/components/menuTop.tsx","client/imports/components/router.tsx","client/imports/components/timer.tsx","client/imports/components/tipsAndTricks.tsx","client/imports/components/trainingMain.tsx","client/utils.ts","client/main.tsx","lib/global-helpers.ts","collections/algorithms.ts","collections/results.ts"],"names":["React","Component","module","link","default","v","Table","moment","columns","label","value","format","toLocaleString","minimumFractionDigits","maximumFractionDigits","ResultsTab","constructor","args","renderHeader","map","index","renderRow","row","render","results","props","exportDefault","Meteor","Algorithms","Results","composer","Training","categories","randomizableAlgorithm","randomizableScramble","algorithmsCategory","settingsDisabled","compose","onData","subscriptions","subscribe","every","subscription","ready","algorithms","find","fetch","forEach","result","algorithm","alg","_id","algorithmId","category","cat","concat","time","_objectSpread","Grid","Menu","SemanticToastContainer","toast","AlgSettings","Averages","TipsAndTricks","TrainingMain","getRandomScramble","getRandomEntry","array","excludeId","Math","floor","random","length","entry","toastNoActiveAlgorithms","title","type","description","onChangeAlgorithm","currentAlgorithmId","currentCategory","state","onReset","newAlgorithm","activeAlgorithms","filter","active","scramble","setState","currentAlgorithm","onChangeCategory","onToggleActive","call","onActivateAll","onDeactivateAll","onKeyDown","event","blocked","key","space","preventDefault","onGoToNextStatus","shift","isVisibleSolution","control","delete","onKeyPress","onKeyUp","upOrDown","timerCurrentValue","timerStatus","timerStartValue","valueOf","timer","setInterval","updateTimerTime","clearInterval","image","solution","subtype","settingsOpened","componentDidMount","console","log","document","body","addEventListener","componentWillUnmount","removeEventListener","currentAlgorithms"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,MAAP,CAAY;AAAA,UAAM,QAAQ;AAAd,CAAZ;AAA0B;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAM1B,MAAM,YAAY,GAAG,KAAK,IACxB,MAAM,CAAC,YAAP,GACE,uDADF,GAGE,kCAAO,IAAI,CAAC,SAAL,CAAe,KAAf,EAAsB,IAAtB,EAA4B,CAA5B,CAAP,CAJJ;;AAOA,MAAM,OAAO,GAAG,WAAW,CAAC;AAC1B,cAD0B;AAE1B,gBAAc,EAAE,MAFU;AAG1B,MAAI,EAAE;AAHoB,CAAD,CAA3B;;AAMA,MAAM,gBAAgB,GAAG,cAAc,IAAG;AACxC,SAAO,CAAC,KAAD,EAAQ,MAAR,EAAgB,GAAhB,KAAuB;AAC5B,QAAI,cAAc,GAAG,IAArB;AACA,UAAM,OAAO,GAAG,OAAO,CAAC,WAAR,CAAoB,MAAK;AACvC,aAAO,OAAO,CAAC,OAAR,CAAgB,MAAK;AAC1B;AACA,sBAAc,GAAG,cAAc,CAAC,KAAD,EAAQ,MAAR,EAAgB,GAAhB,CAA/B;AACD,OAHM,CAAP;AAID,KALe,CAAhB;AAOA,WAAO,MAAK;AACV,UAAI,OAAO,cAAP,KAA0B,UAA9B,EAA0C,cAAc;AACxD,aAAO,OAAO,CAAC,IAAR,EAAP;AACD,KAHD;AAID,GAbD;AAcD,CAfD;;AAiBO,MAAM,QAAQ,GAAG,CAAC,cAAD,EAAiB,OAAjB,KAA4B;AAClD,SAAO,OAAO,CACZ,gBAAgB,CAAC,cAAD,CADJ,EAEZ,OAFY,CAAd;AAID,CALM,C;;;;;;;;;;;ACpCP;AAAS,MAAQ,KAAR,CAAc,eAAd,EAA8B;AAAA;AAAA;AAAA;;AAAA,CAA9B,EAA8B,CAA9B;AAA8B;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAMvC;AACA,MAAM,OAAO,GAAG,CAAC,KAAD,EAAQ,MAAR,KAAkB;AAChC,QAAM,aAAa,GAAG,CAAC,MAAM,CAAC,SAAP,CAAiB,SAAjB,CAAD,CAAtB;;AAEA,MAAI,aAAa,CAAC,KAAd,CAAoB,YAAY,IAAI,YAAY,CAAC,KAAb,EAApC,CAAJ,EAA+D;AAC7D,UAAM,OAAO,GAAG,OAAO,CAAC,IAAR,CAAa,EAAb,EAAiB,KAAjB,EAAhB;AACA,UAAM,CAAC,IAAD,EAAO;AAAE;AAAF,KAAP,CAAN;AACD;AACF,CAPD;;AAPA,OAAO,aAAP,CAgBe,QAAQ,CAAC,OAAD,CAAR,CAAkB,gBAAlB,CAhBf,E;;;;;;;;;;;ACAA,IAAIA,KAAJ,EAAUC,SAAV;AAAoBC,MAAM,CAACC,IAAP,CAAY,OAAZ,EAAoB;AAACC,SAAO,CAACC,CAAD,EAAG;AAACL,SAAK,GAACK,CAAN;AAAQ,GAApB;;AAAqBJ,WAAS,CAACI,CAAD,EAAG;AAACJ,aAAS,GAACI,CAAV;AAAY;;AAA9C,CAApB,EAAoE,CAApE;AAAuE,IAAIC,KAAJ;AAAUJ,MAAM,CAACC,IAAP,CAAY,mBAAZ,EAAgC;AAACG,OAAK,CAACD,CAAD,EAAG;AAACC,SAAK,GAACD,CAAN;AAAQ;;AAAlB,CAAhC,EAAoD,CAApD;AAAuD,IAAIE,MAAJ;AAAWL,MAAM,CAACC,IAAP,CAAY,QAAZ,EAAqB;AAACC,SAAO,CAACC,CAAD,EAAG;AAACE,UAAM,GAACF,CAAP;AAAS;;AAArB,CAArB,EAA4C,CAA5C;AAIvK,MAAMG,OAAO,GAAG,CACd;AACEC,OAAK,EAAE,MADT;AAEEC,OAAK,EAAE,WAFT;AAGEC,QAAM,EAAED,KAAK,IAAIH,MAAM,CAACG,KAAD,CAAN,CAAcC,MAAd,CAAqB,kBAArB;AAHnB,CADc,EAMd;AACEF,OAAK,EAAE,UADT;AAEEC,OAAK,EAAE;AAFT,CANc,EAUd;AACED,OAAK,EAAE,UADT;AAEEC,OAAK,EAAE;AAFT,CAVc,EAcd;AACED,OAAK,EAAE,MADT;AAEEC,OAAK,EAAE,MAFT;AAGEC,QAAM,EAAED,KAAK,IACX,CAACA,KAAK,GAAG,IAAT,EAAeE,cAAf,CAA8B,OAA9B,EAAuC;AACrCC,yBAAqB,EAAE,CADc;AAErCC,yBAAqB,EAAE;AAFc,GAAvC,IAGK;AAPT,CAdc,CAAhB;;AAyBA,MAAMC,UAAN,SAAyBd,SAAzB,CAAmC;AACjCe,aAAW,CAACC,IAAD,EAAO;AAChB,UAAMA,IAAN;;AADgB,SAIlBC,YAJkB,GAIH,MACb,oBAAC,KAAD,CAAO,GAAP,QACGV,OAAO,CAACW,GAAR,CAAY,OAAYC,KAAZ;AAAA,UAAC;AAAEX;AAAF,OAAD;AAAA,aACX,oBAAC,KAAD,CAAO,UAAP;AAAkB,WAAG,EAAEW;AAAvB,SAA+BX,KAA/B,CADW;AAAA,KAAZ,CADH,CALgB;;AAAA,SAYlBY,SAZkB,GAYNC,GAAG,IACb,oBAAC,KAAD,CAAO,GAAP,QACGd,OAAO,CAACW,GAAR,CAAY,QAAqCC,KAArC;AAAA,UAAC;AAAEV,aAAF;AAASC,cAAM,GAAGD,KAAK,IAAIA;AAA3B,OAAD;AAAA,aACX,oBAAC,KAAD,CAAO,IAAP;AAAY,WAAG,EAAEU;AAAjB,SAAyBT,MAAM,CAACW,GAAG,CAACZ,KAAD,CAAJ,CAA/B,CADW;AAAA,KAAZ,CADH,CAbgB;AAEjB;;AAkBDa,QAAM,GAAG;AACP,UAAM;AAAEC;AAAF,QAAc,KAAKC,KAAzB;AAEA,WACE,oBAAC,KAAD;AACE,cAAQ,MADV;AAEE,eAAS,EAAE,KAAKP,YAFlB;AAGE,eAAS,EAAEM,OAHb;AAIE,mBAAa,EAAE,KAAKH;AAJtB,MADF;AAQD;;AAhCgC;;AA7BnCnB,MAAM,CAACwB,aAAP,CAgEeX,UAhEf,E;;;;;;;;;;;ACAA,IAAIY,MAAJ;AAAWzB,MAAM,CAACC,IAAP,CAAY,eAAZ,EAA4B;AAACwB,QAAM,CAACtB,CAAD,EAAG;AAACsB,UAAM,GAACtB,CAAP;AAAS;;AAApB,CAA5B,EAAkD,CAAlD;AAAqD,IAAIuB,UAAJ;AAAe1B,MAAM,CAACC,IAAP,CAAY,oCAAZ,EAAiD;AAACyB,YAAU,CAACvB,CAAD,EAAG;AAACuB,cAAU,GAACvB,CAAX;AAAa;;AAA5B,CAAjD,EAA+E,CAA/E;AAAkF,IAAIwB,OAAJ;AAAY3B,MAAM,CAACC,IAAP,CAAY,iCAAZ,EAA8C;AAAC0B,SAAO,CAACxB,CAAD,EAAG;AAACwB,WAAO,GAACxB,CAAR;AAAU;;AAAtB,CAA9C,EAAsE,CAAtE;AAAyE,IAAIyB,QAAJ;AAAa5B,MAAM,CAACC,IAAP,CAAY,oBAAZ,EAAiC;AAAC2B,UAAQ,CAACzB,CAAD,EAAG;AAACyB,YAAQ,GAACzB,CAAT;AAAW;;AAAxB,CAAjC,EAA2D,CAA3D;AAA8D,IAAI0B,QAAJ;AAAa7B,MAAM,CAACC,IAAP,CAAY,YAAZ,EAAyB;AAACC,SAAO,CAACC,CAAD,EAAG;AAAC0B,YAAQ,GAAC1B,CAAT;AAAW;;AAAvB,CAAzB,EAAkD,CAAlD;AAO9U;AACA,MAAM2B,UAAU,GAAG,CACjB;AACEvB,OAAK,EAAE,KADT;AAEEC,OAAK,EAAE,KAFT;AAGEuB,uBAAqB,EAAE;AAHzB,CADiB,EAMjB;AACExB,OAAK,EAAE,KADT;AAEEC,OAAK,EAAE,KAFT;AAGEuB,uBAAqB,EAAE;AAHzB,CANiB,EAWjB;AACExB,OAAK,EAAE,OADT;AAEEC,OAAK,EAAE,OAFT;AAGEwB,sBAAoB,EAAE;AAHxB,CAXiB,EAgBjB;AACEzB,OAAK,EAAE,YADT;AAEEC,OAAK,EAAE,YAFT;AAGEyB,oBAAkB,EAAE,KAHtB;AAIEC,kBAAgB,EAAE;AAJpB,CAhBiB,EAsBjB;AACE3B,OAAK,EAAE,YADT;AAEEC,OAAK,EAAE,YAFT;AAGEyB,oBAAkB,EAAE,KAHtB;AAIEC,kBAAgB,EAAE;AAJpB,CAtBiB,CAAnB;;AA8BA,MAAMC,OAAO,GAAG,CAACZ,KAAD,EAAQa,MAAR,KAAmB;AACjC,QAAMC,aAAa,GAAG,CACpBZ,MAAM,CAACa,SAAP,CAAiB,YAAjB,CADoB,EAEpBb,MAAM,CAACa,SAAP,CAAiB,SAAjB,CAFoB,CAAtB;;AAKA,MAAID,aAAa,CAACE,KAAd,CAAoBC,YAAY,IAAIA,YAAY,CAACC,KAAb,EAApC,CAAJ,EAA+D;AAC7D,UAAMC,UAAU,GAAGhB,UAAU,CAACiB,IAAX,CAAgB,EAAhB,EAAoBC,KAApB,EAAnB;AACA,UAAMtB,OAAO,GAAGK,OAAO,CAACgB,IAAR,CAAa,EAAb,EAAiBC,KAAjB,EAAhB;AAEAtB,WAAO,CAACuB,OAAR,CAAgBC,MAAM,IAAI;AACxB,YAAMC,SAAS,GAAGL,UAAU,CAACC,IAAX,CAAgBK,GAAG,IAAIA,GAAG,CAACC,GAAJ,KAAYH,MAAM,CAACI,WAA1C,CAAlB;AACA,YAAMC,QAAQ,GAAGrB,UAAU,CAACa,IAAX,CAAgBS,GAAG,IAAIA,GAAG,CAAC5C,KAAJ,KAAcsC,MAAM,CAACK,QAA5C,CAAjB;;AACA,UAAIJ,SAAJ,EAAe;AACbA,iBAAS,CAACzB,OAAV,GAAoB,CAACyB,SAAS,CAACzB,OAAV,IAAqB,EAAtB,EAA0B+B,MAA1B,CAAiCP,MAAM,CAACQ,IAAxC,CAApB;AACD;;AACD,UAAIH,QAAJ,EAAc;AACZA,gBAAQ,CAAC7B,OAAT,GAAmB,CAAC6B,QAAQ,CAAC7B,OAAT,IAAoB,EAArB,EAAyB+B,MAAzB,CAAgCP,MAAM,CAACQ,IAAvC,CAAnB;AACD;AACF,KATD;AAWAlB,UAAM,CAAC,IAAD,EAAO;AAAEM,gBAAF;AAAcZ;AAAd,KAAP,CAAN;AACD;AACF,CAvBD;;AAtCA9B,MAAM,CAACwB,aAAP,CA+DeI,QAAQ,CAACO,OAAD,CAAR,CAAkBN,QAAlB,CA/Df,E;;;;;;;;;;;ACAA,IAAI0B,aAAJ;;AAAkBvD,MAAM,CAACC,IAAP,CAAY,sCAAZ,EAAmD;AAACC,SAAO,CAACC,CAAD,EAAG;AAACoD,iBAAa,GAACpD,CAAd;AAAgB;;AAA5B,CAAnD,EAAiF,CAAjF;AAAlB,IAAIL,KAAJ,EAAUC,SAAV;AAAoBC,MAAM,CAACC,IAAP,CAAY,OAAZ,EAAoB;AAACC,SAAO,CAACC,CAAD,EAAG;AAACL,SAAK,GAACK,CAAN;AAAQ,GAApB;;AAAqBJ,WAAS,CAACI,CAAD,EAAG;AAACJ,aAAS,GAACI,CAAV;AAAY;;AAA9C,CAApB,EAAoE,CAApE;AAAuE,IAAIE,MAAJ;AAAWL,MAAM,CAACC,IAAP,CAAY,QAAZ,EAAqB;AAACC,SAAO,CAACC,CAAD,EAAG;AAACE,UAAM,GAACF,CAAP;AAAS;;AAArB,CAArB,EAA4C,CAA5C;AAA+C,IAAIqD,IAAJ,EAASC,IAAT;AAAczD,MAAM,CAACC,IAAP,CAAY,mBAAZ,EAAgC;AAACuD,MAAI,CAACrD,CAAD,EAAG;AAACqD,QAAI,GAACrD,CAAL;AAAO,GAAhB;;AAAiBsD,MAAI,CAACtD,CAAD,EAAG;AAACsD,QAAI,GAACtD,CAAL;AAAO;;AAAhC,CAAhC,EAAkE,CAAlE;AAAqE,IAAIuD,sBAAJ,EAA2BC,KAA3B;AAAiC3D,MAAM,CAACC,IAAP,CAAY,uBAAZ,EAAoC;AAACyD,wBAAsB,CAACvD,CAAD,EAAG;AAACuD,0BAAsB,GAACvD,CAAvB;AAAyB,GAApD;;AAAqDwD,OAAK,CAACxD,CAAD,EAAG;AAACwD,SAAK,GAACxD,CAAN;AAAQ;;AAAtE,CAApC,EAA4G,CAA5G;AAA+G,IAAIyD,WAAJ;AAAgB5D,MAAM,CAACC,IAAP,CAAY,gBAAZ,EAA6B;AAACC,SAAO,CAACC,CAAD,EAAG;AAACyD,eAAW,GAACzD,CAAZ;AAAc;;AAA1B,CAA7B,EAAyD,CAAzD;AAA4D,IAAI0D,QAAJ;AAAa7D,MAAM,CAACC,IAAP,CAAY,aAAZ,EAA0B;AAACC,SAAO,CAACC,CAAD,EAAG;AAAC0D,YAAQ,GAAC1D,CAAT;AAAW;;AAAvB,CAA1B,EAAmD,CAAnD;AAAsD,IAAI2D,aAAJ;AAAkB9D,MAAM,CAACC,IAAP,CAAY,kBAAZ,EAA+B;AAACC,SAAO,CAACC,CAAD,EAAG;AAAC2D,iBAAa,GAAC3D,CAAd;AAAgB;;AAA5B,CAA/B,EAA6D,CAA7D;AAAgE,IAAI4D,YAAJ;AAAiB/D,MAAM,CAACC,IAAP,CAAY,iBAAZ,EAA8B;AAACC,SAAO,CAACC,CAAD,EAAG;AAAC4D,gBAAY,GAAC5D,CAAb;AAAe;;AAA3B,CAA9B,EAA2D,CAA3D;AAA8D,IAAI6D,iBAAJ;AAAsBhE,MAAM,CAACC,IAAP,CAAY,qBAAZ,EAAkC;AAAC+D,mBAAiB,CAAC7D,CAAD,EAAG;AAAC6D,qBAAiB,GAAC7D,CAAlB;AAAoB;;AAA1C,CAAlC,EAA8E,CAA9E;;AAY9rB;AACA,MAAM8D,cAAc,GAAG,CAACC,KAAD,EAAQC,SAAR,KAAsB;AAC3C,QAAMjD,KAAK,GAAGkD,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBJ,KAAK,CAACK,MAAjC,CAAd;AACA,QAAMC,KAAK,GAAGN,KAAK,CAAChD,KAAD,CAAnB;;AAEA,MAAIgD,KAAK,CAACK,MAAN,GAAe,CAAf,IAAoBJ,SAApB,IAAiCK,KAAK,CAACvB,GAAN,KAAckB,SAAnD,EAA8D;AAC5D,WAAOF,cAAc,CAACC,KAAD,EAAQC,SAAR,CAArB;AACD;;AAED,SAAOK,KAAP;AACD,CATD,C,CAWA;;;AACA,MAAMC,uBAAuB,GAAG,MAC9Bd,KAAK,CAAC;AACJe,OAAK,EAAE,sBADH;AAEJC,MAAI,EAAE,SAFF;AAGJC,aAAW,EACT,uEAJE;AAKJtB,MAAI,EAAE;AALF,CAAD,CADP;;AASA,MAAMzB,QAAN,SAAuB9B,SAAvB,CAAiC;AAC/Be,aAAW,CAACS,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SA4CnBsD,iBA5CmB,GA4CC,MAAM;AACxB,YAAM;AAAEnC;AAAF,UAAiB,KAAKnB,KAA5B;AACA,YAAM;AAAEuD,0BAAF;AAAsBC;AAAtB,UAA0C,KAAKC,KAArD;AAEA,WAAKC,OAAL;AAEA,UAAIC,YAAJ;;AACA,UAAIH,eAAe,CAAChD,qBAApB,EAA2C;AACzC,cAAMoD,gBAAgB,GAAGzC,UAAU,CAAC0C,MAAX,CACvBrC,SAAS,IACP,CAAC,CAACA,SAAS,CAACsC,MAAZ,IAAsBtC,SAAS,CAACI,QAAV,KAAuB4B,eAAe,CAACvE,KAFxC,CAAzB;;AAKA,YAAI,CAAC2E,gBAAgB,CAACZ,MAAtB,EAA8B;AAC5BE,iCAAuB;AACxB;;AAEDS,oBAAY,GAAGjB,cAAc,CAACkB,gBAAD,EAAmBL,kBAAnB,CAA7B;AACD,OAXD,MAWO,IAAIC,eAAe,CAAC/C,oBAApB,EAA0C;AAC/C,cAAMsD,QAAQ,GAAGtB,iBAAiB,CAAC,EAAD,CAAlC;AACAkB,oBAAY,GAAG;AAAE/B,kBAAQ,EAAE4B,eAAe,CAACvE,KAA5B;AAAmC8E;AAAnC,SAAf;AACD;;AAED,WAAKC,QAAL,CAAc;AACZC,wBAAgB,EAAEN,YADN;AAEZJ,0BAAkB,EAAEI,YAAY,IAAIA,YAAY,CAACjC,GAFrC,CAEyC;;AAFzC,OAAd;AAID,KAvEkB;;AAAA,SAyEnBwC,gBAzEmB,GAyEAtC,QAAQ,IAAI;AAC7B,WAAKoC,QAAL,CAAc;AAAER,uBAAe,EAAE5B;AAAnB,OAAd,EAA6C,MAAM;AACjD,aAAK0B,iBAAL;AACD,OAFD;AAGD,KA7EkB;;AAAA,SA+EnBa,cA/EmB,GA+EF3C,SAAS,IAAI;AAC5BtB,YAAM,CAACkE,IAAP,CAAY,yBAAZ,EAAuC5C,SAAS,CAACE,GAAjD,EAAsD,CAACF,SAAS,CAACsC,MAAjE;AACD,KAjFkB;;AAAA,SAmFnBO,aAnFmB,GAmFH,MAAM;AACpB,YAAM;AAAEb;AAAF,UAAsB,KAAKC,KAAjC;AACAvD,YAAM,CAACkE,IAAP,CAAY,wBAAZ,EAAsCZ,eAAe,CAACvE,KAAtD;AACD,KAtFkB;;AAAA,SAwFnBqF,eAxFmB,GAwFD,MAAM;AACtBpE,YAAM,CAACkE,IAAP,CAAY,0BAAZ;AACAlB,6BAAuB;AACxB,KA3FkB;;AAAA,SA6FnBqB,SA7FmB,GA6FPC,KAAK,IAAI;AACnB,YAAMC,OAAO,GAAG,KAAKhB,KAAL,CAAWgB,OAA3B;;AAEA,UAAI,CAACD,KAAK,CAACE,GAAN,KAAc,OAAd,IAAyBF,KAAK,CAACE,GAAN,KAAc,GAAxC,KAAgD,CAACD,OAAO,CAACE,KAA7D,EAAoE;AAClEH,aAAK,CAACI,cAAN;AACA,aAAKC,gBAAL,CAAsB,MAAtB;AACA,aAAKb,QAAL,CAAc;AAAES,iBAAO,oBAAOA,OAAP;AAAgBE,iBAAK,EAAE;AAAvB;AAAT,SAAd;AACD,OAJD,MAIO,IAAIH,KAAK,CAACE,GAAN,KAAc,GAAlB,EAAuB;AAC5BF,aAAK,CAACI,cAAN;AACA,aAAKtB,iBAAL;AACD,OAHM,MAGA,IAAIkB,KAAK,CAACE,GAAN,KAAc,OAAd,IAAyB,CAACD,OAAO,CAACK,KAAtC,EAA6C;AAClDN,aAAK,CAACI,cAAN;AACA,aAAKZ,QAAL,CAAc;AACZS,iBAAO,oBAAOA,OAAP;AAAgBK,iBAAK,EAAE;AAAvB,YADK;AAEZC,2BAAiB,EAAE;AAFP,SAAd;AAID,OANM,MAMA,IAAIP,KAAK,CAACE,GAAN,KAAc,SAAd,IAA2B,CAACD,OAAO,CAACO,OAAxC,EAAiD;AACtDR,aAAK,CAACI,cAAN;AACA,aAAKZ,QAAL,CAAc;AAAES,iBAAO,oBAAOA,OAAP;AAAgBO,mBAAO,EAAE;AAAzB;AAAT,SAAd;AACD,OAHM,MAGA,IACL,CAACR,KAAK,CAACE,GAAN,KAAc,WAAd,IACCF,KAAK,CAACE,GAAN,KAAc,QADf,IAECF,KAAK,CAACE,GAAN,KAAc,QAFhB,KAGA,CAACD,OAAO,CAACQ,MAJJ,EAKL;AACAT,aAAK,CAACI,cAAN;AACA,aAAKZ,QAAL,CAAc;AAAES,iBAAO,oBAAOA,OAAP;AAAgBQ,kBAAM,EAAE;AAAxB;AAAT,SAAd;AACD;AACF,KAzHkB;;AAAA,SA2HnBC,UA3HmB,GA2HNV,KAAK,IAAI;AACpB,UAAIA,KAAK,CAACE,GAAN,KAAc,GAAlB,EAAuB;AACrBF,aAAK,CAACI,cAAN;AACD;AACF,KA/HkB;;AAAA,SAiInBO,OAjImB,GAiITX,KAAK,IAAI;AACjB,YAAM;AAAEC,eAAF;AAAWM;AAAX,UAAiC,KAAKtB,KAA5C;;AAEA,UAAIe,KAAK,CAACE,GAAN,KAAc,OAAd,IAAyBF,KAAK,CAACE,GAAN,KAAc,GAA3C,EAAgD;AAC9C,aAAKG,gBAAL,CAAsB,IAAtB;AACA,aAAKb,QAAL,CAAc;AAAES,iBAAO,oBAAOA,OAAP;AAAgBE,iBAAK,EAAE;AAAvB;AAAT,SAAd;AACD,OAHD,MAGO,IAAIH,KAAK,CAACE,GAAN,KAAc,OAAlB,EAA2B;AAChC,aAAKV,QAAL,CAAc;AACZS,iBAAO,oBAAOA,OAAP;AAAgBK,iBAAK,EAAE;AAAvB,YADK;AAEZC,2BAAiB,EAAE;AAFP,SAAd;AAID,OALM,MAKA,IAAIP,KAAK,CAACE,GAAN,KAAc,SAAlB,EAA6B;AAClC,aAAKV,QAAL,CAAc;AACZS,iBAAO,oBAAOA,OAAP;AAAgBO,mBAAO,EAAE;AAAzB,YADK;AAEZD,2BAAiB,EAAE,CAACA;AAFR,SAAd;AAID,OALM,MAKA,IACLP,KAAK,CAACE,GAAN,KAAc,WAAd,IACAF,KAAK,CAACE,GAAN,KAAc,QADd,IAEAF,KAAK,CAACE,GAAN,KAAc,QAHT,EAIL;AACA,aAAKpB,iBAAL;AACA,aAAKU,QAAL,CAAc;AAAES,iBAAO,oBAAOA,OAAP;AAAgBQ,kBAAM,EAAE;AAAxB;AAAT,SAAd;AACD;AACF,KAzJkB;;AAAA,SA2JnBJ,gBA3JmB,GA2JAO,QAAQ,IAAI;AAC7B,YAAM;AACJX,eADI;AAEJR,wBAFI;AAGJT,uBAHI;AAIJ6B,yBAJI;AAKJC;AALI,UAMF,KAAK7B,KANT;;AAQA,UAAI6B,WAAW,KAAK,UAAhB,IAA8BF,QAAQ,KAAK,MAA3C,IAAqD,CAACX,OAAO,CAACE,KAAlE,EAAyE;AACvE,aAAKX,QAAL,CAAc;AAAEsB,qBAAW,EAAE;AAAf,SAAd;AACD,OAFD,MAEO,IAAIA,WAAW,KAAK,gBAAhB,IAAoCF,QAAQ,KAAK,IAArD,EAA2D;AAChE,aAAKpB,QAAL,CAAc;AACZsB,qBAAW,EAAE,UADD;AAEZC,yBAAe,EAAEzG,MAAM,GAAG0G,OAAT;AAFL,SAAd;AAIA,aAAKC,KAAL,GAAaC,WAAW,CAAC,KAAKC,eAAN,EAAuB,CAAvB,CAAxB;AACD,OANM,MAMA,IACLL,WAAW,KAAK,UAAhB,IACAF,QAAQ,KAAK,MADb,IAEA,CAACX,OAAO,CAACE,KAHJ,EAIL;AACAiB,qBAAa,CAAC,KAAKH,KAAN,CAAb;AACA,aAAKzB,QAAL,CAAc;AAAEsB,qBAAW,EAAE;AAAf,SAAd;AACD,OAPM,MAOA,IACLA,WAAW,KAAK,WAAhB,IACAF,QAAQ,KAAK,MADb,IAEA,CAACX,OAAO,CAACE,KAHJ,EAIL;AACA;AACA,cAAMpD,MAAM,qBACN0C,gBAAgB,IAAI;AACtBtC,qBAAW,EAAEsC,gBAAgB,CAACvC,GADR;AAEtBqC,kBAAQ,EAAEE,gBAAgB,CAACF;AAFL,SADd;AAKVnC,kBAAQ,EAAE4B,eAAe,CAACvE,KALhB;AAMV8C,cAAI,EAAEsD;AANI,UAAZ;;AASAnF,cAAM,CAACkE,IAAP,CAAY,gBAAZ,EAA8B7C,MAA9B,EAAsC,MAAM,KAAK+B,iBAAL,EAA5C;AACD;AACF,KApMkB;;AAAA,SAsMnBI,OAtMmB,GAsMT,MAAM;AACdkC,mBAAa,CAAC,KAAKH,KAAN,CAAb;AACA,WAAKzB,QAAL,CAAc;AAAEsB,mBAAW,EAAE,UAAf;AAA2BD,yBAAiB,EAAE;AAA9C,OAAd;AACD,KAzMkB;;AAAA,SA2MnBM,eA3MmB,GA2MD,MAAM;AACtB,WAAK3B,QAAL,CAAcP,KAAK,KAAK;AACtB4B,yBAAiB,EAAEvG,MAAM,GAAG0G,OAAT,KAAqB/B,KAAK,CAAC8B;AADxB,OAAL,CAAnB;AAGD,KA/MkB;;AAGjB,SAAK9B,KAAL,GAAa;AACXgB,aAAO,EAAE;AACPO,eAAO,EAAE,KADF;AAEPC,cAAM,EAAE,KAFD;AAGPH,aAAK,EAAE,KAHA;AAIPH,aAAK,EAAE;AAJA,OADE;AAOXV,sBAAgB,EAAE;AAChBrC,gBAAQ,EAAE,EADM;AAEhBiE,aAAK,EAAE,EAFS;AAGhB9B,gBAAQ,EAAE,EAHM;AAIhB+B,gBAAQ,EAAE,EAJM;AAKhBC,eAAO,EAAE,EALO;AAMhB3C,YAAI,EAAE;AANU,OAPP;AAeXG,wBAAkB,EAAE,CAfT;AAgBXC,qBAAe,EAAE,KAAKxD,KAAL,CAAWO,UAAX,CAAsB,CAAtB,CAhBN;AAiBXwE,uBAAiB,EAAE,KAjBR;AAkBXiB,oBAAc,EAAE,IAlBL;AAmBXX,uBAAiB,EAAE,CAnBR;AAoBXE,qBAAe,EAAE,CApBN;AAqBXD,iBAAW,EAAE;AArBF,KAAb;AAuBD;;AAEDW,mBAAiB,GAAG;AAClB,SAAK3C,iBAAL;AAEA4C,WAAO,CAACC,GAAR,CAAY,WAAZ;AAEAC,YAAQ,CAACC,IAAT,CAAcC,gBAAd,CAA+B,SAA/B,EAA0C,KAAK/B,SAA/C;AACA6B,YAAQ,CAACC,IAAT,CAAcC,gBAAd,CAA+B,UAA/B,EAA2C,KAAKpB,UAAhD;AACAkB,YAAQ,CAACC,IAAT,CAAcC,gBAAd,CAA+B,OAA/B,EAAwC,KAAKnB,OAA7C;AACD;;AAEDoB,sBAAoB,GAAG;AACrBH,YAAQ,CAACC,IAAT,CAAcG,mBAAd,CAAkC,SAAlC,EAA6C,KAAKjC,SAAlD;AACA6B,YAAQ,CAACC,IAAT,CAAcG,mBAAd,CAAkC,UAAlC,EAA8C,KAAKtB,UAAnD;AACAkB,YAAQ,CAACC,IAAT,CAAcG,mBAAd,CAAkC,OAAlC,EAA2C,KAAKrB,OAAhD;AACD;;AAuKDrF,QAAM,GAAG;AACP,UAAM;AACJ2D,WAAK,EAAE;AACLQ,wBADK;AAELT,uBAFK;AAGLuB,yBAHK;AAILM;AAJK,OADH;AAOJrF,WAAK,EAAE;AAAEmB,kBAAF;AAAcZ;AAAd,OAPH;AAQJ8D,mBARI;AASJF,oBATI;AAUJb,uBAVI;AAWJY,sBAXI;AAYJI;AAZI,QAaF,IAbJ;AAeA,UAAMmC,iBAAiB,GAAGtF,UAAU,CAAC0C,MAAX,CACxBrC,SAAS,IAAIA,SAAS,CAACI,QAAV,KAAuB4B,eAAe,CAACvE,KAD5B,CAA1B;AAIA,WACE,0CACE,oBAAC,sBAAD,OADF,EAEE,oBAAC,IAAD,QACE,oBAAC,IAAD,CAAM,MAAN;AAAa,WAAK,EAAE;AAApB,OACE,oBAAC,IAAD;AAAM,eAAS,EAAC,WAAhB;AAA4B,cAAQ,MAApC;AAAqC,aAAO,MAA5C;AAA6C,cAAQ;AAArD,OACGsB,UAAU,CAACb,GAAX,CAAekC,QAAQ,IACtB,oBAAC,IAAD,CAAM,IAAN;AACE,SAAG,EAAEA,QAAQ,CAAC3C,KADhB;AAEE,UAAI,EAAE2C,QAAQ,CAAC5C,KAFjB;AAGE,YAAM,EAAEwE,eAAe,CAACvE,KAAhB,KAA0B2C,QAAQ,CAAC3C,KAH7C;AAIE,aAAO,EAAE,MAAMiF,gBAAgB,CAACtC,QAAD;AAJjC,MADD,CADH,CADF,CADF,EAaE,oBAAC,IAAD,CAAM,MAAN;AAAa,WAAK,EAAE,CAApB;AAAuB,eAAS,EAAC;AAAjC,OACE,oBAAC,YAAD;AACE,sBAAgB,EAAEqC,gBADpB;AAEE,uBAAiB,EAAEc,iBAFrB;AAGE,uBAAiB,EAAEzB,iBAHrB;AAIE,uBAAiB,EAAE+B;AAJrB,MADF,CAbF,EAqBE,oBAAC,IAAD,CAAM,MAAN;AAAa,WAAK,EAAE;AAApB,OACE,oBAAC,QAAD;AACE,sBAAgB,EAAEpB,gBADpB;AAEE,qBAAe,EAAET;AAFnB,MADF,EAKE,oBAAC,aAAD,OALF,CArBF,CAFF,EA+BG,KAAKC,KAAL,CAAWuC,cAAX,IACC,oBAAC,WAAD;AACE,gBAAU,EAAES,iBADd;AAEE,qBAAe,EAAEjD,eAFnB;AAGE,mBAAa,EAAEa,aAHjB;AAIE,oBAAc,EAAEF,cAJlB;AAKE,qBAAe,EAAEG;AALnB,MAhCJ,CADF;AA2CD;;AAjR8B;;AAlCjC7F,MAAM,CAACwB,aAAP,CAsTeK,QAtTf,E;;;;;;;;;;;ACAA;AAAO,MAA4B,KAA5B,CAAkC,OAAlC,EAA0C;AAAA;AAAA;AAAA;;AAAA,CAA1C,EAA0C,CAA1C;;AAGP,MAAM,KAAK,GAA2C,MAAM,yCAA5D;;AAHA,OAAO,aAAP,CAKe,KALf,E;;;;;;;;;;;ACAA,WAAO,QAAP;AAAmC,MAAQ,CAAE,IAAV,CAAU,OAAV,EAAuB;AAAC;AAAA;AAAA,GAAD;;AAAC;AAAA;AAAA;;AAAD,CAAvB,EAAwB,CAAxB;AAAwB;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAO3D,MAAM,aAAa,GAAG,uBAAuB,CAAC,MAAD,CAA7C;;AAcA,MAAM,WAAW,GAA6B,UAMzC;AAAA,MAN0C;AAC7C,cAD6C;AAE7C,mBAAe,EAAE;AAAE;AAAF,KAF4B;AAG7C,iBAH6C;AAI7C,kBAJ6C;AAK7C;AAL6C,GAM1C;AACH,QAAM,CAAC,YAAD,EAAe,eAAf,IAAkC,QAAQ,CAAC,CAAD,CAAhD;AAEA,QAAM,iBAAiB,GACrB,YAAY,KAAK,CAAjB,GACI,OAAO,CAAC,UAAD,EAAa,UAAb,CADX,GAEI,YAAY,KAAK,CAAjB,GACA,OAAO,CAAC,UAAD,EAAa,MAAb,CADP,GAEA,YAAY,KAAK,CAAjB,GACA,OAAO,CAAC,UAAD,EAAa,SAAb,CADP,GAEA,EAPN;AASA,SACE;AACE,aAAS,8BAAuB,gBAAgB,GAAG,WAAH,GAAiB,EAAxD;AADX,KAGE,oBAAC,IAAD;AAAM,WAAO,MAAb;AAAc,iBAAa,EAAC;AAA5B,KACE,oBAAC,IAAD,CAAM,IAAN,QACE,oBAAC,IAAD,CAAM,OAAN;AAAc,WAAO,EAAC;AAAtB,KACE;AAAK,aAAS,EAAC;AAAf,KACE;AAAK,aAAS,EAAC;AAAf,sBADF,EAEE,oBAAC,aAAD;AACE,OAAG,EAAE,CADP;AAEE,OAAG,EAAE,CAFP;AAGE,YAAQ,EAAE,eAHZ;AAIE,gBAAY,EAAG,KAAD,IACZ,CAAC,MAAD,EAAS,SAAT,EAAoB,SAApB,EAA+B,KAA/B,CALJ;AAOE,YAAQ,EAAE;AACR,eAAS,EAAE,QADH;AAER,aAAO,EAAE;AAFD,KAPZ;AAWE,SAAK,EAAE;AAXT,IAFF,CADF,CADF,EAmBE,oBAAC,IAAD,CAAM,OAAN,QACG,CAAC,gBAAD,IACC;AAAK,aAAS,EAAC;AAAf,KACE,oBAAC,MAAD;AACE,aAAS,MADX;AAEE,WAAO,EAAE,gBAAgB,GAAG,SAAH,GAAe;AAF1C,kBADF,EAOE,oBAAC,MAAD;AACE,aAAS,MADX;AAEE,WAAO,EAAE,gBAAgB,GAAG,SAAH,GAAe;AAF1C,oBAPF,CAFJ,CAnBF,CADF,CAHF,EA4CG,MAAM,CAAC,OAAP,CAAe,iBAAf,EAAkC,GAAlC,CAAsC,QAAiB,KAAjB;AAAA,QAAC,CAAC,IAAD,EAAO,MAAP,CAAD;AAAA,WACrC,oBAAC,OAAD;AAAS,SAAG,EAAE;AAAd,OACE,gCAAK,IAAL,CADF,EAEG,MAAM,CAAC,GAAP,CAAW,SAAS,IACnB;AACE,SAAG,EAAE,SAAS,CAAC,GADjB;AAEE,eAAS,qBACP,gBAAgB,IAAI,SAAS,CAAC,MAA9B,GAAuC,SAAvC,GAAmD,EAD5C,CAFX;AAKE,aAAO,EAAE,MACP,gBAAgB,GAAG,IAAH,GAAU,cAAc,CAAC,SAAD;AAN5C,OASE;AAAK,SAAG,EAAE,SAAS,CAAC,IAApB;AAA0B,SAAG,oBAAa,SAAS,CAAC,KAAvB;AAA7B,MATF,EAUE;AAAK,eAAS,EAAC;AAAf,OACG,UAAU,CAAC,SAAS,IAAI,SAAS,CAAC,OAAxB,CADb,CAVF,CADD,CAFH,CADqC;AAAA,GAAtC,CA5CH,CADF;AAoED,CAtFD;;AArBA,OAAO,aAAP,CA6Ge,WA7Gf,E;;;;;;;;;;;ACAA;AAAO,MAA4B,KAA5B,CAAkC,OAAlC,EAA0C;AAAA;AAAA;AAAA;;AAAA,CAA1C,EAA0C,CAA1C;AAA0C;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAkBjD,MAAM,QAAQ,GAA6B,UAGtC;AAAA,MAHuC;AAC1C,oBAD0C;AAE1C;AAF0C,GAGvC;AACH,QAAM,mBAAmB,GAAG,UAAU,CACpC,gBAAgB,IAAI,gBAAgB,CAAC,OADD,CAAtC;AAGA,QAAM,kBAAkB,GAAG,UAAU,CACnC,eAAe,IAAI,eAAe,CAAC,OADA,CAArC;AAIA,QAAM,QAAQ,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,QAAf,CAAwB,eAAe,CAAC,KAAxC,IACb,CACE;AACE,UAAM,EAAE,4BADV;AAEE,eAAW,EAAE,mBAAmB,GAC5B,MAAM,CAAC,mBAAD,CAAN,CAA4B,MAA5B,CAAmC,QAAnC,CAD4B,GAE5B;AAJN,GADF,EAOE;AACE,UAAM,4BAAqB,eAAe,CAAC,KAArC,gBADR;AAEE,eAAW,EAAE,kBAAkB,GAC3B,MAAM,CAAC,kBAAD,CAAN,CAA2B,MAA3B,CAAkC,QAAlC,CAD2B,GAE3B;AAJN,GAPF,CADa,GAeb,CACE;AACE,UAAM,+BAAwB,eAAe,CAAC,KAAxC,CADR;AAEE,eAAW,EAAE,kBAAkB,GAC3B,MAAM,CAAC,kBAAD,CAAN,CAA2B,MAA3B,CAAkC,WAAlC,CAD2B,GAE3B;AAJN,GADF,CAfJ;AAwBA,SACE,oBAAC,OAAD;AAAS,aAAS,EAAC;AAAnB,KACE,oBAAC,IAAD;AAAM,YAAQ,MAAd;AAAe,SAAK,EAAE;AAAtB,IADF,CADF;AAKD,CAxCD;;AAlBA,OAAO,aAAP,CA4De,QA5Df,E;;;;;;;;;;;ACAA;AAAO,MAA4B,KAA5B,CAAkC,OAAlC,EAA0C;AAAA;AAAA;AAAA;;AAAA,CAA1C,EAA0C,CAA1C;;AAGP,MAAM,IAAI,GAA2C,MAAM,wCAA3D;;AAHA,OAAO,aAAP,CAKe,IALf,E;;;;;;;;;;;ACAA;AAAO,MAA4B,KAA5B,CAAkC,OAAlC,EAA0C;AAAA;AAAA;AAAA;;AAAA,CAA1C,EAA0C,CAA1C;AAA0C;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAGjD,MAAM,MAAM,GAAsB,MAChC,oBAAC,MAAD;AAAQ,QAAM,MAAd;AAAe,MAAI,MAAnB;AAAoB,OAAK,EAAE;AAAE,mBAAe,EAAE;AAAnB;AAA3B,GACE,oBAAC,cAAD;AAAgB,MAAI,EAAC;AAArB,aADF,CADF;;AAHA,OAAO,aAAP,CASe,MATf,E;;;;;;;;;;;ACAA;AAAO,MAA4B,KAA5B,CAAkC,OAAlC,EAA0C;AAAA;AAAA;AAAA;;AAAA,CAA1C,EAA0C,CAA1C;AAA0C;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAWjD,MAAM,IAAI,GAAU,CAClB;AACE,MAAI,EAAE,MADR;AAEE,OAAK,EAAE,OAFT;AAGE,MAAI,EAAE;AAHR,CADkB,EAMlB;AACE,MAAI,EAAE,UADR;AAEE,OAAK,EAAE,MAFT;AAGE,MAAI,EAAE;AAHR,CANkB,EAWlB;AACE,MAAI,EAAE,SADR;AAEE,OAAK,EAAE,QAFT;AAGE,MAAI,EAAE;AAHR,CAXkB,EAgBlB;AACE,MAAI,EAAE,OADR;AAEE,OAAK,EAAE,MAFT;AAGE,MAAI,EAAE;AAHR,CAhBkB,CAApB;;AAuBA,MAAM,OAAO,GAA2C;AAAA,MAAC;AAAE;AAAF,GAAD;AAAA,SACtD,oBAAC,IAAD;AAAM,YAAQ,MAAd;AAAe,QAAI,EAAC;AAApB,KACG,IAAI,CAAC,GAAL,CAAS;AAAA,QAAC;AAAE,WAAF;AAAS,UAAT;AAAe;AAAf,KAAD;AAAA,WACR,oBAAC,IAAD;AAAM,SAAG,EAAE,IAAX;AAAiB,QAAE,aAAM,IAAN;AAAnB,OACE,oBAAC,IAAD,CAAM,IAAN;AAAW,YAAM,EAAE,WAAI,IAAJ,MAAe,GAAlC;AAAuC,WAAK,EAAE,KAA9C;AAAqD,UAAI,EAAE;AAA3D,OACE,oBAAC,IAAD;AAAM,UAAI,EAAE;AAAZ,MADF,EAEG,UAAU,CAAC,IAAD,CAFb,CADF,CADQ;AAAA,GAAT,CADH,CADsD;AAAA,CAAxD;;AAlCA,OAAO,aAAP,CA+Ce,OA/Cf,E;;;;;;;;;;;ACAA;AAAO,MAA4B,KAA5B,CAAkC,OAAlC,EAA0C;AAAA;AAAA;AAAA;;AAAA,CAA1C,EAA0C,CAA1C;AAA0C;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAUjD,MAAM,eAAe,GAAsB,MACzC,iCACE,oCACE,oBAAC,MAAD,QACE,oBAAC,OAAD;AAAS,SAAO;AAAhB,EADF,CADF,CADF,EAOE,iCACE,oBAAC,OAAD,QACE,oBAAC,MAAD,QACE,oBAAC,IAAD;AAAM,MAAI,EAAC;AAAX,EADF,EAEE,oBAAC,QAAD;AAAU,MAAI,EAAC,WAAf;AAA2B,SAAO;AAAlC,EAFF,EAGE,oBAAC,OAAD;AAAS,MAAI,EAAC;AAAd,EAHF,EAIE,oBAAC,KAAD;AAAO,MAAI,EAAC;AAAZ,EAJF,CADF,CADF,CAPF,CADF;;AAVA,OAAO,aAAP,CA+Be,eA/Bf,E;;;;;;;;;;;ACAA;AAAO,MAAM,KAAN,CAAY,QAAZ,EAAqB;AAAA;AAAA;AAAA;;AAAA,CAArB,EAAqB,CAArB;AAAqB;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAS5B,MAAM,KAAK,GAA6B;AAAA,MAAC;AACvC,qBADuC;AAEvC,YAFuC;AAGvC;AAHuC,GAAD;AAAA,SAKtC;AAAK,aAAS,EAAC;AAAf,KACE,+BAAI,MAAM,CAAC,iBAAD,CAAN,CAA0B,MAA1B,CAAiC,WAAjC,CAAJ,CADF,EAEG,iBAAiB,IAAI,QAArB,IAAiC,+BAAI,QAAJ,CAFpC,CALsC;AAAA,CAAxC;;AATA,OAAO,aAAP,CAoBe,KApBf,E;;;;;;;;;;;ACAA;;AAAkB,OAAO,IAAP,CAAQ,sCAAR,EAAQ;AAAA;AAAA;AAAA;;AAAA,CAAR,EAAQ,CAAR;AAAlB;AAAO,MAAK,KAAL,CAAW,OAAX,EAAmB;AAAA;AAAA;AAAA;;AAAA,CAAnB,EAAmB,CAAnB;AAAmB;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAS1B,MAAM,QAAQ,GAAU,CACtB;AACE,QAAM,EAAE,eADV;AAEE,aAAW,EAAE;AAFf,CADsB,EAKtB;AACE,QAAM,EAAE,GADV;AAEE,aAAW,EAAE;AAFf,CALsB,EAStB;AACE,QAAM,EAAE,cADV;AAEE,aAAW,EAAE;AAFf,CATsB,EAatB;AACE,QAAM,EAAE,SADV;AAEE,aAAW,EAAE;AAFf,CAbsB,EAiBtB;AACE,QAAM,EAAE,6BADV;AAEE,aAAW,EAAE;AAFf,CAjBsB,EAqBtB,GArBsB,CAqBlB,GAAG,sBAAU,GAAV;AAAe,MAAI,EAAE;AAArB,EArBe,CAAxB;;AAuBA,MAAM,aAAa,GAAG,MACpB,oBAAC,OAAD,2BAEE,oBAAC,IAAD;AAAM,QAAM,MAAZ;AAAa,UAAQ,MAArB;AAAsB,OAAK,EAAE;AAA7B,EAFF,CADF;;AAhCA,OAAO,aAAP,CAuCe,aAvCf,E;;;;;;;;;;;ACAA;AAAO,MAA4B,KAA5B,CAAkC,OAAlC,EAA0C;AAAA;AAAA;AAAA;;AAAA,CAA1C,EAA0C,CAA1C;AAA0C;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAajD,MAAM,YAAY,GAA6B;AAAA,MAAC;AAC9C,qBAD8C;AAE9C,oBAAgB,EAAE;AAAE,WAAF;AAAS,cAAT;AAAmB;AAAnB,QAAgC;AAChD,WAAK,EAAE,SADyC;AAEhD,cAAQ,EAAE,SAFsC;AAGhD,cAAQ,EAAE;AAHsC,KAFJ;AAO9C,qBAP8C;AAQ9C;AAR8C,GAAD;AAAA,SAU7C;AAAS,aAAS,EAAC;AAAnB,KACG,QAAQ,IAAI,oBAAC,OAAD;AAAS,aAAS,EAAC;AAAnB,KAAuC,QAAvC,CADf,EAEG,KAAK,IACJ,oBAAC,OAAD;AAAS,aAAS,EAAC;AAAnB,KACE;AAAK,OAAG,oBAAa,KAAb;AAAR,IADF,CAHJ,EAOE,oBAAC,OAAD;AAAS,aAAS,EAAC;AAAnB,KACE,oBAAC,KAAD;AACE,qBAAiB,EAAE,iBADrB;AAEE,YAAQ,EAAE,QAFZ;AAGE,qBAAiB,EAAE;AAHrB,IADF,CAPF,EAcG,CAAC,KAAK,IAAI,QAAV,KACC,oBAAC,OAAD,QACE,oBAAC,MAAD;AAAQ,WAAO,MAAf;AAAgB,WAAO,EAAE,MAAM,iBAAiB;AAAhD,qBADF,CAfJ,CAV6C;AAAA,CAA/C;;AAbA,OAAO,aAAP,CA+Ce,YA/Cf,E;;;;;;;;;;;ACAA,MAAM,CAAC,MAAP,CAAa;AAAA,YAAU,EAAG,MAAC;AAAd,CAAb;;AAAO,MAAM,UAAU,GAAI,OAAD,IAA8B;AACtD,MAAI,CAAC,OAAD,IAAY,OAAO,CAAC,MAAR,KAAmB,CAAnC,EAAsC;AACpC,WAAO,CAAP;AACD;;AAED,SAAO,IAAI,CAAC,KAAL,CACL,OAAO,CAAC,MAAR,CAAe,CAAC,GAAD,EAAM,MAAN,KAAiB,GAAG,GAAG,MAAtC,EAA8C,CAA9C,IAAmD,OAAO,CAAC,MADtD,CAAP;AAGD,CARM,C;;;;;;;;;;;ACAP;AAAO,MAAK,KAAL,CAAW,OAAX,EAAmB;AAAA;AAAA;AAAA;;AAAA,CAAnB,EAAmB,CAAnB;AAAmB;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAS1B,MAAM,CAAC,OAAP,CAAe,MAAK;AAClB,QAAM,CAAC,oBAAC,MAAD,OAAD,EAAa,QAAQ,CAAC,cAAT,CAAwB,eAAxB,CAAb,CAAN;AACD,CAFD,E;;;;;;;;;;;ACWA,MAAM,OAAN,CAAM;AAAA,mBAA8B;AAA9B,CAAN;AAAA,MAAM,YAAY,GAAkB,CAClC,GADkC,EAElC,IAFkC,EAGlC,IAHkC,EAIlC,GAJkC,EAKlC,IALkC,EAMlC,IANkC,EAOlC,GAPkC,EAQlC,IARkC,EASlC,IATkC,EAUlC,GAVkC,EAWlC,IAXkC,EAYlC,IAZkC,EAalC,GAbkC,EAclC,IAdkC,EAelC,IAfkC,EAgBlC,GAhBkC,EAiBlC,IAjBkC,EAkBlC,IAlBkC,CAApC;;AAqBA,MAAM,aAAa,GAAG,MACpB,YAAY,CAAC,IAAI,CAAC,KAAL,CAAW,IAAI,CAAC,MAAL,KAAgB,YAAY,CAAC,MAAxC,CAAD,CADd;;AAGA,MAAM,aAAa,GAAG,CAAC,KAAD,EAAiB,KAAjB,KACpB,KAAK,IAAI,KAAT,GACI,KAAK,CAAC,KAAN,CAAY,EAAZ,EAAgB,IAAhB,CAAqB,SAAS,IAAI,KAAK,CAAC,QAAN,CAAe,SAAf,CAAlC,CADJ,GAEI,KAHN;;AAKO,MAAM,iBAAiB,GAAI,OAAD,IAA4B;AAC3D,QAAM,KAAK,GAAG,EAAd;AAEA,MAAI,IAAI,GAAG,EAAX;AACA,MAAI,YAAY,GAAG,EAAnB;;AACA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,OAApB,EAA6B,CAAC,EAA9B,EAAkC;AAChC,QAAI,GAAG,aAAa,EAApB;;AACA,WAAO,aAAa,CAAC,IAAD,EAAO,YAAP,CAApB,EAA0C;AACxC,UAAI,GAAG,aAAa,EAApB;AACD;;AAED,gBAAY,GAAG,IAAf;AACA,SAAK,CAAC,IAAN,CAAW,IAAX;AACD;;AAED,SAAO,KAAK,CAAC,IAAN,CAAW,GAAX,CAAP;AACD,CAhBM,C;;;;;;;;;;;ACjDP,OAAO,MAAP,CAAS;AAAM,YAAQ;AAAd,CAAT;AAAuC;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAMhC,MAAM,UAAU,GAAG,IAAI,KAAK,CAAC,UAAV,CAAqB,YAArB,CAAnB;AAEP,MAAM,CAAC,OAAP,CAAe;AACb,6BAA2B,CAAC,KAAD,EAAQ,MAAR,KAAkB;AAC3C,SAAK,CAAC,MAAD,EAAS,OAAT,CAAL;AACA,SAAK,CAAC,KAAD,EAAQ,MAAR,CAAL;AAEA,cAAU,CAAC,MAAX,CAAkB,KAAlB,EAAyB;AAAE,UAAI,EAAE;AAAE;AAAF;AAAR,KAAzB;AACD,GANY;AAOb,4BAA0B,QAAQ,IAAG;AACnC,cAAU,CAAC,MAAX,CACE;AAAE;AAAF,KADF,EAEE;AAAE,UAAI,EAAE;AAAE,cAAM,EAAE;AAAV;AAAR,KAFF,EAGE;AAAE,WAAK,EAAE;AAAT,KAHF;AAKD,GAbY;AAcb,8BAA4B,QAAQ,IAAG;AACrC,cAAU,CAAC,MAAX,CACE;AAAE;AAAF,KADF,EAEE;AAAE,UAAI,EAAE;AAAE,cAAM,EAAE;AAAV;AAAR,KAFF,EAGE;AAAE,WAAK,EAAE;AAAT,KAHF;AAKD,GApBY;AAqBb,uBAAqB,UAOhB;AAAA,QAPiB;AACpB,cADoB;AAEpB,WAFoB;AAGpB,cAHoB;AAIpB,cAJoB;AAKpB,aALoB;AAMpB;AANoB,KAOjB;AACH,UAAM,CAAC,QAAD,CAAN,CAAiB,EAAjB,CAAoB,EAApB,CAAuB,CAAvB,CAAyB,QAAzB;AACA,UAAM,CAAC,KAAD,CAAN,CAAc,EAAd,CAAiB,EAAjB,CAAoB,CAApB,CAAsB,QAAtB;AACA,UAAM,CAAC,QAAD,CAAN,CAAiB,EAAjB,CAAoB,EAApB,CAAuB,CAAvB,CAAyB,QAAzB;AACA,UAAM,CAAC,QAAD,CAAN,CAAiB,EAAjB,CAAoB,EAApB,CAAuB,CAAvB,CAAyB,QAAzB;AACA,UAAM,CAAC,OAAD,CAAN,CAAgB,EAAhB,CAAmB,EAAnB,CAAsB,CAAtB,CAAwB,QAAxB;AACA,UAAM,CAAC,IAAD,CAAN,CAAa,EAAb,CAAgB,EAAhB,CAAmB,CAAnB,CAAqB,QAArB,EANG,CAQH;;AACA;;;;AAIA,UAAM,GAAG,GAAG;AACV,eAAS,EAAE,IAAI,IAAJ,EADD;AAEV,cAFU;AAGV,WAHU;AAIV,cAJU;AAKV,cALU;AAMV,aANU;AAOV;AAPU,KAAZ;AAUA,cAAU,CAAC,MAAX,CAAkB,GAAlB;AACD,GApDY;;AAqDb,sBAAoB,IAApB,EAAwB;AACtB,SAAK,CAAC,IAAD,EAAO,MAAP,CAAL;AAEA,WAAO,UAAU,CAAC,IAAX,EAAP;AACD,GAzDY;;AA0Db,sBAAoB,WAApB,EAA+B;AAC7B,SAAK,CAAC,WAAD,EAAc,MAAd,CAAL;AAEA;;;;;;AAMA,cAAU,CAAC,MAAX,CAAkB,WAAlB;AACD;AAAC;;;;;;;;;;;;;;;;;;;;;;;AApEW,CAAf,E;;;;;;;;;;;ACRA,OAAO,MAAP,CAAS;AAAM,SAAE,EAAM;AAAd,CAAT;AAAuB,IAAgB,MAAhB;AAAgB;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAIhC,MAAM,OAAO,GAAG,IAAI,KAAK,CAAC,UAAV,CAAqB,SAArB,CAAhB;AAEP,MAAM,CAAC,OAAP,CAAe;AACb,oBAAkB,UAAoD;AAAA,QAAnD;AAAE,iBAAF;AAAe,cAAf;AAAyB,UAAzB;AAA+B,cAA/B;AAAyC;AAAzC,KAAmD;AACpE,SAAK,CAAC,QAAD,EAAW,MAAX,CAAL;AACA,SAAK,CAAC,IAAD,EAAO,OAAP,CAAL;AACA,SAAK,CAAC,IAAD,EAAO,MAAP,CAAL;;AAEA,QAAI,QAAQ,KAAK,KAAb,IAAsB,QAAQ,KAAK,KAAnC,IAA4C,QAAQ,KAAK,OAA7D,EAAsE;AACpE,WAAK,CAAC,QAAD,EAAW,MAAX,CAAL;AACD;;AAED,QAAI,QAAQ,KAAK,KAAb,IAAsB,QAAQ,KAAK,KAAvC,EAA8C;AAC5C,WAAK,CAAC,WAAD,EAAc,MAAd,CAAL;AACD,KAXmE,CAapE;;AACA;;;;;AAIA,UAAM,GAAG,GAAG;AACV,iBADU;AAEV,cAFU;AAGV,eAAS,EAAE,IAAI,IAAJ,EAHD;AAIV,UAJU;AAKV,cALU;AAMV;AANU,KAAZ;AASA,WAAO,CAAC,MAAR,CAAe,GAAf;AACD,GA7BY;AA8Bb,oBAAkB,IAAI,IAAG;AACvB,SAAK,CAAC,IAAD,EAAO,MAAP,CAAL;AAEA,WAAO,OAAO,CAAC,IAAR,EAAP;AACD,GAlCY;AAmCb,oBAAkB,QAAQ,IAAG;AAC3B,SAAK,CAAC,QAAD,EAAW,MAAX,CAAL;AAEA;;;;;;AAMA,WAAO,CAAC,MAAR,CAAe,QAAf;AACD;AA7CY,CAAf,E","file":"/app.js","sourcesContent":["import React from 'react';\nimport { setDefaults } from 'react-komposer';\nimport { Tracker } from 'meteor/tracker';\n\nimport Loader from '../components/loader';\n\nconst errorHandler = error =>\n  Meteor.isProduction ? (\n    <span>An error occurred.</span>\n  ) : (\n    <code>{JSON.stringify(error, null, 2)}</code>\n  );\n\nconst compose = setDefaults({\n  errorHandler,\n  loadingHandler: Loader,\n  pure: true\n});\n\nconst getTrackerLoader = reactiveMapper => {\n  return (props, onData, env) => {\n    let trackerCleanup = null;\n    const handler = Tracker.nonreactive(() => {\n      return Tracker.autorun(() => {\n        // assign the custom clean-up function.\n        trackerCleanup = reactiveMapper(props, onData, env);\n      });\n    });\n\n    return () => {\n      if (typeof trackerCleanup === 'function') trackerCleanup();\n      return handler.stop();\n    };\n  };\n};\n\nexport const composer = (reactiveMapper, options) => {\n  return compose(\n    getTrackerLoader(reactiveMapper),\n    options\n  );\n};\n","import { Meteor } from 'meteor/meteor';\n\nimport { Results } from '/collections/results';\nimport { composer } from '../../lib/composer';\nimport ResultsComponent from './results';\n\n// @ts-ignore\nconst compose = (props, onData) => {\n  const subscriptions = [Meteor.subscribe('results')];\n\n  if (subscriptions.every(subscription => subscription.ready())) {\n    const results = Results.find({}).fetch();\n    onData(null, { results });\n  }\n};\n\nexport default composer(compose)(ResultsComponent);\n","import React, { Component } from 'react';\nimport { Table } from 'semantic-ui-react';\nimport moment from 'moment';\n\nconst columns = [\n  {\n    label: 'Date',\n    value: 'createdAt',\n    format: value => moment(value).format('DD-MM-YYYY HH:ss')\n  },\n  {\n    label: 'Category',\n    value: 'category'\n  },\n  {\n    label: 'Scramble',\n    value: 'scramble'\n  },\n  {\n    label: 'Time',\n    value: 'time',\n    format: value =>\n      (value / 1000).toLocaleString('en-US', {\n        minimumFractionDigits: 3,\n        maximumFractionDigits: 3\n      }) + 's'\n  }\n];\n\nclass ResultsTab extends Component {\n  constructor(args) {\n    super(args);\n  }\n\n  renderHeader = () => (\n    <Table.Row>\n      {columns.map(({ label }, index) => (\n        <Table.HeaderCell key={index}>{label}</Table.HeaderCell>\n      ))}\n    </Table.Row>\n  );\n\n  renderRow = row => (\n    <Table.Row>\n      {columns.map(({ value, format = value => value }, index) => (\n        <Table.Cell key={index}>{format(row[value])}</Table.Cell>\n      ))}\n    </Table.Row>\n  );\n\n  render() {\n    const { results } = this.props;\n\n    return (\n      <Table\n        inverted\n        headerRow={this.renderHeader}\n        tableData={results}\n        renderBodyRow={this.renderRow}\n      />\n    );\n  }\n}\n\nexport default ResultsTab;\n","import { Meteor } from 'meteor/meteor';\n\nimport { Algorithms } from '../../../../collections/algorithms';\nimport { Results } from '../../../../collections/results';\nimport { composer } from '../../lib/composer';\nimport Training from './training';\n\n// TODO to be moved\nconst categories = [\n  {\n    label: 'OLL',\n    value: 'OLL',\n    randomizableAlgorithm: true\n  },\n  {\n    label: 'PLL',\n    value: 'PLL',\n    randomizableAlgorithm: true\n  },\n  {\n    label: '3x3x3',\n    value: '3x3x3',\n    randomizableScramble: true\n  },\n  {\n    label: 'OLL Attack',\n    value: 'OLL-attack',\n    algorithmsCategory: 'OLL',\n    settingsDisabled: true\n  },\n  {\n    label: 'PLL Attack',\n    value: 'PLL-attack',\n    algorithmsCategory: 'PLL',\n    settingsDisabled: true\n  }\n];\n\nconst compose = (props, onData) => {\n  const subscriptions = [\n    Meteor.subscribe('algorithms'),\n    Meteor.subscribe('results')\n  ];\n\n  if (subscriptions.every(subscription => subscription.ready())) {\n    const algorithms = Algorithms.find({}).fetch();\n    const results = Results.find({}).fetch();\n\n    results.forEach(result => {\n      const algorithm = algorithms.find(alg => alg._id === result.algorithmId);\n      const category = categories.find(cat => cat.value === result.category);\n      if (algorithm) {\n        algorithm.results = (algorithm.results || []).concat(result.time);\n      }\n      if (category) {\n        category.results = (category.results || []).concat(result.time);\n      }\n    });\n\n    onData(null, { algorithms, categories });\n  }\n};\n\nexport default composer(compose)(Training);\n","import React, { Component } from 'react';\nimport moment from 'moment';\nimport { Grid, Menu } from 'semantic-ui-react';\nimport { SemanticToastContainer, toast } from 'react-semantic-toasts';\n\nimport AlgSettings from '../algSettings';\nimport Averages from '../averages';\nimport TipsAndTricks from '../tipsAndTricks';\nimport TrainingMain from '../trainingMain';\n\nimport { getRandomScramble } from '/lib/global-helpers';\n\n// TODO to be moved\nconst getRandomEntry = (array, excludeId) => {\n  const index = Math.floor(Math.random() * array.length);\n  const entry = array[index];\n\n  if (array.length > 1 && excludeId && entry._id === excludeId) {\n    return getRandomEntry(array, excludeId);\n  }\n\n  return entry;\n};\n\n// TODO to be moved\nconst toastNoActiveAlgorithms = () =>\n  toast({\n    title: 'No active algorithms',\n    type: 'warning',\n    description:\n      'Randomizing algorithms pauzed until you select at least one algorithm',\n    time: 5000\n  });\n\nclass Training extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      blocked: {\n        control: false,\n        delete: false,\n        shift: false,\n        space: false\n      },\n      currentAlgorithm: {\n        category: '',\n        image: '',\n        scramble: '',\n        solution: '',\n        subtype: '',\n        type: ''\n      },\n      currentAlgorithmId: 0,\n      currentCategory: this.props.categories[0],\n      isVisibleSolution: false,\n      settingsOpened: true,\n      timerCurrentValue: 0,\n      timerStartValue: 0,\n      timerStatus: 'resetted'\n    };\n  }\n\n  componentDidMount() {\n    this.onChangeAlgorithm();\n\n    console.log('did mount');\n\n    document.body.addEventListener('keydown', this.onKeyDown);\n    document.body.addEventListener('keypress', this.onKeyPress);\n    document.body.addEventListener('keyup', this.onKeyUp);\n  }\n\n  componentWillUnmount() {\n    document.body.removeEventListener('keydown', this.onKeyDown);\n    document.body.removeEventListener('keypress', this.onKeyPress);\n    document.body.removeEventListener('keyup', this.onKeyUp);\n  }\n\n  onChangeAlgorithm = () => {\n    const { algorithms } = this.props;\n    const { currentAlgorithmId, currentCategory } = this.state;\n\n    this.onReset();\n\n    let newAlgorithm;\n    if (currentCategory.randomizableAlgorithm) {\n      const activeAlgorithms = algorithms.filter(\n        algorithm =>\n          !!algorithm.active && algorithm.category === currentCategory.value\n      );\n\n      if (!activeAlgorithms.length) {\n        toastNoActiveAlgorithms();\n      }\n\n      newAlgorithm = getRandomEntry(activeAlgorithms, currentAlgorithmId);\n    } else if (currentCategory.randomizableScramble) {\n      const scramble = getRandomScramble(25);\n      newAlgorithm = { category: currentCategory.value, scramble };\n    }\n\n    this.setState({\n      currentAlgorithm: newAlgorithm,\n      currentAlgorithmId: newAlgorithm && newAlgorithm._id // alg may be undefined, e.g. for {OLL,PLL}-Attack\n    });\n  };\n\n  onChangeCategory = category => {\n    this.setState({ currentCategory: category }, () => {\n      this.onChangeAlgorithm();\n    });\n  };\n\n  onToggleActive = algorithm => {\n    Meteor.call('algorithms.toggleActive', algorithm._id, !algorithm.active);\n  };\n\n  onActivateAll = () => {\n    const { currentCategory } = this.state;\n    Meteor.call('algorithms.activateAll', currentCategory.value);\n  };\n\n  onDeactivateAll = () => {\n    Meteor.call('algorithms.deactivateAll');\n    toastNoActiveAlgorithms();\n  };\n\n  onKeyDown = event => {\n    const blocked = this.state.blocked;\n\n    if ((event.key === 'Enter' || event.key === ' ') && !blocked.space) {\n      event.preventDefault();\n      this.onGoToNextStatus('down');\n      this.setState({ blocked: { ...blocked, space: true } });\n    } else if (event.key === 'r') {\n      event.preventDefault();\n      this.onChangeAlgorithm();\n    } else if (event.key === 'Shift' && !blocked.shift) {\n      event.preventDefault();\n      this.setState({\n        blocked: { ...blocked, shift: true },\n        isVisibleSolution: true\n      });\n    } else if (event.key === 'Control' && !blocked.control) {\n      event.preventDefault();\n      this.setState({ blocked: { ...blocked, control: true } });\n    } else if (\n      (event.key === 'Backspace' ||\n        event.key === 'Delete' ||\n        event.key === 'Escape') &&\n      !blocked.delete\n    ) {\n      event.preventDefault();\n      this.setState({ blocked: { ...blocked, delete: true } });\n    }\n  };\n\n  onKeyPress = event => {\n    if (event.key === ' ') {\n      event.preventDefault();\n    }\n  };\n\n  onKeyUp = event => {\n    const { blocked, isVisibleSolution } = this.state;\n\n    if (event.key === 'Enter' || event.key === ' ') {\n      this.onGoToNextStatus('up');\n      this.setState({ blocked: { ...blocked, space: false } });\n    } else if (event.key === 'Shift') {\n      this.setState({\n        blocked: { ...blocked, shift: false },\n        isVisibleSolution: false\n      });\n    } else if (event.key === 'Control') {\n      this.setState({\n        blocked: { ...blocked, control: false },\n        isVisibleSolution: !isVisibleSolution\n      });\n    } else if (\n      event.key === 'Backspace' ||\n      event.key === 'Delete' ||\n      event.key === 'Escape'\n    ) {\n      this.onChangeAlgorithm();\n      this.setState({ blocked: { ...blocked, delete: false } });\n    }\n  };\n\n  onGoToNextStatus = upOrDown => {\n    const {\n      blocked,\n      currentAlgorithm,\n      currentCategory,\n      timerCurrentValue,\n      timerStatus\n    } = this.state;\n\n    if (timerStatus === 'resetted' && upOrDown === 'down' && !blocked.space) {\n      this.setState({ timerStatus: 'pre-inspection' });\n    } else if (timerStatus === 'pre-inspection' && upOrDown === 'up') {\n      this.setState({\n        timerStatus: 'timer-on',\n        timerStartValue: moment().valueOf()\n      });\n      this.timer = setInterval(this.updateTimerTime, 1);\n    } else if (\n      timerStatus === 'timer-on' &&\n      upOrDown === 'down' &&\n      !blocked.space\n    ) {\n      clearInterval(this.timer);\n      this.setState({ timerStatus: 'timer-off' });\n    } else if (\n      timerStatus === 'timer-off' &&\n      upOrDown === 'down' &&\n      !blocked.space\n    ) {\n      /* Save the time */\n      const result = {\n        ...(currentAlgorithm && {\n          algorithmId: currentAlgorithm._id,\n          scramble: currentAlgorithm.scramble\n        }),\n        category: currentCategory.value,\n        time: timerCurrentValue\n      };\n\n      Meteor.call('results.insert', result, () => this.onChangeAlgorithm());\n    }\n  };\n\n  onReset = () => {\n    clearInterval(this.timer);\n    this.setState({ timerStatus: 'resetted', timerCurrentValue: 0 });\n  };\n\n  updateTimerTime = () => {\n    this.setState(state => ({\n      timerCurrentValue: moment().valueOf() - state.timerStartValue\n    }));\n  };\n\n  render() {\n    const {\n      state: {\n        currentAlgorithm,\n        currentCategory,\n        isVisibleSolution,\n        timerCurrentValue\n      },\n      props: { algorithms, categories },\n      onActivateAll,\n      onToggleActive,\n      onChangeAlgorithm,\n      onChangeCategory,\n      onDeactivateAll\n    } = this;\n\n    const currentAlgorithms = algorithms.filter(\n      algorithm => algorithm.category === currentCategory.value\n    );\n\n    return (\n      <>\n        <SemanticToastContainer />\n        <Grid>\n          <Grid.Column width={4}>\n            <Menu className=\"left-menu\" inverted tabular vertical>\n              {categories.map(category => (\n                <Menu.Item\n                  key={category.value}\n                  name={category.label}\n                  active={currentCategory.value === category.value}\n                  onClick={() => onChangeCategory(category)}\n                />\n              ))}\n            </Menu>\n          </Grid.Column>\n          <Grid.Column width={8} textAlign=\"center\">\n            <TrainingMain\n              currentAlgorithm={currentAlgorithm}\n              isVisibleSolution={isVisibleSolution}\n              onChangeAlgorithm={onChangeAlgorithm}\n              timerCurrentValue={timerCurrentValue}\n            />\n          </Grid.Column>\n          <Grid.Column width={4}>\n            <Averages\n              currentAlgorithm={currentAlgorithm}\n              currentCategory={currentCategory}\n            />\n            <TipsAndTricks />\n          </Grid.Column>\n        </Grid>\n        {this.state.settingsOpened && (\n          <AlgSettings\n            algorithms={currentAlgorithms}\n            currentCategory={currentCategory}\n            onActivateAll={onActivateAll}\n            onToggleActive={onToggleActive}\n            onDeactivateAll={onDeactivateAll}\n          />\n        )}\n      </>\n    );\n  }\n}\n\nexport default Training;\n","import React, { FunctionComponent } from 'react';\nimport { RouteComponentProps } from '@reach/router';\n\nconst About: FunctionComponent<RouteComponentProps> = () => <div>About</div>;\n\nexport default About;\n","import React, { FunctionComponent, useState } from 'react';\nimport { Button, List, Segment } from 'semantic-ui-react';\nimport groupBy from 'lodash/groupBy';\nimport Slider, { createSliderWithTooltip } from 'rc-slider';\nimport { getAverage } from '../../utils';\nimport { algorithm } from '../../../server/imports/const';\n\nconst SliderTooltip = createSliderWithTooltip(Slider);\n\ntype algorithmWithResults = algorithm & {\n  results: any; // TODO\n};\n\ntype Props = {\n  algorithms: algorithmWithResults[];\n  currentCategory: any; // TODO\n  onActivateAll: () => void;\n  onToggleActive: (algorithm: algorithm) => void;\n  onDeactivateAll: () => void;\n};\n\nconst AlgSettings: FunctionComponent<Props> = ({\n  algorithms,\n  currentCategory: { settingsDisabled },\n  onActivateAll,\n  onToggleActive,\n  onDeactivateAll\n}) => {\n  const [detailsLevel, setDetailsLevel] = useState(1);\n\n  const algorithmsGrouped =\n    detailsLevel === 0\n      ? groupBy(algorithms, 'category')\n      : detailsLevel === 1\n      ? groupBy(algorithms, 'type')\n      : detailsLevel === 2\n      ? groupBy(algorithms, 'subtype')\n      : [];\n\n  return (\n    <section\n      className={`algorithm-settings${settingsDisabled ? ' disabled' : ''}`}\n    >\n      <List divided verticalAlign=\"middle\">\n        <List.Item>\n          <List.Content floated=\"right\">\n            <div className=\"grouping-level\">\n              <div className=\"title\">Grouping level</div>\n              <SliderTooltip\n                min={0}\n                max={2}\n                onChange={setDetailsLevel}\n                tipFormatter={(value: number): string =>\n                  ['None', 'General', 'Precise'][value]\n                }\n                tipProps={{\n                  placement: 'bottom',\n                  visible: true\n                }}\n                value={detailsLevel}\n              />\n            </div>\n          </List.Content>\n          <List.Content>\n            {!settingsDisabled && (\n              <div className=\"controls\">\n                <Button\n                  secondary\n                  onClick={settingsDisabled ? undefined : onActivateAll}\n                >\n                  Select all\n                </Button>\n                <Button\n                  secondary\n                  onClick={settingsDisabled ? undefined : onDeactivateAll}\n                >\n                  Unselect all\n                </Button>\n              </div>\n            )}\n          </List.Content>\n        </List.Item>\n      </List>\n\n      {Object.entries(algorithmsGrouped).map(([name, values], index) => (\n        <Segment key={index}>\n          <h5>{name}</h5>\n          {values.map(algorithm => (\n            <div\n              key={algorithm._id}\n              className={`algorithm${\n                settingsDisabled || algorithm.active ? ' active' : ''\n              }`}\n              onClick={() =>\n                settingsDisabled ? null : onToggleActive(algorithm)\n              }\n            >\n              <img alt={algorithm.name} src={`/images/${algorithm.image}`} />\n              <div className=\"results-average\">\n                {getAverage(algorithm && algorithm.results)}\n              </div>\n            </div>\n          ))}\n        </Segment>\n      ))}\n    </section>\n  );\n};\n\nexport default AlgSettings;\n","import React, { FunctionComponent } from 'react';\nimport { List, Segment } from 'semantic-ui-react';\nimport moment from 'moment';\n\nimport { getAverage } from '../../utils';\nimport { algorithm } from '../../../server/imports/const';\n\ntype algorithmWithResults = algorithm & {\n  results: any; // TODO\n};\n\ntype Props = {\n  currentAlgorithmAvg: number;\n  currentAlgorithm?: algorithmWithResults;\n  currentCategory: any; // TODO\n  currentCategoryAvg: number;\n};\n\nconst Averages: FunctionComponent<Props> = ({\n  currentAlgorithm,\n  currentCategory\n}) => {\n  const currentAlgorithmAvg = getAverage(\n    currentAlgorithm && currentAlgorithm.results\n  );\n  const currentCategoryAvg = getAverage(\n    currentCategory && currentCategory.results\n  );\n\n  const averages = ['OLL', 'PLL'].includes(currentCategory.value)\n    ? [\n        {\n          header: 'Average for this algorithm',\n          description: currentAlgorithmAvg\n            ? moment(currentAlgorithmAvg).format('ss:SSS')\n            : 'No records'\n        },\n        {\n          header: `Average for all ${currentCategory.value} algorithms`,\n          description: currentCategoryAvg\n            ? moment(currentCategoryAvg).format('ss:SSS')\n            : 'No records'\n        }\n      ]\n    : [\n        {\n          header: `Average for all in ${currentCategory.value}`,\n          description: currentCategoryAvg\n            ? moment(currentCategoryAvg).format('mm:ss:SSS')\n            : 'No records'\n        }\n      ];\n\n  return (\n    <Segment className=\"averages\">\n      <List inverted items={averages} />\n    </Segment>\n  );\n};\n\nexport default Averages;\n","import React, { FunctionComponent } from 'react';\nimport { RouteComponentProps } from '@reach/router';\n\nconst Home: FunctionComponent<RouteComponentProps> = () => <div>Home</div>;\n\nexport default Home;\n","import React, { FunctionComponent } from 'react';\nimport { Dimmer, Loader as LoaderSemantic } from 'semantic-ui-react';\n\nconst Loader: FunctionComponent = () => (\n  <Dimmer active page style={{ backgroundColor: 'rgba(0, 0, 0, 0.55)' }}>\n    <LoaderSemantic size=\"large\">Loading</LoaderSemantic>\n  </Dimmer>\n);\n\nexport default Loader;\n","import React, { FunctionComponent } from 'react';\nimport { Icon, Menu, SemanticCOLORS, SemanticICONS } from 'semantic-ui-react';\nimport { Link, RouteComponentProps } from '@reach/router';\nimport capitalize from 'lodash/capitalize';\n\ntype tab = {\n  name: string;\n  color: SemanticCOLORS;\n  icon: SemanticICONS;\n};\n\nconst tabs: tab[] = [\n  {\n    name: 'home',\n    color: 'green',\n    icon: 'home'\n  },\n  {\n    name: 'training',\n    color: 'blue',\n    icon: 'book'\n  },\n  {\n    name: 'results',\n    color: 'orange',\n    icon: 'lightning'\n  },\n  {\n    name: 'about',\n    color: 'teal',\n    icon: 'idea'\n  }\n];\n\nconst MenuTop: FunctionComponent<RouteComponentProps> = ({ uri }) => (\n  <Menu inverted icon=\"labeled\">\n    {tabs.map(({ color, icon, name }) => (\n      <Link key={name} to={`/${name}`}>\n        <Menu.Item active={`/${name}` === uri} color={color} name={name}>\n          <Icon name={icon} />\n          {capitalize(name)}\n        </Menu.Item>\n      </Link>\n    ))}\n  </Menu>\n);\n\nexport default MenuTop;\n","import React, { FunctionComponent } from 'react';\nimport { Segment } from 'semantic-ui-react';\nimport { Router } from '@reach/router';\n\nimport About from './about';\nimport Home from './home';\nimport MenuTop from './menuTop';\nimport Results from './results';\nimport Training from './training';\n\nconst RouterComponent: FunctionComponent = () => (\n  <div>\n    <header>\n      <Router>\n        <MenuTop default />\n      </Router>\n    </header>\n\n    <nav>\n      <Segment>\n        <Router>\n          <Home path=\"/home\" />\n          <Training path=\"/training\" default />\n          <Results path=\"/results\" />\n          <About path=\"/about\" />\n        </Router>\n      </Segment>\n    </nav>\n  </div>\n);\n\nexport default RouterComponent;\n","import moment from 'moment';\nimport React, { FunctionComponent } from 'react';\n\ntype Props = {\n  isVisibleSolution: boolean;\n  solution?: string;\n  timerCurrentValue: number;\n};\n\nconst Timer: FunctionComponent<Props> = ({\n  isVisibleSolution,\n  solution,\n  timerCurrentValue\n}) => (\n  <div className=\"timer\">\n    <p>{moment(timerCurrentValue).format('mm:ss:SSS')}</p>\n    {isVisibleSolution && solution && <p>{solution}</p>}\n  </div>\n);\n\nexport default Timer;\n","import React from 'react';\nimport { List, Segment } from 'semantic-ui-react';\n\ntype tip = {\n  description: string;\n  header: string;\n  icon: string;\n};\n\nconst tipsList: tip[] = [\n  {\n    header: 'Enter / Space',\n    description: '... -> start timer -> stop timer -> save result -> ...'\n  },\n  {\n    header: 'r',\n    description: 'Randomize new algorithm'\n  },\n  {\n    header: 'Shift (hold)',\n    description: 'Take a peek at the solution'\n  },\n  {\n    header: 'Control',\n    description: 'Show / hide the solution'\n  },\n  {\n    header: 'Backspace / Delete / Escape',\n    description: \"Reset timer - don't save the solution\"\n  }\n].map(tip => ({ ...tip, icon: 'lightbulb outline' }));\n\nconst TipsAndTricks = () => (\n  <Segment>\n    Shortcuts list:\n    <List celled inverted items={tipsList} />\n  </Segment>\n);\n\nexport default TipsAndTricks;\n","import React, { FunctionComponent } from 'react';\nimport { Button, Segment } from 'semantic-ui-react';\n\nimport Timer from './timer';\nimport { algorithm } from '../../../server/imports/const';\n\ntype Props = {\n  onChangeAlgorithm: () => void;\n  currentAlgorithm?: algorithm;\n  isVisibleSolution: boolean;\n  timerCurrentValue: number;\n};\n\nconst TrainingMain: FunctionComponent<Props> = ({\n  onChangeAlgorithm,\n  currentAlgorithm: { image, scramble, solution } = {\n    image: undefined,\n    scramble: undefined,\n    solution: undefined\n  },\n  isVisibleSolution,\n  timerCurrentValue\n}) => (\n  <section className=\"training-main\">\n    {scramble && <Segment className=\"scramble-segment\">{scramble}</Segment>}\n    {image && (\n      <Segment className=\"image-segment\">\n        <img src={`/images/${image}`} />\n      </Segment>\n    )}\n    <Segment className=\"timer-segment\">\n      <Timer\n        isVisibleSolution={isVisibleSolution}\n        solution={solution}\n        timerCurrentValue={timerCurrentValue}\n      />\n    </Segment>\n    {(image || solution) && (\n      <Segment>\n        <Button primary onClick={() => onChangeAlgorithm()}>\n          Randomize new\n        </Button>\n      </Segment>\n    )}\n  </section>\n);\n\nexport default TrainingMain;\n","export const getAverage = (results: number[]): number => {\n  if (!results || results.length === 0) {\n    return 0;\n  }\n\n  return Math.round(\n    results.reduce((sum, result) => sum + result, 0) / results.length\n  );\n};\n","import React from 'react';\nimport { Meteor } from 'meteor/meteor';\nimport { render } from 'react-dom';\n\nimport Router from './imports/components/router';\n\nimport 'rc-slider/assets/index.css';\nimport 'react-semantic-toasts/styles/react-semantic-alert.css';\n\nMeteor.startup(() => {\n  render(<Router />, document.getElementById('render-target'));\n});\n","type allowedMove =\n  | 'F'\n  | \"F'\"\n  | 'F2'\n  | 'B'\n  | \"B'\"\n  | 'B2'\n  | 'R'\n  | \"R'\"\n  | 'R2'\n  | 'L'\n  | \"L'\"\n  | 'L2'\n  | 'U'\n  | \"U'\"\n  | 'U2'\n  | 'D'\n  | \"D'\"\n  | 'D2';\n\nconst allowedMoves: allowedMove[] = [\n  'F',\n  \"F'\",\n  'F2',\n  'B',\n  \"B'\",\n  'B2',\n  'R',\n  \"R'\",\n  'R2',\n  'L',\n  \"L'\",\n  'L2',\n  'U',\n  \"U'\",\n  'U2',\n  'D',\n  \"D'\",\n  'D2'\n];\n\nconst getRandomMove = (): allowedMove =>\n  allowedMoves[Math.floor(Math.random() * allowedMoves.length)];\n\nconst movesConflict = (moveA?: string, moveB?: string): boolean =>\n  moveA && moveB\n    ? moveA.split('').some(character => moveB.includes(character))\n    : false;\n\nexport const getRandomScramble = (movesNr: number): string => {\n  const moves = [];\n\n  let move = '';\n  let previousMove = '';\n  for (let i = 0; i < movesNr; i++) {\n    move = getRandomMove();\n    while (movesConflict(move, previousMove)) {\n      move = getRandomMove();\n    }\n\n    previousMove = move;\n    moves.push(move);\n  }\n\n  return moves.join(' ');\n};\n","import { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\nimport { check } from 'meteor/check';\n\nimport { expect } from 'chai';\n\nexport const Algorithms = new Mongo.Collection('algorithms');\n\nMeteor.methods({\n  'algorithms.toggleActive': (algId, active) => {\n    check(active, Boolean);\n    check(algId, String);\n\n    Algorithms.update(algId, { $set: { active } });\n  },\n  'algorithms.activateAll': category => {\n    Algorithms.update(\n      { category },\n      { $set: { active: true } },\n      { multi: true }\n    );\n  },\n  'algorithms.deactivateAll': category => {\n    Algorithms.update(\n      { category },\n      { $set: { active: false } },\n      { multi: true }\n    );\n  },\n  'algorithms.insert': ({\n    category,\n    image,\n    scramble,\n    solution,\n    subtype,\n    type\n  }) => {\n    expect(category).to.be.a('string');\n    expect(image).to.be.a('string');\n    expect(scramble).to.be.a('string');\n    expect(solution).to.be.a('string');\n    expect(subtype).to.be.a('string');\n    expect(type).to.be.a('string');\n\n    // Make sure the user is logged in before inserting a algorithm\n    /* if (! Meteor.userId()) {\n         throw new Meteor.Error('not-authorized');\n     }*/\n\n    const doc = {\n      createdAt: new Date(),\n      category,\n      image,\n      scramble,\n      solution,\n      subtype,\n      type\n    };\n\n    Algorithms.insert(doc);\n  },\n  'algorithms.search'(text) {\n    check(text, String);\n\n    return Algorithms.find();\n  },\n  'algorithms.remove'(algorithmId) {\n    check(algorithmId, String);\n\n    /*const algorithm = Algorithms.findOne(algorithmId);\n    if (algorithm.private && algorithm.owner !== Meteor.userId()) {\n      // If the algorithm is private, make sure only the owner can delete it\n          throw new Meteor.Error('not-authorized');\n    }*/\n\n    Algorithms.remove(algorithmId);\n  } /*,\n    'algorithms.setChecked'(algorithmId, setChecked) {\n        check(algorithmId, String);\n        check(setChecked, Boolean);\n\n        const algorithm = Algorithms.findOne(algorithmId);\n        if (algorithm.private && algorithm.owner !== Meteor.userId()) {\n              // If the algorithm is private, make sure only the owner can check it off\n                  throw new Meteor.Error('not-authorized');\n            }\n\n        Algorithms.update(algorithmId, { $set: { checked: setChecked } });\n    },\n    'algorithms.setPrivate'(algorithmId, setToPrivate) {\n        check(algorithmId, String);\n        check(setToPrivate, Boolean);\n\n        const algorithm = Algorithms.findOne(algorithmId);\n\n        // Make sure only the algorithm owner can make a algorithm private\n        if (algorithm.owner !== Meteor.userId()) {\n            throw new Meteor.Error('not-authorized');\n        }\n\n        Algorithms.update(algorithmId, { $set: { private: setToPrivate } });\n    },*/\n});\n","import { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\nimport { check } from 'meteor/check';\n\nexport const Results = new Mongo.Collection('results');\n\nMeteor.methods({\n  'results.insert': ({ algorithmId, category, real, scramble, time }) => {\n    check(category, String);\n    check(real, Boolean);\n    check(time, Number);\n\n    if (category === 'OLL' || category === 'PLL' || category === '3x3x3') {\n      check(scramble, String);\n    }\n\n    if (category === 'OLL' || category === 'PLL') {\n      check(algorithmId, String);\n    }\n\n    // Make sure the user is logged in before inserting a result\n    /* if (! Meteor.userId()) {\n     throw new Meteor.Error('not-authorized');\n     }*/\n\n    const doc = {\n      algorithmId,\n      category,\n      createdAt: new Date(),\n      real,\n      scramble,\n      time\n    };\n\n    Results.insert(doc);\n  },\n  'results.search': text => {\n    check(text, String);\n\n    return Results.find();\n  },\n  'results.remove': resultId => {\n    check(resultId, String);\n\n    /*const result = Results.findOne(resultId);\n     if (result.private && result.owner !== Meteor.userId()) {\n     // If the result is private, make sure only the owner can delete it\n     throw new Meteor.Error('not-authorized');\n     }*/\n\n    Results.remove(resultId);\n  }\n});\n"]}}]